{"version":3,"file":"/js/gutenberg.js","mappings":"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","sources":["webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/index.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://good-guitarist/./assets/src/scripts/blocks/group/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockSave.jsx","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://good-guitarist/./assets/src/scripts/components/SidebarCta.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/utils.js","webpack://good-guitarist/external window [\"wp\",\"element\"]","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://good-guitarist/webpack/bootstrap","webpack://good-guitarist/webpack/runtime/define property getters","webpack://good-guitarist/webpack/runtime/hasOwnProperty shorthand","webpack://good-guitarist/webpack/runtime/make namespace object","webpack://good-guitarist/./assets/src/scripts/gutenberg.js"],"sourcesContent":["const { TextControl, Button } = wp.components;\nconst { useBlockProps, MediaUpload, MediaUploadCheck } = wp.blockEditor;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({attributes, setAttributes}) => {\n    const {url, description, buttonText, imageId, imageUrl} = attributes;\n    const blockProps = useBlockProps();\n\n    const onSelectMedia = (newImage) => {\n        setAttributes({\n            imageId: newImage.id,\n            imageUrl: newImage.url\n        });\n    }\n\n    const removeMedia = () => {\n        setAttributes({\n            imageId: 0,\n            imageUrl: ''\n        });\n    }\n\n    return (\n        <div { ...blockProps }>\n            <TextControl\n                label={__('Description')}\n                value={description}\n                onChange={(newValue) => setAttributes({description: newValue})}\n            />\n            <TextControl\n                label={__('URL')}\n                value={url}\n                onChange={(newValue) => setAttributes({url: newValue})}\n            />\n            <TextControl\n                label={__('Button text (if nothing is entered, button text will be \"Click here\")')}\n                value={buttonText}\n                onChange={(newValue) => setAttributes({buttonText: newValue})}\n            />\n            <div className=\"media-upload-component\">\n                <label className=\"image-label\">{__('Call to action thumbnail (if no image is chosen, a default image will be used)')}</label>\n                { imageUrl && <img className=\"course-image\" src={imageUrl} /> }\n                <MediaUploadCheck>\n                    <MediaUpload\n                        onSelect={onSelectMedia}\n                        allowedTypes={ ['image'] }\n                        render={({open}) => (\n                            <Button\n                            className={0 === imageId ? 'select-image-button' : 'select-image-button button-hidden'}\n                            onClick={open}\n                            >\n                                {imageId == 0 && __('Choose an image')}\n                            </Button>\n                        )}\n                        />\n                </MediaUploadCheck>\n                {imageId !== 0 &&\n                    <MediaUploadCheck>\n                        <Button onClick={removeMedia} isLink isDestructive>{__('Remove image')}</Button>\n                    </MediaUploadCheck>\n                }\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\n\nregisterBlockType( 'gutenberg-good-guitarist/cta-template', {\n    title: 'Call to Action Template',\n    icon: 'admin-customizer',\n    category: 'text',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\timageId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n    edit: BlockEdit,\n    save: () => null\n});","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const { addFilter } = wp.hooks;\n\n/**\n * Modify the Gutenberg group block.\n * \n * @param {*} settings \n * @returns \n */\nconst modifyGroupBlock = (settings) => {\n\tif (settings.name !== 'core/group') {\n        return settings\n    }\n\n    const newSettings = {\n        ...settings,\n    }\n\n    return settings;\n}\n\n\naddFilter(\n    'blocks.registerBlockType',\n    'good-guitarist/modify-group-block',\n    modifyGroupBlock\n)\n","const { registerBlockType } = wp.blocks;\nconst { Fragment, useState } = wp.element;\nconst {\n\tPlainText,\n\tRichText,\n\tMediaUpload,\n\tBlockControls,\n\tInspectorControls,\n\tColorPalette,\n\tgetColorClass\n} = wp.editor;\nconst { IconButton, RangeControl, PanelBody, SelectControl } = wp.components;\nconst { useSelect } = wp.data;\nconst { parse } = wp.blockSerializationDefaultParser;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({ attributes, className, setAttributes }) => {\n    const { selectedCourseId  } = attributes;\n\n    const courseData = useSelect((select) => {\n        return select('core').getEntityRecords('postType', 'course');\n    });\n\n    const isLoading = useSelect((select) => {\n        return select('core/data').isResolving('core', 'getEntityRecords', [\n            'postType', 'course'\n        ]);\n    });\n\n    const courseOptions = [\n        { label: 'Select a call to action', value: null, default: true }\n    ];\n    const courseDetails = {};\n    if ( courseData ) {\n        courseData.forEach((course) => {\n            if (course.id) {\n                const parsedBlocks = parse(course.content.raw);\n                /**\n                 * There may be multiple blocks in the course post.\n                 *\n                 * Find the course template block(which should be the first)\n                 * and get its attributes.\n                 */\n                const courseTemplateBlock = parsedBlocks.find(block => 'gutenberg-good-guitarist/course-template' === block.blockName);\n                const courseAtts = courseTemplateBlock.attrs;\n                if (courseAtts) {\n                    // Create options for SelectControl.\n                    courseOptions.push({label: course.title.raw, value: course.id});\n                    // Keep separate courseDetail objects used to populate attributes.\n                    courseDetails[course.id] = {\n                        title: course.title.raw,\n                        description: courseAtts.courseDescription,\n                        url: courseAtts.courseUrl,\n                        imageId: courseAtts.imageId,\n                        imageUrl: courseAtts.imageUrl\n                    }\n                }\n            }\n        })\n    }\n\n    const handleCourseSelect = (selectedCourse) => {\n        console.log(courseDetails[selectedCourse].imageUrl)\n        if (selectedCourse in courseDetails) {\n            setAttributes({\n                selectedCourseId: parseInt(selectedCourse),\n                selectedCourseTitle: courseDetails[selectedCourse].title,\n                selectedCourseDesc: courseDetails[selectedCourse].description,\n                selectedCourseImageID: courseDetails[selectedCourse].image,\n                selectedCourseLink: courseDetails[selectedCourse].url,\n                selectedCourseImageUrl: courseDetails[selectedCourse].imageUrl\n            });\n        } else {\n            setAttributes({\n                selectedCourseId: selectedCourse,\n                selectedCourseTitle: '',\n                selectedCourseDesc: '',\n                selectedCourseImageID: '',\n                selectedCourseLink: '',\n                selectedCourseImageUrl: ''\n            });\n        }\n    }\n\n    return (\n        <div className={className}>\n            <h2 className=\"dynamic-block-h2\">{__('Large Course Card')}</h2>\n            { isLoading && <span>{__('Loading...')}</span>}\n            { courseOptions &&\n            <SelectControl\n                label=\"Select course\"\n                value={ selectedCourseId }\n                options={ courseOptions }\n                onChange={ handleCourseSelect }\n            />\n            }\n        </div>\n    );\n}","import { BlockEdit } from \"./BlockEdit\";\nconst { registerBlockType } = wp.blocks;\n\nregisterBlockType( 'gutenberg-good-guitarist/large-cta', {\n\ttitle: 'Large Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'large-cta',\n\tattributes: {\n\t\tselectedCourseId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\tselectedCourseTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tselectedCourseDesc: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tselectedCourseLink: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tselectedCourseImageID: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\tselectedCourseImageUrl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: () => null\n});","const { __ } = wp.i18n;\n\nexport const BlockEdit = () => {\n    return (\n        <div>\n            <h2 className=\"dynamic-block-h2\">{__('Latest Lessons Carousel')}</h2>\n            <small>{__('A carousel of the latest lessons will appear here on the frontend.')}</small>\n        </div>\n    )\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/latest-lessons', {\n\ttitle: 'Latest Lessons',\n\ticon: 'list',\n\tcategory: 'layout',\n\tclassName: 'latest-lessons',\n\tattributes: {\n\t\tlessons: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: () => null\n})","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, setAttributes }) => {\n    const blockProps = useBlockProps();\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta');\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        imageUrl: cta.imageUrl\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div {...blockProps} className=\"small-cta\">\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        label=\"Use with an existing course\"\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n         </div>\n    )\n\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/small-cta', {\n\ttitle: 'Small Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'small-cta',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes }) => {\n    const { url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n            </div>\n            <div className=\"details-container\">\n                <p>{description}</p>\n                <button className=\"cta-button\" href={url}>{buttonText}</button>\n            </div>\n        </div>\n    )\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const { __ } = wp.i18n;\n\n/**\n *\n * @param {*}\n * @returns {JSX}\n */\nexport const SidebarCta = ({ctaId, ctaData}) => {\n    const { description, imageUrl, url, buttonText } = ctaData.find(cta => cta.id === ctaId);\n    return (\n        <div className=\"sidebar-cta-card\">\n            <img src={imageUrl} alt=\"\" />\n            <div className=\"cta-card-body\">\n                <p className=\"body-text\">{description}</p>\n                <a className=\"cta-url-button\" href={url}>{buttonText || __(\"Click here\")}</a>\n            </div>\n        </div>\n    )\n}","import { getCtaDataFromPosts, createBlocksFromDescription } from '../../utils';\nimport { SidebarCta } from '../../components/SidebarCta';\nconst { TextControl, PanelRow, SelectControl, ToggleControl, Spinner } = wp.components;\nconst { useBlockProps, InnerBlocks } = wp.blockEditor;\nconst { PluginDocumentSettingPanel } = wp.editPost;\nconst { select, useSelect, dispatch, useDispatch } = wp.data;\nconst { useRef, useState, useEffect } = wp.element;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({ clientId, attributes, className, setAttributes }) => {\n    const {\n        videoInfoFetched,\n        videoID,\n        videoUrlRaw,\n        videoUrlEmbed,\n        videoTitle,\n        videoThumbnail,\n        songTitle,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo\n    } = attributes;\n\n    const blockProps = useBlockProps();\n    const postBody = useRef();\n    const [isFetching, setIsFetching] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({\n        class: 'fetch-message-hidden',\n        message: ''\n    });\n\n    useEffect(() => {\n        if (!gutenbergVars.youtube_api_key) {\n            setErrorMessage({\n                class: 'fetch-message-fail',\n                message: __('Youtube API key not detected. Please ensure you have entered a valid API key in the \"GG Settings\" section.')\n            });\n        }\n    }, []);\n\n    const { postMeta, ctaData, ctaSelectOptions } = useSelect( ( select ) => {\n        const ctaPosts = select( 'core' ).getEntityRecords( 'postType', 'cta' );\n        let ctaData;\n        let ctaSelectOptions = [{\n            label: 'None',\n            value: -1\n        }];\n        if (ctaPosts) {\n            ctaData = getCtaDataFromPosts(ctaPosts);\n            // Create dropdown options.\n            ctaData.forEach((cta) => {\n                ctaSelectOptions.push({\n                    label: cta.title,\n                    value: cta.id,\n                });\n            });\n        }\n\n        return {\n            postMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n            ctaData: ctaData,\n            ctaSelectOptions: ctaSelectOptions,\n        };\n    } );\n\n    if (postMeta) {\n        const { editPost } = useDispatch( 'core/editor', [ postMeta.difficulty ] );\n    }\n\n    /**\n     * Parse the youtube video ID from the URL.\n     * Set the video URL and ID attributes.\n     *\n     * @param {*} event\n     */\n    const handleURLChange = (event) => {\n        let url = event.target.value;\n        let parsedVideoID = null;\n        let videoIDMatch = url.match(/(\\?v=)(\\w|-)+/g);\n        if (videoIDMatch) {\n            parsedVideoID = videoIDMatch[0].replace('?v=', '');\n        }\n        setAttributes({\n            videoID: parsedVideoID,\n            videoUrlRaw: url,\n            videoUrlEmbed: `https://www.youtube.com/embed/${parsedVideoID}`\n        })\n    }\n\n    /**\n     * Update fetch completion message state and make message visible to user.\n     *\n     * @param {Boolean} completedSuccessfully\n     * @param {String} errorMessage\n     */\n    const showFetchCompleteMessage = ( completedSuccessfully, errorMessage = '' ) => {\n        let fetchMessageClass = '';\n        let fetchMessageText = '';\n        if ( completedSuccessfully ) {\n            fetchMessageClass = 'fetch-message-success';\n            fetchMessageText = __('Video information fetched successfully.');\n        } else {\n            fetchMessageClass = 'fetch-message-fail';\n            fetchMessageText = __('Couldn\\'t fetch video information.') + ` ${errorMessage}`;\n        }\n        setErrorMessage({\n            class: fetchMessageClass,\n            message: fetchMessageText\n        });\n        setTimeout(() => {\n            setErrorMessage({\n                class: 'fetch-message-hidden',\n                message: ''\n            })\n        }, 3000);\n    }\n\n    /**\n     * Handle a successful youtube video fetch.\n     *\n     * @param {Object} response\n     */\n    const handleFetchResponse = (response) => {\n        try {\n            // Remove old innerBlocks in post body.\n            const currentBlock = select( 'core/block-editor' ).getBlocksByClientId( clientId )[ 0 ];\n            const childBlockIds = currentBlock.innerBlocks.map( block => block.clientId );\n            dispatch( 'core/block-editor' ).removeBlocks( childBlockIds );\n\n            const fetchedTitle = response.result.items[0].snippet.title;\n            const fetchedDescription = response.result.items[0].snippet.description;\n            const fetchedThumbnail = response.result.items[0].snippet.thumbnails.medium.url;\n            const descriptionArray = fetchedDescription.split('\\n');\n            const postBodyBlocks = createBlocksFromDescription(descriptionArray);\n\n            // Update the post title.\n            dispatch('core/editor').editPost({ title: fetchedTitle });\n\n            // Update innerBlocks in post body.\n            dispatch('core/block-editor').insertBlocks(postBodyBlocks, 0, clientId);\n\n            // Set attributes from fetched video info.\n            setAttributes({\n                videoTitle: fetchedTitle,\n                videoThumbnail: fetchedThumbnail,\n                videoInfoFetched: true\n            });\n\n            // Give some feedback to the user that the fetch has completed.\n            showFetchCompleteMessage( true );\n        } catch (error) {\n            // Let the user know the operation failed.\n            showFetchCompleteMessage( false );\n            console.error(error);\n        }\n    }\n\n    /**\n     * Interface with the google client API to perform a fetch request\n     * to get information from the youtube video ID.\n     *\n     * @link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md\n     *\n     * @param {MouseEvent} event\n     * @param {String} videoID\n     */\n    const initFetch = (event, videoID) => {\n        event.preventDefault();\n        setIsFetching(true);\n        setErrorMessage({\n            class: 'fetch-message-hidden',\n            message: ''\n        });\n        gapi.load('client', () => {\n            console.log('the vid id', videoID)\n            gapi.client.setApiKey(gutenbergVars.youtube_api_key);\n            gapi.client.load('youtube', 'v3', () => {\n                gapi.client.youtube.videos.list({\n                    part: 'snippet',\n                    id : videoID\n                })\n                .then(response => {\n                    setIsFetching(false);\n                    handleFetchResponse(response);\n                }, error => {\n                    setIsFetching(false);\n                    // Let the user know the fetch failed.\n                    showFetchCompleteMessage( false, error );\n                });\n            })\n        })\n    }\n\n    return (\n        <div { ...blockProps } className={ className }>\n            <PluginDocumentSettingPanel\n                name=\"sidebar-course-slots\"\n                title={__(\"Video sidebar CTA slots\")}\n                className=\"sidebar-course-slots-panel\"\n            >\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        label={__('Sidebar CTA slot 1')}\n                        value={sidebarCtaSlotOne}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => setAttributes({ sidebarCtaSlotOne: Number(newValue) })}\n                    />\n                </PanelRow>}\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        label={__('Sidebar CTA slot 2')}\n                        value={sidebarCtaSlotTwo}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => setAttributes({ sidebarCtaSlotTwo: Number(newValue) })}\n                    />\n                </PanelRow>}\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"song-difficulty-attributes\"\n                title={__('Song difficulty')}\n                className=\"song-difficulty-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <TextControl\n                        label={__('Enter a number from 1 to 50')}\n                        value={ postMeta.song_difficulty }\n                        onChange={ (newValue) => editPost({meta: { song_difficulty: newValue }}) }\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"contains-only-one-barre-chord\"\n                title={__('Contains only one barre chord')}\n                className=\"contains-only-one-barre-chord-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <ToggleControl\n                        label={__('One barre chord song')}\n                        checked={ postMeta.contains_one_barre }\n                        onChange={ (newValue) => editPost({meta: { contains_one_barre: newValue }}) }\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <section className=\"video-details\">\n                <h2>{__('Video Details')}</h2>\n                <span className={`fetch-message ${errorMessage.class}`}>{errorMessage.message}</span>\n                <label className=\"youtube-post-label\" htmlFor=\"youtube-video-url\">Search by Youtube video URL</label>\n                <form onSubmit={(event) => initFetch(event, videoID)}>\n                    <input\n                        id=\"youtube-video-url\"\n                        label={__('Video URL')}\n                        className=\"youtube-video-url\"\n                        value={ videoUrlRaw }\n                        onChange={handleURLChange}\n                    />\n                    <button type=\"submit\" className=\"yt-submit-button\" disabled={isFetching}>{isFetching ? <Spinner /> : __('Submit') }</button>\n                </form>\n                { videoTitle && <TextControl label={__('Video Title')} value={videoTitle} onChange={(e) => setAttributes({videoTitle: e.target.value})} />}\n                { ( videoThumbnail && videoInfoFetched ) &&\n                    <>\n                        <label className=\"youtube-post-label\">{__('Video Thumbnail')}</label>\n                        <img src={videoThumbnail} />\n                    </>\n                }\n                <label className=\"youtube-post-label\" htmlFor=\"song-title\">{__('Song Title')}</label>\n                <input id=\"song-title\" type=\"text\" value={songTitle} onChange={(e) => setAttributes({songTitle: e.target.value})} />\n            </section>\n            <section ref={postBody} className=\"post-body\">\n                <h2>{__('Post Body')}</h2>\n                { videoID ? <>\n                    <div className=\"youtube-post-video-area\">\n                        { videoInfoFetched && <iframe width=\"560\"\n                                                  height=\"715\"\n                                                  src={videoUrlEmbed}\n                                                  className={(sidebarCtaSlotOne > 0 || sidebarCtaSlotTwo > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                                  title=\"YouTube video player\"\n                                                  frameborder=\"0\"\n                                                  allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                  allowfullscreen></iframe> }\n                        { ( sidebarCtaSlotOne > 0 || sidebarCtaSlotTwo > 0 ) && <div className=\"course-sidebar\">\n                            { ( sidebarCtaSlotOne > 0 && ctaData ) && <SidebarCta ctaId={sidebarCtaSlotOne} ctaData={ctaData} />}\n                            { ( sidebarCtaSlotTwo > 0 && ctaData ) && <SidebarCta ctaId={sidebarCtaSlotTwo} ctaData={ctaData} />}\n                        </div> }\n                    </div>\n                    <div className=\"post-content-video-description\">\n                        <InnerBlocks />\n                    </div>\n                </> : <span className=\"empty-post-body-msg\">{__('Submit URL to populate post body.')}</span> }\n            </section>\n        </div>\n    );\n}","const { InnerBlocks } = wp.blockEditor;\n\nexport const BlockSave = ({ attributes, className }) => {\n    const {\n        videoEmbedUrl,\n        videoDescription,\n        videoInfoFetched\n    } = attributes;\n\n    return (\n        <div className={ className }>\n            { videoInfoFetched && <iframe src={videoEmbedUrl}\n                                         title=\"YouTube video player\"\n                                         frameborder=\"0\"\n                                         allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                         allowfullscreen></iframe>}\n            <div class={`youtube-post-type-video-description`}>\n                <InnerBlocks.Content />\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt', {\n\tapiVersion: 2,\n\ttitle: 'Youtube Post Template',\n\ticon: 'playlist-video',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type',\n\tattributes: {\n\t\tvideoInfoFetched: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\tvideoTitle: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tvideoThumbnail: {\n\t\t\ttype: 'string',\n\t\t\tdefault: gutenbergVars.image_dir + '/good-guitarist-preview-img.png'\n\t\t},\n\t\tvideoDescription: {\n\t\t\ttype: 'array',\n\t\t},\n\t\tvideoID: {\n\t\t\ttype: 'string',\n\t\t},\n        videoUrlRaw: {\n            type: 'string',\n            default: ''\n        },\n        videoUrlEmbed: {\n            type: 'string',\n            default: ''\n        },\n\t\tsongTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tsidebarCtaSlotOne: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: -1\n\t\t},\n\t\tsidebarCtaSlotTwo: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: -1\n\t\t},\n\t\tpostBodyElements: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","const { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt-search', {\n\ttitle: 'Youtube Post Search Box',\n\ticon: 'search',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type-search',\n\tattributes: {},\n\tedit: BlockEdit,\n\tsave: () => null\n})","export const BlockEdit = () => (\n    <>\n        <div>{__('A full page song search area will be rendered here on the frontend.')}</div>\n        <small>{__(\"It's recommended that you only place one of these on your site on a page called 'Search'\")}</small>\n    </>\n)","const { parse } = wp.blockSerializationDefaultParser;\nconst { createBlock } = wp.blocks;\n\n/**\n * Parse 'gutenberg-good-guitarist/cta-template' block from a post.\n *\n * @param {array} ctaPost\n * @returns {array}\n */\nconst getCtaTemplateBlockFromPost = (ctaPost) => {\n\tconst parsedBlocks = parse(ctaPost.content.raw);\n\treturn parsedBlocks.find(block => 'gutenberg-good-guitarist/cta-template' === block.blockName);\n}\n\n/**\n *  Format CTA data from a CTA post.\n *\n * @param {array} ctaPosts\n * @returns {array}\n */\nexport const getCtaDataFromPosts = (ctaPosts) => {\n\tconst validCtaPosts = ctaPosts.filter(ctaPost => {\n\t\treturn ctaPost.id ? getCtaTemplateBlockFromPost(ctaPost) : undefined;\n\t})\n\n\treturn validCtaPosts.map(ctaPost => {\n\t\tconst ctaAtts = getCtaTemplateBlockFromPost(ctaPost).attrs;\n\t\treturn {\n\t\t\tid: ctaPost.id,\n\t\t\ttitle: ctaPost.title.raw,\n\t\t\tdescription: ctaAtts.description,\n\t\t\turl: ctaAtts.url,\n\t\t\tbuttonText: ctaAtts.buttonText,\n\t\t\timageId: ctaAtts.imageId,\n\t\t\timageUrl: ctaAtts.imageUrl\n\t\t}\n\t})\n}\n\n/**\n * Check if string has http:// or https:// in it.\n *\n * @param {string} stringToCheck\n */\nexport const stringContainsLink = (stringToCheck) => {\n\tconst linkRegex = /(http:\\/\\/|https:\\/\\/).*/g;\n\tlet matchedLink = '';\n\tif ( 'string' === typeof stringToCheck && stringToCheck?.search(linkRegex) >= 0 ) {\n\t\tmatchedLink = stringToCheck.match(linkRegex);\n\t}\n\treturn matchedLink;\n}\n\n/**\n * Create a gutenberg block for each paragraph of the fetched\n * youtube description.\n *\n * @param {array} descriptionArray\n * @returns\n */\nexport const createBlocksFromDescription = (descriptionArray) => {\n\tconst descriptionWithoutEmpties = descriptionArray.filter(description => description.length);\n\treturn descriptionWithoutEmpties.map(description => {\n\t\tlet matchedLink = stringContainsLink(description);\n\t\tlet blockType = 'core/paragraph';\n\t\tlet blockAtts = { content: description };\n\t\tif (matchedLink) {\n\t\t\tblockType = 'gutenberg-good-guitarist/small-cta';\n\t\t\tblockAtts = { url: matchedLink, description: description }\n\t\t}\n\t\treturn createBlock(blockType, blockAtts);\n\t});\n}","module.exports = window[\"wp\"][\"element\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Import Gutenberg custom blocks.\n */\nrequire( './blocks/small-cta' );\nrequire( './blocks/large-cta' );\nrequire( './blocks/cta-template' );\nrequire( './blocks/group' );\nrequire( './blocks/latest-lessons' );\nrequire( './blocks/youtube-post-template' );\nrequire( './blocks/ypt-search' );\n"],"names":["wp","components","TextControl","Button","blockEditor","useBlockProps","MediaUpload","MediaUploadCheck","__","i18n","registerBlockType","blocks","title","icon","category","attributes","description","type","default","url","buttonText","imageId","imageUrl","edit","setAttributes","blockProps","createElement","label","value","onChange","newValue","className","src","onSelect","newImage","id","allowedTypes","render","open","onClick","isLink","isDestructive","save","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","addFilter","hooks","settings","name","element","Fragment","useState","editor","PlainText","RichText","BlockControls","InspectorControls","ColorPalette","getColorClass","SelectControl","IconButton","RangeControl","PanelBody","useSelect","data","parse","blockSerializationDefaultParser","selectedCourseId","selectedCourseTitle","selectedCourseDesc","selectedCourseLink","selectedCourseImageID","selectedCourseImageUrl","courseData","select","getEntityRecords","isLoading","isResolving","courseOptions","courseDetails","forEach","course","courseAtts","content","raw","find","block","blockName","attrs","push","courseDescription","courseUrl","options","selectedCourse","console","log","parseInt","image","lessons","Toolbar","ToolbarDropdownMenu","TextareaControl","gutenbergVars","image_dir","ctaSelectOptions","ctaPosts","getCtaDataFromPosts","map","cta","controls","alt","media","href","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","o","minLen","n","prototype","toString","slice","constructor","from","test","TypeError","SidebarCta","ctaId","ctaData","PanelRow","ToggleControl","Spinner","InnerBlocks","PluginDocumentSettingPanel","editPost","dispatch","useDispatch","useRef","useEffect","apiVersion","videoInfoFetched","videoTitle","videoThumbnail","videoDescription","videoID","videoUrlRaw","videoUrlEmbed","songTitle","sidebarCtaSlotOne","sidebarCtaSlotTwo","postBodyElements","clientId","postBody","isFetching","setIsFetching","class","message","errorMessage","setErrorMessage","youtube_api_key","postMeta","getEditedPostAttribute","difficulty","showFetchCompleteMessage","completedSuccessfully","fetchMessageClass","fetchMessageText","setTimeout","initFetch","event","preventDefault","gapi","load","client","setApiKey","youtube","videos","list","part","then","response","childBlockIds","getBlocksByClientId","innerBlocks","removeBlocks","fetchedTitle","result","items","snippet","fetchedDescription","fetchedThumbnail","thumbnails","medium","descriptionArray","split","postBodyBlocks","createBlocksFromDescription","insertBlocks","error","handleFetchResponse","Number","song_difficulty","meta","checked","contains_one_barre","htmlFor","onSubmit","target","parsedVideoID","videoIDMatch","match","replace","disabled","e","ref","width","height","frameborder","allow","allowfullscreen","videoEmbedUrl","Content","createBlock","getCtaTemplateBlockFromPost","ctaPost","filter","undefined","ctaAtts","matchedLink","stringToCheck","linkRegex","search","stringContainsLink","blockType","blockAtts","module","exports","window","_extends","assign","bind","arguments","source","hasOwnProperty","apply","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","get","prop","r","toStringTag","require"],"sourceRoot":""}