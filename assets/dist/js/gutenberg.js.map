{"version":3,"file":"/js/gutenberg.js","mappings":"sEAIAA,EAJ8BC,GAAGC,OAAzBF,mBAIW,yCAA0C,CACzDG,MAAO,gBACPC,KAAM,iBACNC,SAAU,OACbC,WAAY,CACXC,OAAQ,CACPC,KAAM,QACNC,QAAS,KAGRC,KCZqB,SAAC,GAA6C,IAA3CC,EAA2C,EAA3CA,UAAWL,EAAgC,EAAhCA,WAC3BC,GAD2D,EAApBK,cAC5BN,EAAXC,QAER,OACIM,EAAAA,EAAAA,eAAAA,SAAAA,CAAQF,UAAWA,GACbJ,EAAOO,OAAS,EAAIP,EAAOQ,KAAI,SAAAC,GAAK,OAClCH,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKD,EAAME,MAAOC,IAAG,UAAKH,EAAMb,MAAX,gBACzBU,EAAAA,EAAAA,eAAAA,IAAAA,MAAIO,EAAAA,EAAAA,IAAG,0BDMpBC,KEfqB,SAAC,GAA6C,IAA3CV,EAA2C,EAA3CA,UAAWL,EAAgC,EAAhCA,WAC3BC,GAD2D,EAApBK,cAC5BN,EAAXC,QAER,OACIM,EAAAA,EAAAA,eAAAA,SAAAA,CAAQF,UAAWA,GACbJ,GAAUA,EAAOQ,KAAI,SAAAC,GAAK,OACxBH,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKD,EAAME,MAAOC,IAAG,UAAKH,EAAMb,MAAX,oB,+CCN1C,EAAgCF,GAAGqB,WAA3BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACrB,EAAyDvB,GAAGwB,YAApDC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,iBAC5BR,EAAOnB,GAAG4B,KAAVT,ICCRpB,EAH8BC,GAAGC,OAAzBF,mBAGW,wCAAyC,CACxDG,MAAO,0BACPC,KAAM,mBACNC,SAAU,OACbC,WAAY,CACXwB,YAAa,CACZtB,KAAM,SACNC,QAAS,IAEVsB,IAAK,CACJvB,KAAM,SACNC,QAAS,IAEVuB,WAAY,CACXxB,KAAM,SACNC,QAAS,IAEVwB,QAAS,CACRzB,KAAM,UACNC,QAAS,GAEVyB,SAAU,CACT1B,KAAM,SACNC,QAAA,UAAY0B,cAAcC,UAA1B,qCAGC1B,KDzBqB,SAAC,GAAgC,IAA/BJ,EAA+B,EAA/BA,WAAYM,EAAmB,EAAnBA,cAC5BmB,EAAmDzB,EAAnDyB,IAAKD,EAA8CxB,EAA9CwB,YAAaE,EAAiC1B,EAAjC0B,WAAYC,EAAqB3B,EAArB2B,QAASC,EAAY5B,EAAZ4B,SACxCG,EAAaX,IAgBnB,OACIb,EAAAA,EAAAA,eAAAA,MAAUwB,GACNxB,EAAAA,EAAAA,eAACU,EAAD,CACIe,MAAOlB,EAAG,eACVmB,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAc7B,EAAc,CAACkB,YAAaW,QAExD5B,EAAAA,EAAAA,eAACU,EAAD,CACIe,MAAOlB,EAAG,OACVmB,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAc7B,EAAc,CAACmB,IAAKU,QAEhD5B,EAAAA,EAAAA,eAACU,EAAD,CACIe,MAAOlB,EAAG,yEACVmB,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAc7B,EAAc,CAACoB,WAAYS,QAEvD5B,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,2BACXE,EAAAA,EAAAA,eAAAA,QAAAA,CAAOF,UAAU,eAAeS,EAAG,mFACjCc,IAAYrB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,eAAeM,IAAKiB,KACjDrB,EAAAA,EAAAA,eAACe,EAAD,MACIf,EAAAA,EAAAA,eAACc,EAAD,CACIe,SApCE,SAACC,GACnB/B,EAAc,CACVqB,QAASU,EAASC,GAClBV,SAAUS,EAASZ,OAkCPc,aAAe,CAAC,SAChBC,OAAQ,gBAAEC,EAAF,EAAEA,KAAF,OACJlC,EAAAA,EAAAA,eAACW,EAAD,CACAb,UAAW,IAAMsB,EAAU,sBAAwB,oCACnDe,QAASD,GAEO,GAAXd,GAAgBb,EAAG,wBAKvB,IAAZa,IACGpB,EAAAA,EAAAA,eAACe,EAAD,MACIf,EAAAA,EAAAA,eAACW,EAAD,CAAQwB,QA3CR,WAChBpC,EAAc,CACVqB,QAAS,EACTC,SAAU,MAwCgCe,QAAM,EAACC,eAAa,GAAE9B,EAAG,qBC5B3EC,KAAM,kBAAM,S,8QCThB8B,EArBsBlD,GAAGmD,MAAjBD,WAsBJ,2BACA,qCAfqB,SAACE,GACzB,GAAsB,eAAlBA,EAASC,KACN,OAAOD,G,6VAGS,CAAH,GACVA,GAGP,OAAOA,M,wDChBHjC,EAAOnB,GAAG4B,KAAVT,GACAO,EAAgB1B,GAAGsD,OAAnB5B,YACR,EAAyC1B,GAAGwB,YAArB+B,GAAvB,EAAQ9B,cAAR,EAAuB8B,eACvB,EAAuEvD,GAAGqB,WAAlEmC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,oBAAqBnC,EAAtC,EAAsCA,YAAaoC,EAAnD,EAAmDA,gBAC3CC,EAAc3D,GAAG4D,KAAjBD,UCLAxC,EAAOnB,GAAG4B,KAAVT,IAKRpB,EAF8BC,GAAGC,OAAzBF,mBAEW,qCAAsC,CACxDG,MAAOiB,EAAG,wBACVhB,KAAM,YACNC,SAAU,SACVM,UAAW,YACXL,WAAY,CACXH,MAAO,CACNK,KAAM,SACNC,QAAS,IAEVqB,YAAa,CACZtB,KAAM,SACNC,QAAS,IAEVsB,IAAK,CACJvB,KAAM,SACNC,QAAS,IAEVuB,WAAY,CACXxB,KAAM,SACNC,QAAS,cAEVwB,QAAS,CACRzB,KAAM,UAEP0B,SAAU,CACT1B,KAAM,SACNC,QAAA,UAAY0B,cAAcC,UAA1B,qCAGF1B,KD5BwB,SAAC,GAA6C,IAA3CJ,EAA2C,EAA3CA,WAAYK,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cACvCmB,EAAoDzB,EAApDyB,IAAKC,EAA+C1B,EAA/C0B,WAAYF,EAAmCxB,EAAnCwB,YAAaG,EAAsB3B,EAAtB2B,QAASC,EAAa5B,EAAb4B,SAEzC4B,EAAmBF,GAAU,SAAAG,GAC/B,IAAMC,EAAWD,EAAO,QAAQE,iBAAiB,WAAY,MAAO,CAAEC,UAAW,IACjF,GAAIF,EAIA,OAHgBG,EAAAA,EAAAA,IAAoBH,GAGrBjD,KAAI,SAACqD,GAChB,MAAO,CACHjE,MAAOiE,EAAIjE,MACX6C,QAAS,kBAAMpC,EAAc,CACzBT,MAAOiE,EAAIjE,MACX2B,YAAasC,EAAItC,YACjBC,IAAKqC,EAAIrC,IACTE,QAASmC,EAAInC,QACbD,WAAYoC,EAAIpC,qBAmBpC,OACInB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAWA,IACZE,EAAAA,EAAAA,eAAC2C,EAAD,MACI3C,EAAAA,EAAAA,eAAC4C,EAAD,KACKK,IAAoBjD,EAAAA,EAAAA,eAAC6C,EAAD,CACjBtD,KAAK,SACLO,UAAU,qBACV2B,MAAOlB,EAAG,uCACViD,SAAUP,OAItBjD,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,oBACXE,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKiB,EAAUf,IAAI,MACxBN,EAAAA,EAAAA,eAACc,EAAD,CACIe,SAtBM,SAAC4B,GACnB1D,EAAc,CACVsB,SAAUoC,EAAMvC,IAChBE,QAASqC,EAAM1B,MAoBPC,aAAa,QACbN,MAAON,EACPa,OAAQ,gBAAGC,EAAH,EAAGA,KAAH,OACJlC,EAAAA,EAAAA,eAAAA,SAAAA,CACAL,KAAK,OACLG,UAAW,mCACXqC,QAASD,GACP3B,EAAG,sBAIjBP,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,sBACXE,EAAAA,EAAAA,eAAC8C,EAAD,CACIrB,MAAM,cACNC,MAAOT,EACPU,SAAU,SAAAD,GAAK,OAAI3B,EAAc,CAAEkB,YAAaS,QAEpD1B,EAAAA,EAAAA,eAACU,EAAD,CACIe,MAAM,OACNC,MAAOR,EACPS,SAAU,SAAAD,GAAK,OAAI3B,EAAc,CAAEmB,IAAKQ,QAE5C1B,EAAAA,EAAAA,eAACU,EAAD,CACIZ,UAAU,oBACV2B,MAAM,cACNC,MAAOP,EACPQ,SAAU,SAAAD,GAAK,OAAI3B,EAAc,CAAEoB,WAAYO,UCjDlElB,KCpCwB,SAAC,GAA8B,IAA5Bf,EAA4B,EAA5BA,WAAYK,EAAgB,EAAhBA,UAC5BR,EAAkDG,EAAlDH,MAAO4B,EAA2CzB,EAA3CyB,IAAKC,EAAsC1B,EAAtC0B,WAAYF,EAA0BxB,EAA1BwB,YAAaI,EAAa5B,EAAb4B,SAE7C,OACIrB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAWA,IACZE,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,YAAYM,IAAKiB,EAAUf,IAAI,MAC9CN,EAAAA,EAAAA,eAAAA,MAAAA,MACIA,EAAAA,EAAAA,eAAAA,KAAAA,CAAIF,UAAU,eAAeR,IAC7BU,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,YAAYmB,KAE/BjB,EAAAA,EAAAA,eAAAA,IAAAA,CAAGF,UAAU,aAAa4D,KAAMxC,GAAMC,Q,+CCV1CZ,EAAOnB,GAAG4B,KAAVT,ICGRpB,EAH8BC,GAAGC,OAAzBF,mBAGW,0CAA2C,CAC7DG,MAAO,iBACPC,KAAM,OACNC,SAAU,SACVM,UAAW,iBACXL,WAAY,CACXkE,QAAS,CACRhE,KAAM,WAGRE,KDXwB,WACrB,OACIG,EAAAA,EAAAA,eAAAA,MAAAA,MACIA,EAAAA,EAAAA,eAAAA,KAAAA,CAAIF,UAAU,oBAAoBS,EAAG,6BACrCP,EAAAA,EAAAA,eAAAA,QAAAA,KAAQO,EAAG,yECQtBC,KAAM,kBAAM,S,kCCdb,MAAM,EAA+BoD,OAAW,GAAU,O,sBCA1D,MAAM,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,YCK9DzE,EAAAA,EAAAA,mBAAkB,mCAAoC,CACpDG,OAAOiB,EAAAA,EAAAA,IAAG,WACVhB,KAAM,mBACNC,SAAU,SACVC,WAAY,CACRoE,YAAa,CACTlE,KAAM,SACNC,QAAS,IAGjBC,KCHuB,SAAC,GAA6C,IAA3CC,EAA2C,EAA3CA,UAAWL,EAAgC,EAAhCA,WAAYM,EAAoB,EAApBA,cACvC8D,EAAgBpE,EAAhBoE,YAEFC,EAAe,CACjBC,YAAa,GAAF,OAAKF,EAAL,KACXG,aAAc,GAAF,OAAKH,EAAL,MAGhB,OACI7D,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAWA,EAAWmE,MAAOH,IAC9B9D,EAAAA,EAAAA,eAACkE,EAAAA,kBAAD,MACIlE,EAAAA,EAAAA,eAACmE,EAAAA,UAAD,CACI7E,OAAOiB,EAAAA,EAAAA,IAAG,gBACV6D,aAAa,IAEbpE,EAAAA,EAAAA,eAAAA,IAAAA,MAAIO,EAAAA,EAAAA,IAAG,gKACPP,EAAAA,EAAAA,eAAAA,IAAAA,CAAGiE,MAAO,CAAEI,UAAW,YAAa9D,EAAAA,EAAAA,IAAG,8HACvCP,EAAAA,EAAAA,eAACsE,EAAAA,4BAAD,CACI,cAAY,eACZ3C,SAAU,SAACC,GAAD,OAAc7B,EAAc,CAAE8D,YAAajC,KACrD2C,IAAK,IACLC,IAAK,EACL9C,MAAOmC,OAIf7D,EAAAA,EAAAA,eAACyE,EAAAA,YAAD,QDtBdjE,KERwB,SAAC,GAA8B,IAA5BV,EAA4B,EAA5BA,UACjB+D,EAD6C,EAAjBpE,WAC5BoE,YAEFC,EAAe,CACjBY,WAAY,GAAF,OAAKb,EAAL,KACVc,YAAa,GAAF,OAAKd,EAAL,MAGf,OACI7D,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAWA,EAAWmE,MAAOH,IAC9B9D,EAAAA,EAAAA,eAACyE,EAAAA,YAAAA,QAAD,W,iECjBJlE,EAAOnB,GAAG4B,KAAVT,GACAO,EAAgB1B,GAAGsD,OAAnB5B,YACR,EAAyC1B,GAAGwB,YAApCC,EAAR,EAAQA,cAAe8B,EAAvB,EAAuBA,cACvB,EAAuEvD,GAAGqB,WAAlEmC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,oBAAqBnC,EAAtC,EAAsCA,YAAaoC,EAAnD,EAAmDA,gBAC3CC,EAAc3D,GAAG4D,KAAjBD,WCDR5D,EAJ8BC,GAAGC,OAAzBF,mBAIW,qCAAsC,CACxDG,MAAO,uBACPC,KAAM,YACNC,SAAU,SACVM,UAAW,YACXL,WAAY,CACXwB,YAAa,CACZtB,KAAM,SACNC,QAAS,IAEVsB,IAAK,CACJvB,KAAM,SACNC,QAAS,IAEVuB,WAAY,CACXxB,KAAM,SACNC,QAAS,cAEVwB,QAAS,CACRzB,KAAM,UAEP0B,SAAU,CACT1B,KAAM,SACNC,QAAA,UAAY0B,cAAcC,UAA1B,qCAGF1B,KDvBwB,SAAC,GAAkC,IAAhCJ,EAAgC,EAAhCA,WAAYM,EAAoB,EAApBA,cAC9ByB,EAAaX,IACXK,EAAoDzB,EAApDyB,IAAKC,EAA+C1B,EAA/C0B,WAAYF,EAAmCxB,EAAnCwB,YAAaG,EAAsB3B,EAAtB2B,QAASC,EAAa5B,EAAb4B,SAEzC4B,EAAmBF,GAAU,SAAAG,GAC/B,IAAMC,EAAWD,EAAO,QAAQE,iBAAiB,WAAY,MAAO,CAAEC,UAAW,IACjF,GAAIF,EAIA,OAHgBG,EAAAA,EAAAA,IAAoBH,GAGrBjD,KAAI,SAACqD,GAChB,MAAO,CACHjE,MAAOiE,EAAIjE,MACX6C,QAAS,kBAAMpC,EAAc,CACzBkB,YAAasC,EAAItC,YACjBC,IAAKqC,EAAIrC,IACTE,QAASmC,EAAInC,QACbC,SAAUkC,EAAIlC,SACdF,WAAYoC,EAAIpC,qBAmBpC,OACInB,EAAAA,EAAAA,eAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAASwB,EAAT,CAAqB1B,UAAU,eAC3BE,EAAAA,EAAAA,eAAC2C,EAAD,MACI3C,EAAAA,EAAAA,eAAC4C,EAAD,KACKK,IAAoBjD,EAAAA,EAAAA,eAAC6C,EAAD,CACjBtD,KAAK,SACLO,UAAU,qBACV2B,MAAM,sCACN+B,SAAUP,OAItBjD,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,oBACXE,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKiB,EAAUf,IAAI,MACxBN,EAAAA,EAAAA,eAACc,EAAD,CACIe,SAtBM,SAAC4B,GACnB1D,EAAc,CACVsB,SAAUoC,EAAMvC,IAChBE,QAASqC,EAAM1B,MAoBPC,aAAa,QACbN,MAAON,EACPa,OAAQ,gBAAGC,EAAH,EAAGA,KAAH,OACJlC,EAAAA,EAAAA,eAAAA,SAAAA,CACAL,KAAK,OACLG,UAAW,mCACXqC,QAASD,GACP3B,EAAG,sBAIjBP,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,sBACXE,EAAAA,EAAAA,eAAC8C,EAAD,CACIrB,MAAM,cACNC,MAAOT,EACPU,SAAU,SAAAD,GAAK,OAAI3B,EAAc,CAAEkB,YAAaS,QAEpD1B,EAAAA,EAAAA,eAACU,EAAD,CACIe,MAAM,OACNC,MAAOR,EACPS,SAAU,SAAAD,GAAK,OAAI3B,EAAc,CAAEmB,IAAKQ,QAE5C1B,EAAAA,EAAAA,eAACU,EAAD,CACIZ,UAAU,oBACV2B,MAAM,cACNC,MAAOP,EACPQ,SAAU,SAAAD,GAAK,OAAI3B,EAAc,CAAEoB,WAAYO,UCvDlElB,KC/BwB,SAAC,GAAmB,IAAjBf,EAAiB,EAAjBA,WAChByB,EAA2CzB,EAA3CyB,IAAKC,EAAsC1B,EAAtC0B,WAAYF,EAA0BxB,EAA1BwB,YAAaI,EAAa5B,EAAb4B,SAEtC,OACIrB,EAAAA,EAAAA,eAAAA,MAAAA,MACIA,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,oBACXE,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKiB,EAAUf,IAAI,OAE5BN,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,sBACXE,EAAAA,EAAAA,eAAAA,IAAAA,KAAIiB,IACJjB,EAAAA,EAAAA,eAAAA,IAAAA,CAAGF,UAAU,aAAa4D,KAAMxC,GAAMC,S,wDCVvC,SAASyD,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAI5E,UAAQ6E,EAAMD,EAAI5E,QAE/C,IAAK,IAAI8E,EAAI,EAAGC,EAAO,IAAIC,MAAMH,GAAMC,EAAID,EAAKC,IAC9CC,EAAKD,GAAKF,EAAIE,GAGhB,OAAOC,ECHM,SAASE,EAAeL,EAAKE,GAC1C,OCLa,SAAyBF,GACtC,GAAII,MAAME,QAAQN,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKE,GACjD,IAAIK,EAAY,MAAPP,EAAc,KAAyB,oBAAXQ,QAA0BR,EAAIQ,OAAOC,WAAaT,EAAI,cAE3F,GAAU,MAANO,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKf,KAAQa,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAG7D,QAETqD,GAAKU,EAAKxF,SAAW8E,GAH4BW,GAAK,IAK5D,MAAOM,GACPL,GAAK,EACLH,EAAKQ,EACL,QACA,IACON,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBZ,EAAKE,IGJ3C,SAAqCkB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASV,KAAKK,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAY/D,MAC7C,QAAN0D,GAAqB,QAANA,EAAoBlB,MAAMwB,KAAKR,GACxC,cAANE,GAAqB,2CAA2CO,KAAKP,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BrB,EAAKE,IILjF,WACb,MAAM,IAAI4B,UAAU,6IJIgF,G,sBKL9FpG,EAAOnB,GAAG4B,KAAVT,GAQKqG,EAAa,SAAC,GAAU,IAATrD,EAAS,EAATA,IAChBtC,EAA2CsC,EAA3CtC,YAAaI,EAA8BkC,EAA9BlC,SAAUH,EAAoBqC,EAApBrC,IAAKC,EAAeoC,EAAfpC,WACpC,OACInB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,qBACXE,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKiB,GAAYC,cAAcC,UAAY,kCAAmCjB,IAAI,MACvFN,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,kBACXE,EAAAA,EAAAA,eAAAA,IAAAA,CAAGF,UAAU,aAAamB,IAC1BjB,EAAAA,EAAAA,eAAAA,IAAAA,CAAGF,UAAU,iBAAiB4D,KAAMxC,GAAMC,GAAcZ,EAAG,kB,8NCb3E,MAAyEnB,GAAGqB,WAApEC,EAAR,EAAQA,YAAamG,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,cAAeC,EAA9C,EAA8CA,cAAeC,EAA7D,EAA6DA,QAC7D,EAAuC5H,GAAGwB,YAAlCC,EAAR,EAAQA,cAAe4D,EAAvB,EAAuBA,YACfwC,EAA+B7H,GAAG8H,SAAlCD,2BACR,EAAqD7H,GAAG4D,KAAhDE,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,UAAWoE,EAA3B,EAA2BA,SAC3B,GADA,EAAqCC,YACGhI,GAAGiI,SAAnCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,UAClBjH,EAAOnB,GAAG4B,KAAVT,GCPAkE,EAAgBrF,GAAGwB,YAAnB6D,aCIRtF,EAJ8BC,GAAGC,OAAzBF,mBAIW,+BAAgC,CAClDsI,WAAY,EACZnI,MAAO,wBACPC,KAAM,iBACNC,SAAU,SACVM,UAAW,oBACXL,WAAY,CACXiI,iBAAkB,CACjB/H,KAAM,UACNC,SAAS,GAEV+H,WAAY,CACXhI,KAAM,UAEPiI,eAAgB,CACfjI,KAAM,SACNC,QAAS0B,cAAcC,UAAY,mCAEpCsG,iBAAkB,CACjBlI,KAAM,SAEPmI,QAAS,CACRnI,KAAM,UAEDoI,YAAa,CACTpI,KAAM,SACNC,QAAS,IAEboI,cAAe,CACXrI,KAAM,SACNC,QAAS,IAEnBqI,UAAW,CACVtI,KAAM,SACNC,QAAS,IAEVsI,kBAAmB,CAClBvI,KAAM,SACNC,QAAS,IAEVuI,kBAAmB,CAClBxI,KAAM,SACNC,QAAS,IAEVwI,iBAAkB,CACjBzI,KAAM,QACNC,QAAS,KAGXC,KF5CwB,SAAC,GAAuD,IAArDwI,EAAqD,EAArDA,SAAU5I,EAA2C,EAA3CA,WAAYK,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAErD2H,EASAjI,EATAiI,iBACAI,EAQArI,EARAqI,QACAC,EAOAtI,EAPAsI,YACAC,EAMAvI,EANAuI,cACAL,EAKAlI,EALAkI,WACAC,EAIAnI,EAJAmI,eACAK,EAGAxI,EAHAwI,UACAC,EAEAzI,EAFAyI,kBACAC,EACA1I,EADA0I,kBAGE3G,EAAaX,IACbyH,EAAWhB,IACjB,IAAoCC,GAAS,GAA7C,GAAOgB,EAAP,KAAmBC,EAAnB,KACA,IAAwCjB,EAAS,CAC7CkB,MAAO,uBACPC,QAAS,KAFb,GAAOC,EAAP,KAAqBC,EAArB,KAKApB,GAAU,WACDlG,cAAcuH,iBACfD,EAAgB,CACZH,MAAO,qBACPC,QAASnI,EAAG,kHAGrB,IAEH,MAAgDwC,GAAW,SAAEG,GACzD,IACI4F,EADE3F,EAAWD,EAAQ,QAASE,iBAAkB,WAAY,MAAO,CAAEC,UAAW,IAEhFJ,EAAmB,CAAC,CACpBxB,MAAO,OACPC,OAAQ,IAaZ,OAXIyB,IACA2F,GAAUxF,EAAAA,EAAAA,IAAoBH,IAEtB4F,SAAQ,SAACxF,GACbN,EAAiB8C,KAAK,CAClBtE,MAAO8B,EAAIjE,MACXoC,MAAO6B,EAAIxB,QAKhB,CACHiH,SAAU9F,EAAQ,eAAgB+F,uBAAwB,QAC1DH,QAASA,EACT7F,iBAAkBA,MArBlB+F,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,QAAS7F,EAA3B,EAA2BA,iBAyBrBiG,EAAsB,SAACC,EAAaC,GACtC,GAAIN,EAAS,CACT,IAAMO,EAAQC,OAAOF,GACf7F,EAAMuF,EAAQS,MAAK,SAAAhG,GAAG,OAAIA,EAAIxB,KAAOsH,KAC3CtJ,GAAc,UAAGoJ,E,qWAAJ,EACTpH,GAAIsH,GACD9F,OAgCTiG,EAA2B,SAAEC,GAA8C,IAAvBd,EAAuB,uDAAR,GACjEe,EAAoB,GACpBC,EAAmB,GAClBF,GACDC,EAAoB,wBACpBC,EAAmBpJ,EAAG,6CAEtBmJ,EAAoB,qBACpBC,EAAmBpJ,EAAG,qCAAHA,IAAAA,OAA+CoI,IAEtEC,EAAgB,CACZH,MAAOiB,EACPhB,QAASiB,IAEbC,YAAW,WACPhB,EAAgB,CACZH,MAAO,uBACPC,QAAS,OAEd,MAoDDmB,EAAY,SAACC,EAAOhC,GACtBgC,EAAMC,iBACNvB,GAAc,GACdI,EAAgB,CACZH,MAAO,uBACPC,QAAS,KAEbsB,KAAKC,KAAK,UAAU,WAChBD,KAAKE,OAAOC,UAAU7I,cAAcuH,iBACpCmB,KAAKE,OAAOD,KAAK,UAAW,MAAM,WAC9BD,KAAKE,OAAOE,QAAQC,OAAOC,KAAK,CAC5BC,KAAM,UACNxI,GAAK+F,IAER0C,MAAK,SAAAC,GACFjC,GAAc,GA3DF,SAACiC,GACzB,IAEI,IACMC,EADexH,EAAQ,qBAAsByH,oBAAqBtC,GAAY,GACjDuC,YAAY1K,KAAK,SAAA2K,GAAK,OAAIA,EAAMxC,YACnElB,EAAU,qBAAsB2D,aAAcJ,GAE9C,IAAMK,EAAeN,EAASO,OAAOC,MAAM,GAAGC,QAAQ5L,MAChD6L,EAAqBV,EAASO,OAAOC,MAAM,GAAGC,QAAQjK,YACtDmK,EAAmBX,EAASO,OAAOC,MAAM,GAAGC,QAAQG,WAAWC,OAAOpK,IACtEqK,EAAmBJ,EAAmBK,MAAM,MAC5CC,GAAiBC,EAAAA,EAAAA,IAA4BH,GAGnDpE,EAAS,eAAeD,SAAS,CAAE5H,MAAOyL,IAG1C5D,EAAS,qBAAqBwE,aAAaF,EAAgB,EAAGpD,GAG9DtI,EAAc,CACV4H,WAAYoD,EACZnD,eAAgBwD,EAChB1D,kBAAkB,IAItB8B,GAA0B,GAC5B,MAAOoC,GAELpC,GAA0B,GAC1BqC,QAAQD,MAAMA,IA6BNE,CAAoBrB,MACrB,SAAAmB,GACCpD,GAAc,GAEdgB,GAA0B,EAAOoC,aAMjD,OACI5L,EAAAA,EAAAA,eAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAAUwB,EAAV,CAAuB1B,UAAYA,KAC/BE,EAAAA,EAAAA,eAACiH,EAAD,CACIxE,KAAK,oBACLnD,MAAOiB,EAAG,2BACVT,UAAU,2BAETmD,IAAoBjD,EAAAA,EAAAA,eAAC6G,EAAD,MAChB7G,EAAAA,EAAAA,eAAC8G,EAAD,CACGhH,UAAU,6BACV2B,MAAOlB,EAAG,sBACVmB,MAAOwG,EAAkBnG,GACzBgK,QAAS9I,EACTtB,SAAU,SAACC,GAAD,OAAcsH,EAAoB,oBAAqBtH,OAGxEqB,IAAoBjD,EAAAA,EAAAA,eAAC6G,EAAD,MAChB7G,EAAAA,EAAAA,eAAC8G,EAAD,CACGhH,UAAU,6BACV2B,MAAOlB,EAAG,sBACVmB,MAAOyG,EAAkBpG,GACzBgK,QAAS9I,EACTtB,SAAU,SAACC,GAAD,OAAcsH,EAAoB,oBAAqBtH,SAI7E5B,EAAAA,EAAAA,eAACiH,EAAD,CACIxE,KAAK,6BACLnD,MAAOiB,EAAG,mBACVT,UAAU,0BAEVE,EAAAA,EAAAA,eAAC6G,EAAD,KACKmC,IAAYhJ,EAAAA,EAAAA,eAACU,EAAD,CACTe,MAAOlB,EAAG,+BACVmB,MAAQsH,EAASgD,gBACjBrK,SAAW,SAACC,GAAD,OAAcuF,EAAS,eAAeD,SAAS,CAAC+E,KAAM,CAAED,gBAAiBpK,WAIhG5B,EAAAA,EAAAA,eAACiH,EAAD,CACIxE,KAAK,gCACLnD,MAAOiB,EAAG,iCACVT,UAAU,wCAEVE,EAAAA,EAAAA,eAAC6G,EAAD,KACKmC,IAAYhJ,EAAAA,EAAAA,eAAC+G,EAAD,CACTtF,MAAOlB,EAAG,wBACV2L,QAAUlD,EAASmD,mBACnBxK,SAAW,SAACC,GAAD,OAAcuF,EAAS,eAAeD,SAAS,CAAC+E,KAAM,CAAEE,mBAAoBvK,WAInG5B,EAAAA,EAAAA,eAAAA,UAAAA,CAASF,UAAU,kBACfE,EAAAA,EAAAA,eAAAA,KAAAA,KAAKO,EAAG,mBACRP,EAAAA,EAAAA,eAAAA,OAAAA,CAAMF,UAAS,wBAAmB6I,EAAY,QAAWA,EAAaD,UACtE1I,EAAAA,EAAAA,eAAAA,QAAAA,CAAOF,UAAU,qBAAqBsM,QAAQ,qBAA9C,gCACApM,EAAAA,EAAAA,eAAAA,OAAAA,CAAMqM,SAAU,SAACvC,GAAD,OAAWD,EAAUC,EAAOhC,MACxC9H,EAAAA,EAAAA,eAAAA,QAAAA,CACI+B,GAAG,oBACHN,MAAOlB,EAAG,aACVT,UAAU,oBACV4B,MAAQqG,EACRpG,SAnLI,SAACmI,GACrB,IAAI5I,EAAM4I,EAAMwC,OAAO5K,MACnB6K,EAAgB,KAChBC,EAAetL,EAAIuL,MAAM,kBACzBD,IACAD,EAAgBC,EAAa,GAAGE,QAAQ,MAAO,KAEnD3M,EAAc,CACV+H,QAASyE,EACTxE,YAAa7G,EACb8G,cAAe,iCAAF,OAAmCuE,SA2KxCvM,EAAAA,EAAAA,eAAAA,SAAAA,CAAQL,KAAK,SAASG,UAAU,mBAAmB6M,SAAUpE,GAAaA,GAAavI,EAAAA,EAAAA,eAACgH,EAAD,MAAczG,EAAG,YAE1GoH,IAAc3H,EAAAA,EAAAA,eAACU,EAAD,CAAae,MAAOlB,EAAG,eAAgBmB,MAAOiG,EAAYhG,SAAU,SAACiL,GAAD,OAAO7M,EAAc,CAAC4H,WAAYiF,EAAEN,OAAO5K,WAC3HkG,GAAkBF,IAClB1H,EAAAA,EAAAA,eAAAA,EAAAA,SAAAA,MACIA,EAAAA,EAAAA,eAAAA,QAAAA,CAAOF,UAAU,sBAAsBS,EAAG,qBAC1CP,EAAAA,EAAAA,eAAAA,MAAAA,CAAKI,IAAKwH,MAGlB5H,EAAAA,EAAAA,eAAAA,QAAAA,CAAOF,UAAU,qBAAqBsM,QAAQ,cAAc7L,EAAG,gBAC/DP,EAAAA,EAAAA,eAAAA,QAAAA,CAAO+B,GAAG,aAAapC,KAAK,OAAO+B,MAAOuG,EAAWtG,SAAU,SAACiL,GAAD,OAAO7M,EAAc,CAACkI,UAAW2E,EAAEN,OAAO5K,aAE7G1B,EAAAA,EAAAA,eAAAA,UAAAA,CAAS6M,IAAKvE,EAAUxI,UAAU,cAC9BE,EAAAA,EAAAA,eAAAA,KAAAA,KAAKO,EAAG,cACNuH,GAAU9H,EAAAA,EAAAA,eAAAA,EAAAA,SAAAA,MACRA,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,2BACT4H,IAAoB1H,EAAAA,EAAAA,eAAAA,SAAAA,CAAQ8M,MAAM,MACVC,OAAO,MACP3M,IAAK4H,EACLlI,UAAYoI,EAAkBnG,GAAK,GAAKoG,EAAkBpG,GAAK,EAAK,yBAA2B,oBAC/FzC,MAAM,uBACN0N,YAAY,IACZC,MAAM,iFACNC,iBAAe,KACrChF,EAAkBnG,GAAK,GAAKoG,EAAkBpG,GAAK,KAAO/B,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,eACvEoI,EAAkBnG,GAAK,IAAK/B,EAAAA,EAAAA,eAAC4G,EAAD,CAAYrD,IAAK2E,IAC7CC,EAAkBpG,GAAK,IAAK/B,EAAAA,EAAAA,eAAC4G,EAAD,CAAYrD,IAAK4E,OAGvDnI,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,mCACXE,EAAAA,EAAAA,eAACyE,EAAD,SAEFzE,EAAAA,EAAAA,eAAAA,OAAAA,CAAMF,UAAU,uBAAuBS,EAAG,yCEjP/DC,KDnDwB,SAAC,GAA8B,IAA5Bf,EAA4B,EAA5BA,WAEpBuI,GAFgD,EAAhBlI,UAMhCL,EAJAuI,eACAN,EAGAjI,EAHAiI,iBACAQ,EAEAzI,EAFAyI,kBACAC,EACA1I,EADA0I,kBAGJ,OACInI,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,0CACXE,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,2BACT4H,IAAoB1H,EAAAA,EAAAA,eAAAA,SAAAA,CAAQ8M,MAAM,MACRC,OAAO,MACP3M,IAAK4H,EACLlI,UAAYoI,EAAkBnG,GAAK,GAAKoG,EAAkBpG,GAAK,EAAK,yBAA2B,oBAC/FzC,MAAM,uBACN0N,YAAY,IACZC,MAAM,iFACNC,iBAAe,KACvChF,EAAkBnG,GAAK,GAAKoG,EAAkBpG,GAAK,KAAO/B,EAAAA,EAAAA,eAAAA,MAAAA,CAAKF,UAAU,eACvEoI,EAAkBnG,GAAK,IAAK/B,EAAAA,EAAAA,eAAC4G,EAAD,CAAYrD,IAAK2E,IAC7CC,EAAkBpG,GAAK,IAAK/B,EAAAA,EAAAA,eAAC4G,EAAD,CAAYrD,IAAK4E,OAGvDnI,EAAAA,EAAAA,eAAAA,MAAAA,CAAKyI,MAAA,wCACDzI,EAAAA,EAAAA,eAACyE,EAAY0I,QAAb,Y,+CE5BR5M,EAAOnB,GAAG4B,KAAVT,GCAOnB,GAAG4B,KAAVT,IAIRpB,EAH8BC,GAAGC,OAAzBF,mBAGW,sCAAuC,CACzDG,MAAO,0BACPC,KAAM,SACNC,SAAU,SACVM,UAAW,2BACXL,WAAY,GACZI,KDRwB,kBACrBG,EAAAA,EAAAA,eAAAA,KAAAA,KAAKO,EAAG,sDCQXC,KAAM,kBAAM,S,4ECJN,IAAM4M,EAA6B,WAGtCxD,YAAW,WAEmByD,SAASC,iBAAiB,+BAElCvE,SAAQ,SAAA7F,GACtBA,EAAOqK,iBAAiB,aAAa,SAACX,GAC9BA,EAAEN,OAAOP,QAAQ9L,OAAS,IAC1B2M,EAAEY,KAAO,WAItB,O,sDCrBP,IAAQC,EAAUrO,GAAGsO,gCAAbD,MACAE,EAAgBvO,GAAGC,OAAnBsO,YAQFC,EAA8B,SAACC,GAEpC,OADqBJ,EAAMI,EAAQC,QAAQC,KACvBxE,MAAK,SAAAsB,GAAK,MAAI,0CAA4CA,EAAMmD,cASxE1K,EAAsB,SAACH,GAKnC,OAJsBA,EAAS8K,QAAO,SAAAJ,GACrC,OAAOA,EAAQ9L,GAAK6L,EAA4BC,QAAWK,KAGvChO,KAAI,SAAA2N,GACxB,IAAMM,EAAUP,EAA4BC,GAASO,MACrD,MAAO,CACNrM,GAAI8L,EAAQ9L,GACZzC,MAAOuO,EAAQvO,MAAMyO,IACrB9M,YAAakN,EAAQlN,YACrBC,IAAKiN,EAAQjN,IACbC,WAAYgN,EAAQhN,WACpBC,QAAS+M,EAAQ/M,QACjBC,SAAU8M,EAAQ9M,cA2BRqK,EAA8B,SAACH,GAE3C,OADkCA,EAAiB0C,QAAO,SAAAhN,GAAW,OAAIA,EAAYhB,UACpDC,KAAI,SAAAe,GACpC,IAAIoN,EApB2B,SAACC,GACjC,IAAMC,EAAY,4BACdF,EAAc,GAKlB,MAJK,iBAAoBC,IAAiBA,aAAAA,EAAAA,EAAeE,OAAOD,KAAc,IAC7EF,EAAcC,EAAc7B,MAAM8B,IAG5BF,EAAY,GAaAI,CAAkBxN,GAChCyN,EAAY,iBACZC,EAAY,CAAEb,QAAS7M,GAK3B,OAJIoN,IACHK,EAAY,qCACZC,EAAY,CAAEzN,IAAKmN,EAAapN,YAAaA,IAEvC0M,EAAYe,EAAWC,Q,qBCvEhCC,EAAOC,QAAUjL,OAAW,GAAW,S,qBCAvCgL,EAAOC,QAAUjL,OAAW,GAAQ,M,2BCArB,SAASkL,EAAgBC,EAAKC,EAAKtN,GAYhD,OAXIsN,KAAOD,EACT3I,OAAO6I,eAAeF,EAAKC,EAAK,CAC9BtN,MAAOA,EACPwN,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIC,GAAOtN,EAGNqN,E,6CCZM,SAASM,IActB,OAbAA,EAAWjJ,OAAOkJ,OAASlJ,OAAOkJ,OAAOC,OAAS,SAAUjD,GAC1D,IAAK,IAAIvH,EAAI,EAAGA,EAAIyK,UAAUvP,OAAQ8E,IAAK,CACzC,IAAI0K,EAASD,UAAUzK,GAEvB,IAAK,IAAIiK,KAAOS,EACVrJ,OAAOC,UAAUqJ,eAAe9J,KAAK6J,EAAQT,KAC/C1C,EAAO0C,GAAOS,EAAOT,IAK3B,OAAO1C,GAEF+C,EAASM,MAAMC,KAAMJ,W,mBCb1BK,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7B,IAAjB8B,EACH,OAAOA,EAAanB,QAGrB,IAAID,EAASiB,EAAyBE,GAAY,CAGjDlB,QAAS,IAOV,OAHAoB,EAAoBF,GAAUnB,EAAQA,EAAOC,QAASiB,GAG/ClB,EAAOC,QCpBfiB,EAAoBI,EAAI,CAACrB,EAASsB,KACjC,IAAI,IAAInB,KAAOmB,EACXL,EAAoB7J,EAAEkK,EAAYnB,KAASc,EAAoB7J,EAAE4I,EAASG,IAC5E5I,OAAO6I,eAAeJ,EAASG,EAAK,CAAEE,YAAY,EAAMkB,IAAKD,EAAWnB,MCJ3Ec,EAAoB7J,EAAI,CAAC8I,EAAKsB,IAAUjK,OAAOC,UAAUqJ,eAAe9J,KAAKmJ,EAAKsB,GCClFP,EAAoBQ,EAAKzB,IACH,oBAAXxJ,QAA0BA,OAAOkL,aAC1CnK,OAAO6I,eAAeJ,EAASxJ,OAAOkL,YAAa,CAAE7O,MAAO,WAE7D0E,OAAO6I,eAAeJ,EAAS,aAAc,CAAEnN,OAAO,KCJvD8O,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KAGTA,EAAS,M","sources":["webpack://good-guitarist/./assets/src/scripts/blocks/chord-diagram/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/chord-diagram/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/chord-diagram/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/group/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/index.js","webpack://good-guitarist/external window [\"wp\",\"blocks\"]","webpack://good-guitarist/external window [\"wp\",\"blockEditor\"]","webpack://good-guitarist/external window [\"wp\",\"components\"]","webpack://good-guitarist/./assets/src/scripts/blocks/section/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/section/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/section/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockSave.jsx","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://good-guitarist/./assets/src/scripts/components/SidebarCta.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/index.js","webpack://good-guitarist/./assets/src/scripts/modules/gutenbergUtils.js","webpack://good-guitarist/./assets/src/scripts/utils.js","webpack://good-guitarist/external window [\"wp\",\"element\"]","webpack://good-guitarist/external window [\"wp\",\"i18n\"]","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://good-guitarist/webpack/bootstrap","webpack://good-guitarist/webpack/runtime/define property getters","webpack://good-guitarist/webpack/runtime/hasOwnProperty shorthand","webpack://good-guitarist/webpack/runtime/make namespace object","webpack://good-guitarist/./assets/src/scripts/gutenberg.js"],"sourcesContent":["const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\nimport { BlockSave } from \"./BlockSave\";\n\nregisterBlockType( 'gutenberg-good-guitarist/chord-diagram', {\n    title: 'Chord Diagram',\n    icon: 'playlist-audio',\n    category: 'text',\n\tattributes: {\n\t\tchords: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t}\n\t},\n    edit: BlockEdit,\n    save: BlockSave\n});","import { __ } from '@wordpress/i18n';\n\nexport const BlockEdit = ({ className, attributes, setAttributes }) => {\n    const { chords } = attributes;\n\n    return (\n        <figure className={className}>\n            { chords.length > 0 ? chords.map(chord => (\n                <img src={chord.image} alt={`${chord.title} chord`}/>\n            )) : <p>{__('No chords selected.')}</p>}\n        </figure>\n    )\n}","export const BlockSave = ({ className, attributes, setAttributes }) => {\n    const { chords } = attributes;\n\n    return (\n        <figure className={className}>\n            { chords && chords.map(chord => (\n                <img src={chord.image} alt={`${chord.title} chord`}/>\n            ))}\n        </figure>\n    )\n}","const { TextControl, Button } = wp.components;\nconst { useBlockProps, MediaUpload, MediaUploadCheck } = wp.blockEditor;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({attributes, setAttributes}) => {\n    const {url, description, buttonText, imageId, imageUrl} = attributes;\n    const blockProps = useBlockProps();\n\n    const onSelectMedia = (newImage) => {\n        setAttributes({\n            imageId: newImage.id,\n            imageUrl: newImage.url\n        });\n    }\n\n    const removeMedia = () => {\n        setAttributes({\n            imageId: 0,\n            imageUrl: ''\n        });\n    }\n\n    return (\n        <div { ...blockProps }>\n            <TextControl\n                label={__('Description')}\n                value={description}\n                onChange={(newValue) => setAttributes({description: newValue})}\n            />\n            <TextControl\n                label={__('URL')}\n                value={url}\n                onChange={(newValue) => setAttributes({url: newValue})}\n            />\n            <TextControl\n                label={__('Button text (if nothing is entered, button text will be \"Click here\")')}\n                value={buttonText}\n                onChange={(newValue) => setAttributes({buttonText: newValue})}\n            />\n            <div className=\"media-upload-component\">\n                <label className=\"image-label\">{__('Call to action thumbnail (if no image is chosen, a default image will be used)')}</label>\n                { imageUrl && <img className=\"course-image\" src={imageUrl} /> }\n                <MediaUploadCheck>\n                    <MediaUpload\n                        onSelect={onSelectMedia}\n                        allowedTypes={ ['image'] }\n                        render={({open}) => (\n                            <Button\n                            className={0 === imageId ? 'select-image-button' : 'select-image-button button-hidden'}\n                            onClick={open}\n                            >\n                                {imageId == 0 && __('Choose an image')}\n                            </Button>\n                        )}\n                        />\n                </MediaUploadCheck>\n                {imageId !== 0 &&\n                    <MediaUploadCheck>\n                        <Button onClick={removeMedia} isLink isDestructive>{__('Remove image')}</Button>\n                    </MediaUploadCheck>\n                }\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\n\nregisterBlockType( 'gutenberg-good-guitarist/cta-template', {\n    title: 'Call to Action Template',\n    icon: 'admin-customizer',\n    category: 'text',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\timageId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n    edit: BlockEdit,\n    save: () => null\n});","const { addFilter } = wp.hooks;\n\n/**\n * Modify the Gutenberg group block.\n * \n * @param {*} settings \n * @returns \n */\nconst modifyGroupBlock = (settings) => {\n\tif (settings.name !== 'core/group') {\n        return settings\n    }\n\n    const newSettings = {\n        ...settings,\n    }\n\n    return settings;\n}\n\n\naddFilter(\n    'blocks.registerBlockType',\n    'good-guitarist/modify-group-block',\n    modifyGroupBlock\n)\n","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, className, setAttributes }) => {\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta', { per_page: -1 });\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        title: cta.title,\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        buttonText: cta.buttonText\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div className={className}>\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        className=\"toolbar-toggle-cta\"\n                        label={__(\"Use with an existing call to action\")}\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n        </div> \n    );\n}","const { __ } = wp.i18n;\nimport { BlockEdit } from \"./BlockEdit\";\nimport { BlockSave } from \"./BlockSave\";\nconst { registerBlockType } = wp.blocks;\n\nregisterBlockType( 'gutenberg-good-guitarist/large-cta', {\n\ttitle: __('Large Call to Action'),\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'large-cta',\n\tattributes: {\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes, className }) => {\n    const { title, url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div className={className}>\n            <img className=\"lcc-image\" src={imageUrl} alt=\"\" />\n            <div>\n                <h3 className=\"lcc-heading\">{title}</h3>\n                <div className=\"lcc-body\">{description}</div>\n            </div>\n            <a className=\"lcc-button\" href={url}>{buttonText}</a>\n        </div>\n    )\n}","const { __ } = wp.i18n;\n\nexport const BlockEdit = () => {\n    return (\n        <div>\n            <h2 className=\"dynamic-block-h2\">{__('Latest Lessons Carousel')}</h2>\n            <small>{__('A carousel of the latest lessons will appear here on the frontend.')}</small>\n        </div>\n    )\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/latest-lessons', {\n\ttitle: 'Latest Lessons',\n\ticon: 'list',\n\tcategory: 'layout',\n\tclassName: 'latest-lessons',\n\tattributes: {\n\t\tlessons: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: () => null\n})","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType(\"gutenberg-good-guitarist/section\", {\n  title: __(\"Section\"),\n  icon: \"align-full-width\",\n  category: \"layout\",\n  attributes: {\n      gutterWidth: {\n          type: 'number',\n          default: 0,\n      },\n  },\n  edit: BlockEdit,\n  save: BlockSave,\n});","import { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody } from \"@wordpress/components\";\nimport { __experimentalNumberControl as NumberControl } from '@wordpress/components';\n\n/**\n * Edit react component for Section block.\n * \n * @param {Object} props React props passed to this component.\n * @returns {JSX}\n */\nexport const BlockEdit = ({ className, attributes, setAttributes }) => {\n    const { gutterWidth } = attributes;\n\n    const gutterStyles = {\n        paddingLeft: `${gutterWidth}%`,\n        paddingRight: `${gutterWidth}%`\n    };\n\n    return (\n        <div className={className} style={gutterStyles}>\n            <InspectorControls>\n                <PanelBody\n                    title={__('Gutter width')}\n                    initialOpen={true}\n                >\n                    <p>{__('Enter a value for the left and right margins of this block. The higher the value, the more space will appear to the left and right of the Section content.')}</p>\n                    <p style={{ fontStyle: \"italic\" }}>{__('The grey colour on either is side is only to illustrate the size of the margins. Grey will not be used on the front end.')}</p>\n                    <NumberControl\n                        data-testid=\"gutter-input\"\n                        onChange={(newValue) => setAttributes({ gutterWidth: newValue })}\n                        max={100}\n                        min={0}\n                        value={gutterWidth}\n                    />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks />\n            </div>\n        );\n}","import { InnerBlocks } from \"@wordpress/block-editor\";\n\n/**\n * Save react component for Section block.\n * \n * @param {Object} props React props passed to this component.\n * @returns {JSX}\n */\n export const BlockSave = ({ className, attributes }) => {\n    const { gutterWidth } = attributes;\n\n    const gutterStyles = {\n        marginLeft: `${gutterWidth}%`,\n        marginRight: `${gutterWidth}%`,\n    };\n\n    return (\n        <div className={className} style={gutterStyles}>\n            <InnerBlocks.Content />\n        </div>\n    );\n}","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, setAttributes }) => {\n    const blockProps = useBlockProps();\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta', { per_page: -1 });\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        imageUrl: cta.imageUrl,\n                        buttonText: cta.buttonText\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div {...blockProps} className=\"small-cta\">\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        className=\"toolbar-toggle-cta\"\n                        label=\"Use with an existing call to action\"\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n         </div>\n    )\n\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/small-cta', {\n\ttitle: 'Small Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'small-cta',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes }) => {\n    const { url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n            </div>\n            <div className=\"details-container\">\n                <p>{description}</p>\n                <a className=\"cta-button\" href={url}>{buttonText}</a>\n            </div>\n        </div>\n    )\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const { __ } = wp.i18n;\n\n/**\n * Small call to action block that appears in Youtube post sidebars.\n * \n * @param {object} cta The CTA info to display.\n * @returns {JSX}\n */\nexport const SidebarCta = ({cta}) => {\n    const { description, imageUrl, url, buttonText } = cta;\n    return (\n        <div className=\"sidebar-cta-card\">\n            <img src={imageUrl || gutenbergVars.image_dir + '/good-guitarist-preview-img.png'} alt=\"\" />\n            <div className=\"cta-card-body\">\n                <p className=\"body-text\">{description}</p>\n                <a className=\"cta-url-button\" href={url}>{buttonText || __(\"Click here\")}</a>\n            </div>\n        </div>\n    )\n}","import { getCtaDataFromPosts, createBlocksFromDescription } from '../../utils';\nimport { SidebarCta } from '../../components/SidebarCta';\nconst { TextControl, PanelRow, SelectControl, ToggleControl, Spinner } = wp.components;\nconst { useBlockProps, InnerBlocks } = wp.blockEditor;\nconst { PluginDocumentSettingPanel } = wp.editPost;\nconst { select, useSelect, dispatch, useDispatch } = wp.data;\nconst { useRef, useState, useEffect } = wp.element;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({ clientId, attributes, className, setAttributes }) => {\n    const {\n        videoInfoFetched,\n        videoID,\n        videoUrlRaw,\n        videoUrlEmbed,\n        videoTitle,\n        videoThumbnail,\n        songTitle,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo\n    } = attributes;\n\n    const blockProps = useBlockProps();\n    const postBody = useRef();\n    const [isFetching, setIsFetching] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({\n        class: 'fetch-message-hidden',\n        message: ''\n    });\n\n    useEffect(() => {\n        if (!gutenbergVars.youtube_api_key) {\n            setErrorMessage({\n                class: 'fetch-message-fail',\n                message: __('Youtube API key not detected. Please ensure you have entered a valid API key in the \"GG Settings\" section.')\n            });\n        }\n    }, []);\n\n    const { postMeta, ctaData, ctaSelectOptions } = useSelect( ( select ) => {\n        const ctaPosts = select( 'core' ).getEntityRecords( 'postType', 'cta', { per_page: -1 } );\n        let ctaData;\n        let ctaSelectOptions = [{\n            label: 'None',\n            value: -1\n        }];\n        if (ctaPosts) {\n            ctaData = getCtaDataFromPosts(ctaPosts);\n            // Create dropdown options.\n            ctaData.forEach((cta) => {\n                ctaSelectOptions.push({\n                    label: cta.title,\n                    value: cta.id,\n                });\n            });\n        }\n\n        return {\n            postMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n            ctaData: ctaData,\n            ctaSelectOptions: ctaSelectOptions,\n        };\n    } );\n\n    const handleSidebarToggle = (sidebarSlot, ctaId) => {\n        if (ctaData) {\n            const numId = Number(ctaId);\n            const cta = ctaData.find(cta => cta.id === numId);\n            setAttributes({ [sidebarSlot]: {\n                id: numId,\n                ...cta\n            }});\n        }\n        \n    }\n\n    /**\n     * Parse the youtube video ID from the URL.\n     * Set the video URL and ID attributes.\n     *\n     * @param {*} event\n     */\n    const handleURLChange = (event) => {\n        let url = event.target.value;\n        let parsedVideoID = null;\n        let videoIDMatch = url.match(/(\\?v=)(\\w|-)+/g);\n        if (videoIDMatch) {\n            parsedVideoID = videoIDMatch[0].replace('?v=', '');\n        }\n        setAttributes({\n            videoID: parsedVideoID,\n            videoUrlRaw: url,\n            videoUrlEmbed: `https://www.youtube.com/embed/${parsedVideoID}`\n        })\n    }\n\n    /**\n     * Update fetch completion message state and make message visible to user.\n     *\n     * @param {Boolean} completedSuccessfully\n     * @param {String} errorMessage\n     */\n    const showFetchCompleteMessage = ( completedSuccessfully, errorMessage = '' ) => {\n        let fetchMessageClass = '';\n        let fetchMessageText = '';\n        if ( completedSuccessfully ) {\n            fetchMessageClass = 'fetch-message-success';\n            fetchMessageText = __('Video information fetched successfully.');\n        } else {\n            fetchMessageClass = 'fetch-message-fail';\n            fetchMessageText = __('Couldn\\'t fetch video information.') + ` ${errorMessage}`;\n        }\n        setErrorMessage({\n            class: fetchMessageClass,\n            message: fetchMessageText\n        });\n        setTimeout(() => {\n            setErrorMessage({\n                class: 'fetch-message-hidden',\n                message: ''\n            })\n        }, 3000);\n    }\n\n    /**\n     * Handle a successful youtube video fetch.\n     *\n     * @param {Object} response\n     */\n    const handleFetchResponse = (response) => {\n        try {\n            // Remove old innerBlocks in post body.\n            const currentBlock = select( 'core/block-editor' ).getBlocksByClientId( clientId )[ 0 ];\n            const childBlockIds = currentBlock.innerBlocks.map( block => block.clientId );\n            dispatch( 'core/block-editor' ).removeBlocks( childBlockIds );\n\n            const fetchedTitle = response.result.items[0].snippet.title;\n            const fetchedDescription = response.result.items[0].snippet.description;\n            const fetchedThumbnail = response.result.items[0].snippet.thumbnails.medium.url;\n            const descriptionArray = fetchedDescription.split('\\n');\n            const postBodyBlocks = createBlocksFromDescription(descriptionArray);\n\n            // Update the post title.\n            dispatch('core/editor').editPost({ title: fetchedTitle });\n\n            // Update innerBlocks in post body.\n            dispatch('core/block-editor').insertBlocks(postBodyBlocks, 0, clientId);\n\n            // Set attributes from fetched video info.\n            setAttributes({\n                videoTitle: fetchedTitle,\n                videoThumbnail: fetchedThumbnail,\n                videoInfoFetched: true\n            });\n\n            // Give some feedback to the user that the fetch has completed.\n            showFetchCompleteMessage( true );\n        } catch (error) {\n            // Let the user know the operation failed.\n            showFetchCompleteMessage( false );\n            console.error(error);\n        }\n    }\n\n    /**\n     * Interface with the google client API to perform a fetch request\n     * to get information from the youtube video ID.\n     *\n     * @link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md\n     *\n     * @param {MouseEvent} event\n     * @param {String} videoID\n     */\n    const initFetch = (event, videoID) => {\n        event.preventDefault();\n        setIsFetching(true);\n        setErrorMessage({\n            class: 'fetch-message-hidden',\n            message: ''\n        });\n        gapi.load('client', () => {\n            gapi.client.setApiKey(gutenbergVars.youtube_api_key);\n            gapi.client.load('youtube', 'v3', () => {\n                gapi.client.youtube.videos.list({\n                    part: 'snippet',\n                    id : videoID\n                })\n                .then(response => {\n                    setIsFetching(false);\n                    handleFetchResponse(response);\n                }, error => {\n                    setIsFetching(false);\n                    // Let the user know the fetch failed.\n                    showFetchCompleteMessage( false, error );\n                });\n            })\n        })\n    }\n\n    return (\n        <div { ...blockProps } className={ className }>\n            <PluginDocumentSettingPanel\n                name=\"sidebar-cta-slots\"\n                title={__(\"Video sidebar CTA slots\")}\n                className=\"sidebar-cta-slots-panel\"\n            >\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        className=\"sidebar-cta-select-control\"\n                        label={__('Sidebar CTA slot 1')}\n                        value={sidebarCtaSlotOne.id}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => handleSidebarToggle(\"sidebarCtaSlotOne\", newValue)}\n                    />\n                </PanelRow>}\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        className=\"sidebar-cta-select-control\"\n                        label={__('Sidebar CTA slot 2')}\n                        value={sidebarCtaSlotTwo.id}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => handleSidebarToggle(\"sidebarCtaSlotTwo\", newValue)}\n                    />\n                </PanelRow>}\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"song-difficulty-attributes\"\n                title={__('Song difficulty')}\n                className=\"song-difficulty-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <TextControl\n                        label={__('Enter a number from 1 to 50')}\n                        value={ postMeta.song_difficulty }\n                        onChange={ (newValue) => dispatch('core/editor').editPost({meta: { song_difficulty: newValue }})}\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"contains-only-one-barre-chord\"\n                title={__('Contains only one barre chord')}\n                className=\"contains-only-one-barre-chord-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <ToggleControl\n                        label={__('One barre chord song')}\n                        checked={ postMeta.contains_one_barre }\n                        onChange={ (newValue) => dispatch('core/editor').editPost({meta: { contains_one_barre: newValue }}) }\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <section className=\"video-details\">\n                <h2>{__('Video Details')}</h2>\n                <span className={`fetch-message ${errorMessage.class}`}>{errorMessage.message}</span>\n                <label className=\"youtube-post-label\" htmlFor=\"youtube-video-url\">Search by Youtube video URL</label>\n                <form onSubmit={(event) => initFetch(event, videoID)}>\n                    <input\n                        id=\"youtube-video-url\"\n                        label={__('Video URL')}\n                        className=\"youtube-video-url\"\n                        value={ videoUrlRaw }\n                        onChange={handleURLChange}\n                    />\n                    <button type=\"submit\" className=\"yt-submit-button\" disabled={isFetching}>{isFetching ? <Spinner /> : __('Submit') }</button>\n                </form>\n                { videoTitle && <TextControl label={__('Video Title')} value={videoTitle} onChange={(e) => setAttributes({videoTitle: e.target.value})} />}\n                { ( videoThumbnail && videoInfoFetched ) &&\n                    <>\n                        <label className=\"youtube-post-label\">{__('Video Thumbnail')}</label>\n                        <img src={videoThumbnail} />\n                    </>\n                }\n                <label className=\"youtube-post-label\" htmlFor=\"song-title\">{__('Song Title')}</label>\n                <input id=\"song-title\" type=\"text\" value={songTitle} onChange={(e) => setAttributes({songTitle: e.target.value})} />\n            </section>\n            <section ref={postBody} className=\"post-body\">\n                <h2>{__('Post Body')}</h2>\n                { videoID ? <>\n                    <div className=\"youtube-post-video-area\">\n                        { videoInfoFetched && <iframe width=\"560\"\n                                                  height=\"615\"\n                                                  src={videoUrlEmbed}\n                                                  className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                                  title=\"YouTube video player\"\n                                                  frameborder=\"0\"\n                                                  allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                  allowfullscreen></iframe> }\n                        { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                            { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                            { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                        </div> }\n                    </div>\n                    <div className=\"post-content-video-description\">\n                        <InnerBlocks />\n                    </div>\n                </> : <span className=\"empty-post-body-msg\">{__('Submit URL to populate post body.')}</span> }\n            </section>\n        </div>\n    );\n}","const { InnerBlocks } = wp.blockEditor;\nimport { SidebarCta } from '../../components/SidebarCta';\n\nexport const BlockSave = ({ attributes, className }) => {\n    const {\n        videoUrlEmbed,\n        videoInfoFetched,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo\n    } = attributes;\n\n    return (\n        <div className=\"wp-block-gutenberg-good-guitarist-ypt\">\n            <div className=\"youtube-post-video-area\">\n                { videoInfoFetched && <iframe width=\"560\"\n                                            height=\"615\"\n                                            src={videoUrlEmbed}\n                                            className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                            title=\"YouTube video player\"\n                                            frameborder=\"0\"\n                                            allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                            allowfullscreen></iframe> }\n                { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                    { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                    { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                </div> }\n            </div>\n            <div class={`youtube-post-type-video-description`}>\n                <InnerBlocks.Content />\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt', {\n\tapiVersion: 2,\n\ttitle: 'Youtube Post Template',\n\ticon: 'playlist-video',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type',\n\tattributes: {\n\t\tvideoInfoFetched: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\tvideoTitle: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tvideoThumbnail: {\n\t\t\ttype: 'string',\n\t\t\tdefault: gutenbergVars.image_dir + '/good-guitarist-preview-img.png'\n\t\t},\n\t\tvideoDescription: {\n\t\t\ttype: 'array',\n\t\t},\n\t\tvideoID: {\n\t\t\ttype: 'string',\n\t\t},\n        videoUrlRaw: {\n            type: 'string',\n            default: ''\n        },\n        videoUrlEmbed: {\n            type: 'string',\n            default: ''\n        },\n\t\tsongTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tsidebarCtaSlotOne: {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t},\n\t\tsidebarCtaSlotTwo: {\n\t\t\ttype: 'object',\n\t\t\tdefault: {}\n\t\t},\n\t\tpostBodyElements: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","const { __ } = wp.i18n;\n\nexport const BlockEdit = () => (\n    <h2>{__('A song/youtube post search box will appear here.')}</h2>\n)","const { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt-search', {\n\ttitle: 'Youtube Post Search Box',\n\ticon: 'search',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type-search',\n\tattributes: {},\n\tedit: BlockEdit,\n\tsave: () => null\n})","/**\n * Sets a max height for the sidebar CTA dropdowns since there may be\n * very many CTAs to choose from.\n * \n * @todo    Finish this function/see if there's a better way to implement it.\n * @return  {void}\n */\nexport const sidebarCTASelectsMaxHeight = () => {\n    // Hack: Need to set a timer to wait for Gutenber to populate dropdowns.\n    // Not sure if there's a hook/event I can hook into instead.\n    setTimeout(() => {\n        // Give Youtube Post sidebar CTA dropdown max height and make it scroll-able.\n        const sidebarCTASelects = document.querySelectorAll('.sidebar-cta-select-control');\n        \n        sidebarCTASelects.forEach(select => {\n            select.addEventListener('mousedown', (e) => {\n                if (e.target.options.length > 8) {\n                    e.size = 8;\n                }\n            });\n        })\n    }, 3000);\n}\n\n\n/**\n * Bootstrap function for all Gutenberg utility functions.\n * \n * @return {void}\n */\nconst gutenbergUtils = () => {\n    sidebarCTASelectsMaxHeight();\n}\n\n// gutenbergUtils();\n","const { parse } = wp.blockSerializationDefaultParser;\nconst { createBlock } = wp.blocks;\n\n/**\n * Parse 'gutenberg-good-guitarist/cta-template' block from a post.\n *\n * @param {array} ctaPost\n * @returns {array}\n */\nconst getCtaTemplateBlockFromPost = (ctaPost) => {\n\tconst parsedBlocks = parse(ctaPost.content.raw);\n\treturn parsedBlocks.find(block => 'gutenberg-good-guitarist/cta-template' === block.blockName);\n}\n\n/**\n *  Format CTA data from a CTA post.\n *\n * @param {array} ctaPosts\n * @returns {array}\n */\nexport const getCtaDataFromPosts = (ctaPosts) => {\n\tconst validCtaPosts = ctaPosts.filter(ctaPost => {\n\t\treturn ctaPost.id ? getCtaTemplateBlockFromPost(ctaPost) : undefined;\n\t})\n\n\treturn validCtaPosts.map(ctaPost => {\n\t\tconst ctaAtts = getCtaTemplateBlockFromPost(ctaPost).attrs;\n\t\treturn {\n\t\t\tid: ctaPost.id,\n\t\t\ttitle: ctaPost.title.raw,\n\t\t\tdescription: ctaAtts.description,\n\t\t\turl: ctaAtts.url,\n\t\t\tbuttonText: ctaAtts.buttonText,\n\t\t\timageId: ctaAtts.imageId,\n\t\t\timageUrl: ctaAtts.imageUrl\n\t\t}\n\t})\n}\n\n/**\n * Check if string has http:// or https:// in it.\n *\n * @param {string} stringToCheck\n */\nexport const getLinkFromString = (stringToCheck) => {\n\tconst linkRegex = /(http:\\/\\/|https:\\/\\/).*/g;\n\tlet matchedLink = '';\n\tif ( 'string' === typeof stringToCheck && stringToCheck?.search(linkRegex) >= 0 ) {\n\t\tmatchedLink = stringToCheck.match(linkRegex);\n\t}\n\t// Return the first matched link.\n\treturn matchedLink[0];\n}\n\n/**\n * Create a gutenberg block for each paragraph of the fetched\n * youtube description.\n *\n * @param {array} descriptionArray\n * @returns\n */\nexport const createBlocksFromDescription = (descriptionArray) => {\n\tconst descriptionWithoutEmpties = descriptionArray.filter(description => description.length);\n\treturn descriptionWithoutEmpties.map(description => {\n\t\tlet matchedLink = getLinkFromString(description);\n\t\tlet blockType = 'core/paragraph';\n\t\tlet blockAtts = { content: description };\n\t\tif (matchedLink) {\n\t\t\tblockType = 'gutenberg-good-guitarist/small-cta';\n\t\t\tblockAtts = { url: matchedLink, description: description }\n\t\t}\n\t\treturn createBlock(blockType, blockAtts);\n\t});\n}","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Import Gutenberg custom blocks.\nrequire( './blocks/small-cta' );\nrequire( './blocks/large-cta' );\nrequire( './blocks/cta-template' );\nrequire( './blocks/group' );\nrequire( './blocks/latest-lessons' );\nrequire( './blocks/youtube-post-template' );\nrequire( './blocks/ypt-search' );\nrequire( './blocks/section' );\nrequire( './blocks/chord-diagram' );\n\n// Import utils to customize Gutenberg interface.\nrequire( './modules/gutenbergUtils' );"],"names":["registerBlockType","wp","blocks","title","icon","category","attributes","chords","type","default","edit","className","setAttributes","createElement","length","map","chord","src","image","alt","__","save","components","TextControl","Button","blockEditor","useBlockProps","MediaUpload","MediaUploadCheck","i18n","description","url","buttonText","imageId","imageUrl","gutenbergVars","image_dir","blockProps","label","value","onChange","newValue","onSelect","newImage","id","allowedTypes","render","open","onClick","isLink","isDestructive","addFilter","hooks","settings","name","editor","BlockControls","Toolbar","ToolbarDropdownMenu","TextareaControl","useSelect","data","ctaSelectOptions","select","ctaPosts","getEntityRecords","per_page","getCtaDataFromPosts","cta","controls","media","href","lessons","window","gutterWidth","gutterStyles","paddingLeft","paddingRight","style","InspectorControls","PanelBody","initialOpen","fontStyle","NumberControl","max","min","InnerBlocks","marginLeft","marginRight","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","TypeError","SidebarCta","PanelRow","SelectControl","ToggleControl","Spinner","PluginDocumentSettingPanel","editPost","dispatch","useDispatch","element","useRef","useState","useEffect","apiVersion","videoInfoFetched","videoTitle","videoThumbnail","videoDescription","videoID","videoUrlRaw","videoUrlEmbed","songTitle","sidebarCtaSlotOne","sidebarCtaSlotTwo","postBodyElements","clientId","postBody","isFetching","setIsFetching","class","message","errorMessage","setErrorMessage","youtube_api_key","ctaData","forEach","postMeta","getEditedPostAttribute","handleSidebarToggle","sidebarSlot","ctaId","numId","Number","find","showFetchCompleteMessage","completedSuccessfully","fetchMessageClass","fetchMessageText","setTimeout","initFetch","event","preventDefault","gapi","load","client","setApiKey","youtube","videos","list","part","then","response","childBlockIds","getBlocksByClientId","innerBlocks","block","removeBlocks","fetchedTitle","result","items","snippet","fetchedDescription","fetchedThumbnail","thumbnails","medium","descriptionArray","split","postBodyBlocks","createBlocksFromDescription","insertBlocks","error","console","handleFetchResponse","options","song_difficulty","meta","checked","contains_one_barre","htmlFor","onSubmit","target","parsedVideoID","videoIDMatch","match","replace","disabled","e","ref","width","height","frameborder","allow","allowfullscreen","Content","sidebarCTASelectsMaxHeight","document","querySelectorAll","addEventListener","size","parse","blockSerializationDefaultParser","createBlock","getCtaTemplateBlockFromPost","ctaPost","content","raw","blockName","filter","undefined","ctaAtts","attrs","matchedLink","stringToCheck","linkRegex","search","getLinkFromString","blockType","blockAtts","module","exports","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_extends","assign","bind","arguments","source","hasOwnProperty","apply","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","get","prop","r","toStringTag","require"],"sourceRoot":""}