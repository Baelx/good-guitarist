{"version":3,"file":"/js/gutenberg.js","mappings":"4DAAA,EAAgCA,GAAGC,WAA3BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACrB,EAAyDH,GAAGI,YAApDC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,iBAC5BC,EAAOR,GAAGS,KAAVD,ICCRE,EAH8BV,GAAGW,OAAzBD,mBAGW,wCAAyC,CACxDE,MAAO,0BACPC,KAAM,mBACNC,SAAU,OACbC,WAAY,CACXC,YAAa,CACZC,KAAM,SACNC,QAAS,IAEVC,IAAK,CACJF,KAAM,SACNC,QAAS,IAEVE,WAAY,CACXH,KAAM,SACNC,QAAS,IAEVG,QAAS,CACRJ,KAAM,UACNC,QAAS,GAEVI,SAAU,CACTL,KAAM,SACNC,QAAA,UAAYK,cAAcC,UAA1B,qCAGCC,KDzBqB,SAAC,GAAgC,IAA/BV,EAA+B,EAA/BA,WAAYW,EAAmB,EAAnBA,cAC5BP,EAAmDJ,EAAnDI,IAAKH,EAA8CD,EAA9CC,YAAaI,EAAiCL,EAAjCK,WAAYC,EAAqBN,EAArBM,QAASC,EAAYP,EAAZO,SACxCK,EAAatB,IAgBnB,OACIuB,EAAAA,EAAAA,eAAAA,MAAUD,GACNC,EAAAA,EAAAA,eAAC1B,EAAD,CACI2B,MAAOrB,EAAG,eACVsB,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAcN,EAAc,CAACV,YAAagB,QAExDJ,EAAAA,EAAAA,eAAC1B,EAAD,CACI2B,MAAOrB,EAAG,OACVsB,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAcN,EAAc,CAACP,IAAKa,QAEhDJ,EAAAA,EAAAA,eAAC1B,EAAD,CACI2B,MAAOrB,EAAG,yEACVsB,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAcN,EAAc,CAACN,WAAYY,QAEvDJ,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,2BACXL,EAAAA,EAAAA,eAAAA,QAAAA,CAAOK,UAAU,eAAezB,EAAG,mFACjCc,IAAYM,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,eAAeC,IAAKZ,KACjDM,EAAAA,EAAAA,eAACrB,EAAD,MACIqB,EAAAA,EAAAA,eAACtB,EAAD,CACI6B,SApCE,SAACC,GACnBV,EAAc,CACVL,QAASe,EAASC,GAClBf,SAAUc,EAASjB,OAkCPmB,aAAe,CAAC,SAChBC,OAAQ,gBAAEC,EAAF,EAAEA,KAAF,OACJZ,EAAAA,EAAAA,eAACzB,EAAD,CACA8B,UAAW,IAAMZ,EAAU,sBAAwB,oCACnDoB,QAASD,GAEO,GAAXnB,GAAgBb,EAAG,wBAKvB,IAAZa,IACGO,EAAAA,EAAAA,eAACrB,EAAD,MACIqB,EAAAA,EAAAA,eAACzB,EAAD,CAAQsC,QA3CR,WAChBf,EAAc,CACVL,QAAS,EACTC,SAAU,MAwCgCoB,QAAM,EAACC,eAAa,GAAEnC,EAAG,qBC5B3EoC,KAAM,kBAAM,S,8QCThBC,EArBsB7C,GAAG8C,MAAjBD,WAsBJ,2BACA,qCAfqB,SAACE,GACzB,GAAsB,eAAlBA,EAASC,KACN,OAAOD,G,6VAGS,CAAH,GACVA,GAGP,OAAOA,M,wDChBHvC,EAAOR,GAAGS,KAAVD,GACAF,EAAgBN,GAAGiD,OAAnB3C,YACR,EAAyCN,GAAGI,YAArB8C,GAAvB,EAAQ7C,cAAR,EAAuB6C,eACvB,EAAuElD,GAAGC,WAAlEkD,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,oBAAqBlD,EAAtC,EAAsCA,YAAamD,EAAnD,EAAmDA,gBAC3CC,EAActD,GAAGuD,KAAjBD,UCLA9C,EAAOR,GAAGS,KAAVD,IAKRE,EAF8BV,GAAGW,OAAzBD,mBAEW,qCAAsC,CACxDE,MAAOJ,EAAG,wBACVK,KAAM,YACNC,SAAU,SACVmB,UAAW,YACXlB,WAAY,CACXH,MAAO,CACNK,KAAM,SACNC,QAAS,IAEVF,YAAa,CACZC,KAAM,SACNC,QAAS,IAEVC,IAAK,CACJF,KAAM,SACNC,QAAS,IAEVE,WAAY,CACXH,KAAM,SACNC,QAAS,cAEVG,QAAS,CACRJ,KAAM,UAEPK,SAAU,CACTL,KAAM,SACNC,QAAA,UAAYK,cAAcC,UAA1B,qCAGFC,KD5BwB,SAAC,GAA6C,IAA3CV,EAA2C,EAA3CA,WAAYkB,EAA+B,EAA/BA,UAAWP,EAAoB,EAApBA,cACvCP,EAAoDJ,EAApDI,IAAKC,EAA+CL,EAA/CK,WAAYJ,EAAmCD,EAAnCC,YAAaK,EAAsBN,EAAtBM,QAASC,EAAaP,EAAbO,SAEzCkC,EAAmBF,GAAU,SAAAG,GAC/B,IAAMC,EAAWD,EAAO,QAAQE,iBAAiB,WAAY,OAC7D,GAAID,EAIA,OAHgBE,EAAAA,EAAAA,IAAoBF,GAGrBG,KAAI,SAACC,GAChB,MAAO,CACHlD,MAAOkD,EAAIlD,MACX6B,QAAS,kBAAMf,EAAc,CACzBd,MAAOkD,EAAIlD,MACXI,YAAa8C,EAAI9C,YACjBG,IAAK2C,EAAI3C,IACTE,QAASyC,EAAIzC,QACbD,WAAY0C,EAAI1C,qBAmBpC,OACIQ,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAWA,IACZL,EAAAA,EAAAA,eAACsB,EAAD,MACItB,EAAAA,EAAAA,eAACuB,EAAD,KACKK,IAAoB5B,EAAAA,EAAAA,eAACwB,EAAD,CACjBvC,KAAK,SACLgB,MAAOrB,EAAG,uCACVuD,SAAUP,OAItB5B,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,oBACXL,EAAAA,EAAAA,eAAAA,MAAAA,CAAKM,IAAKZ,EAAU0C,IAAI,MACxBpC,EAAAA,EAAAA,eAACtB,EAAD,CACI6B,SArBM,SAAC8B,GACnBvC,EAAc,CACVJ,SAAU2C,EAAM9C,IAChBE,QAAS4C,EAAM5B,MAmBPC,aAAa,QACbR,MAAOT,EACPkB,OAAQ,gBAAGC,EAAH,EAAGA,KAAH,OACJZ,EAAAA,EAAAA,eAAAA,SAAAA,CACAX,KAAK,OACLgB,UAAW,mCACXQ,QAASD,GACPhC,EAAG,sBAIjBoB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,sBACXL,EAAAA,EAAAA,eAACyB,EAAD,CACIxB,MAAM,cACNC,MAAOd,EACPe,SAAU,SAAAD,GAAK,OAAIJ,EAAc,CAAEV,YAAac,QAEpDF,EAAAA,EAAAA,eAAC1B,EAAD,CACI2B,MAAM,OACNC,MAAOX,EACPY,SAAU,SAAAD,GAAK,OAAIJ,EAAc,CAAEP,IAAKW,QAE5CF,EAAAA,EAAAA,eAAC1B,EAAD,CACI+B,UAAU,oBACVJ,MAAM,cACNC,MAAOV,EACPW,SAAU,SAAAD,GAAK,OAAIJ,EAAc,CAAEN,WAAYU,UChDlEc,KCpCwB,SAAC,GAA8B,IAA5B7B,EAA4B,EAA5BA,WAAYkB,EAAgB,EAAhBA,UAC5BrB,EAAkDG,EAAlDH,MAAOO,EAA2CJ,EAA3CI,IAAKC,EAAsCL,EAAtCK,WAAYJ,EAA0BD,EAA1BC,YAAaM,EAAaP,EAAbO,SAE7C,OACIM,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAWA,IACZL,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,YAAYC,IAAKZ,EAAU0C,IAAI,MAC9CpC,EAAAA,EAAAA,eAAAA,MAAAA,MACIA,EAAAA,EAAAA,eAAAA,KAAAA,CAAIK,UAAU,eAAerB,IAC7BgB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,YAAYjB,KAE/BY,EAAAA,EAAAA,eAAAA,IAAAA,CAAGK,UAAU,aAAaiC,KAAM/C,GAAMC,Q,+CCV1CZ,EAAOR,GAAGS,KAAVD,ICGRE,EAH8BV,GAAGW,OAAzBD,mBAGW,0CAA2C,CAC7DE,MAAO,iBACPC,KAAM,OACNC,SAAU,SACVmB,UAAW,iBACXlB,WAAY,CACXoD,QAAS,CACRlD,KAAM,WAGRQ,KDXwB,WACrB,OACIG,EAAAA,EAAAA,eAAAA,MAAAA,MACIA,EAAAA,EAAAA,eAAAA,KAAAA,CAAIK,UAAU,oBAAoBzB,EAAG,6BACrCoB,EAAAA,EAAAA,eAAAA,QAAAA,KAAQpB,EAAG,yECQtBoC,KAAM,kBAAM,S,kCCdb,MAAM,EAA+BwB,OAAW,GAAU,OCApD,EAA+BA,OAAW,GAAQ,K,aCAxD,MAAM,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,YCK9D1D,EAAAA,EAAAA,mBAAkB,mCAAoC,CACpDE,OAAOJ,EAAAA,EAAAA,IAAG,WACVK,KAAM,mBACNC,SAAU,SACVC,WAAY,CACRsD,YAAa,CACTpD,KAAM,SACNC,QAAS,IAGjBO,KCHuB,SAAC,GAA6C,IAA3CQ,EAA2C,EAA3CA,UAAWlB,EAAgC,EAAhCA,WAAYW,EAAoB,EAApBA,cACvC2C,EAAgBtD,EAAhBsD,YAEFC,EAAe,CACbC,YAAa,GAAF,OAAKF,EAAL,KACXG,aAAc,GAAF,OAAKH,EAAL,MAGpB,OACIzC,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAWA,EAAWwC,MAAOH,IAC9B1C,EAAAA,EAAAA,eAAC8C,EAAAA,kBAAD,MACI9C,EAAAA,EAAAA,eAAC+C,EAAAA,UAAD,CACI/D,OAAOJ,EAAAA,EAAAA,IAAG,gBACVoE,aAAa,IAEbhD,EAAAA,EAAAA,eAAAA,IAAAA,MAAIpB,EAAAA,EAAAA,IAAG,gKACPoB,EAAAA,EAAAA,eAAAA,IAAAA,CAAG6C,MAAO,CAAEI,UAAW,YAAarE,EAAAA,EAAAA,IAAG,8HACvCoB,EAAAA,EAAAA,eAACkD,EAAAA,4BAAD,CACI,cAAY,eACZ/C,SAAU,SAACC,GAAD,OAAcN,EAAc,CAAE2C,YAAarC,KACrD+C,IAAK,IACLC,IAAK,EACLlD,MAAOuC,OAIfzC,EAAAA,EAAAA,eAACqD,EAAAA,YAAD,QDtBdrC,KERwB,SAAC,GAA8B,IAA5BX,EAA4B,EAA5BA,UACjBoC,EAD6C,EAAjBtD,WAC5BsD,YAEFC,EAAe,CACjBY,WAAY,GAAF,OAAKb,EAAL,KACVc,YAAa,GAAF,OAAKd,EAAL,MAGf,OACIzC,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAWA,EAAWwC,MAAOH,IAC9B1C,EAAAA,EAAAA,eAACqD,EAAAA,YAAAA,QAAD,W,iECjBJzE,EAAOR,GAAGS,KAAVD,GACAF,EAAgBN,GAAGiD,OAAnB3C,YACR,EAAyCN,GAAGI,YAApCC,EAAR,EAAQA,cAAe6C,EAAvB,EAAuBA,cACvB,EAAuElD,GAAGC,WAAlEkD,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,oBAAqBlD,EAAtC,EAAsCA,YAAamD,EAAnD,EAAmDA,gBAC3CC,EAActD,GAAGuD,KAAjBD,WCDR5C,EAJ8BV,GAAGW,OAAzBD,mBAIW,qCAAsC,CACxDE,MAAO,uBACPC,KAAM,YACNC,SAAU,SACVmB,UAAW,YACXlB,WAAY,CACXC,YAAa,CACZC,KAAM,SACNC,QAAS,IAEVC,IAAK,CACJF,KAAM,SACNC,QAAS,IAEVE,WAAY,CACXH,KAAM,SACNC,QAAS,cAEVG,QAAS,CACRJ,KAAM,UAEPK,SAAU,CACTL,KAAM,SACNC,QAAA,UAAYK,cAAcC,UAA1B,qCAGFC,KDvBwB,SAAC,GAAkC,IAAhCV,EAAgC,EAAhCA,WAAYW,EAAoB,EAApBA,cAC9BC,EAAatB,IACXc,EAAoDJ,EAApDI,IAAKC,EAA+CL,EAA/CK,WAAYJ,EAAmCD,EAAnCC,YAAaK,EAAsBN,EAAtBM,QAASC,EAAaP,EAAbO,SAEzCkC,EAAmBF,GAAU,SAAAG,GAC/B,IAAMC,EAAWD,EAAO,QAAQE,iBAAiB,WAAY,OAC7D,GAAID,EAIA,OAHgBE,EAAAA,EAAAA,IAAoBF,GAGrBG,KAAI,SAACC,GAChB,MAAO,CACHlD,MAAOkD,EAAIlD,MACX6B,QAAS,kBAAMf,EAAc,CACzBV,YAAa8C,EAAI9C,YACjBG,IAAK2C,EAAI3C,IACTE,QAASyC,EAAIzC,QACbC,SAAUwC,EAAIxC,mBAmBlC,OACIM,EAAAA,EAAAA,eAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAASD,EAAT,CAAqBM,UAAU,eAC3BL,EAAAA,EAAAA,eAACsB,EAAD,MACItB,EAAAA,EAAAA,eAACuB,EAAD,KACKK,IAAoB5B,EAAAA,EAAAA,eAACwB,EAAD,CACjBvC,KAAK,SACLgB,MAAM,sCACNkC,SAAUP,OAItB5B,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,oBACXL,EAAAA,EAAAA,eAAAA,MAAAA,CAAKM,IAAKZ,EAAU0C,IAAI,MACxBpC,EAAAA,EAAAA,eAACtB,EAAD,CACI6B,SArBM,SAAC8B,GACnBvC,EAAc,CACVJ,SAAU2C,EAAM9C,IAChBE,QAAS4C,EAAM5B,MAmBPC,aAAa,QACbR,MAAOT,EACPkB,OAAQ,gBAAGC,EAAH,EAAGA,KAAH,OACJZ,EAAAA,EAAAA,eAAAA,SAAAA,CACAX,KAAK,OACLgB,UAAW,mCACXQ,QAASD,GACPhC,EAAG,sBAIjBoB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,sBACXL,EAAAA,EAAAA,eAACyB,EAAD,CACIxB,MAAM,cACNC,MAAOd,EACPe,SAAU,SAAAD,GAAK,OAAIJ,EAAc,CAAEV,YAAac,QAEpDF,EAAAA,EAAAA,eAAC1B,EAAD,CACI2B,MAAM,OACNC,MAAOX,EACPY,SAAU,SAAAD,GAAK,OAAIJ,EAAc,CAAEP,IAAKW,QAE5CF,EAAAA,EAAAA,eAAC1B,EAAD,CACI+B,UAAU,oBACVJ,MAAM,cACNC,MAAOV,EACPW,SAAU,SAAAD,GAAK,OAAIJ,EAAc,CAAEN,WAAYU,UCrDlEc,KC/BwB,SAAC,GAAmB,IAAjB7B,EAAiB,EAAjBA,WAChBI,EAA2CJ,EAA3CI,IAAKC,EAAsCL,EAAtCK,WAAYJ,EAA0BD,EAA1BC,YAAaM,EAAaP,EAAbO,SAEtC,OACIM,EAAAA,EAAAA,eAAAA,MAAAA,MACIA,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,oBACXL,EAAAA,EAAAA,eAAAA,MAAAA,CAAKM,IAAKZ,EAAU0C,IAAI,OAE5BpC,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,sBACXL,EAAAA,EAAAA,eAAAA,IAAAA,KAAIZ,IACJY,EAAAA,EAAAA,eAAAA,IAAAA,CAAGK,UAAU,aAAaiC,KAAM/C,GAAMC,S,wDCVvC,SAASgE,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,IAAIK,EAAY,MAAPR,EAAc,KAAyB,oBAAXS,QAA0BT,EAAIS,OAAOC,WAAaV,EAAI,cAE3F,GAAU,MAANQ,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKhB,KAAQc,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGlE,QAET0D,GAAKU,EAAKX,SAAWC,GAH4BW,GAAK,IAK5D,MAAOM,GACPL,GAAK,EACLH,EAAKQ,EACL,QACA,IACON,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBb,EAAKG,IGJ3C,SAAqCkB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASV,KAAKK,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYjE,MAC7C,QAAN4D,GAAqB,QAANA,EAAoBlB,MAAMwB,KAAKR,GACxC,cAANE,GAAqB,2CAA2CO,KAAKP,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BtB,EAAKG,IILjF,WACb,MAAM,IAAI4B,UAAU,6IJIgF,G,sBKL9F5G,EAAOR,GAAGS,KAAVD,GAOK6G,EAAa,SAAC,GAAU,IAATvD,EAAS,EAATA,IAChB9C,EAA2C8C,EAA3C9C,YAAaM,EAA8BwC,EAA9BxC,SAAUH,EAAoB2C,EAApB3C,IAAKC,EAAe0C,EAAf1C,WACpC,OACIQ,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,qBACXL,EAAAA,EAAAA,eAAAA,MAAAA,CAAKM,IAAKZ,GAAYC,cAAcC,UAAY,kCAAmCwC,IAAI,MACvFpC,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,kBACXL,EAAAA,EAAAA,eAAAA,IAAAA,CAAGK,UAAU,aAAajB,IAC1BY,EAAAA,EAAAA,eAAAA,IAAAA,CAAGK,UAAU,iBAAiBiC,KAAM/C,GAAMC,GAAcZ,EAAG,kB,8NCZ3E,MAAyER,GAAGC,WAApEC,EAAR,EAAQA,YAAaoH,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,cAAeC,EAA9C,EAA8CA,cAAeC,EAA7D,EAA6DA,QAC7D,EAAuCzH,GAAGI,YAAlCC,EAAR,EAAQA,cAAe4E,EAAvB,EAAuBA,YACfyC,EAA+B1H,GAAG2H,SAAlCD,2BACR,EAAqD1H,GAAGuD,KAAhDE,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,UAAWsE,EAA3B,EAA2BA,SAC3B,GADA,EAAqCC,YACG7H,GAAG8H,SAAnCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,UAClBzH,EAAOR,GAAGS,KAAVD,GCPAyE,EAAgBjF,GAAGI,YAAnB6E,aCIRvE,EAJ8BV,GAAGW,OAAzBD,mBAIW,+BAAgC,CAClDwH,WAAY,EACZtH,MAAO,wBACPC,KAAM,iBACNC,SAAU,SACVmB,UAAW,oBACXlB,WAAY,CACXoH,iBAAkB,CACjBlH,KAAM,UACNC,SAAS,GAEVkH,WAAY,CACXnH,KAAM,UAEPoH,eAAgB,CACfpH,KAAM,SACNC,QAASK,cAAcC,UAAY,mCAEpC8G,iBAAkB,CACjBrH,KAAM,SAEPsH,QAAS,CACRtH,KAAM,UAEDuH,YAAa,CACTvH,KAAM,SACNC,QAAS,IAEbuH,cAAe,CACXxH,KAAM,SACNC,QAAS,IAEnBwH,UAAW,CACVzH,KAAM,SACNC,QAAS,IAEVyH,kBAAmB,CAClB1H,KAAM,SACNC,QAAS,IAEV0H,kBAAmB,CAClB3H,KAAM,SACNC,QAAS,IAEV2H,iBAAkB,CACjB5H,KAAM,QACNC,QAAS,KAGXO,KF5CwB,SAAC,GAAuD,IAArDqH,EAAqD,EAArDA,SAAU/H,EAA2C,EAA3CA,WAAYkB,EAA+B,EAA/BA,UAAWP,EAAoB,EAApBA,cAErDyG,EASApH,EATAoH,iBACAI,EAQAxH,EARAwH,QACAC,EAOAzH,EAPAyH,YACAC,EAMA1H,EANA0H,cACAL,EAKArH,EALAqH,WACAC,EAIAtH,EAJAsH,eACAK,EAGA3H,EAHA2H,UACAC,EAEA5H,EAFA4H,kBACAC,EACA7H,EADA6H,kBAGEjH,EAAatB,IACb0I,EAAWhB,IACjB,IAAoCC,GAAS,GAA7C,GAAOgB,EAAP,KAAmBC,EAAnB,KACA,IAAwCjB,EAAS,CAC7CkB,MAAO,uBACPC,QAAS,KAFb,GAAOC,EAAP,KAAqBC,EAArB,KAKApB,GAAU,WACD1G,cAAc+H,iBACfD,EAAgB,CACZH,MAAO,qBACPC,QAAS3I,EAAG,kHAGrB,IAEH,MAAgD8C,GAAW,SAAEG,GACzD,IACI8F,EADE7F,EAAWD,EAAQ,QAASE,iBAAkB,WAAY,OAE5DH,EAAmB,CAAC,CACpB3B,MAAO,OACPC,OAAQ,IAaZ,OAXI4B,IACA6F,GAAU3F,EAAAA,EAAAA,IAAoBF,IAEtB8F,SAAQ,SAAC1F,GACbN,EAAiBgD,KAAK,CAClB3E,MAAOiC,EAAIlD,MACXkB,MAAOgC,EAAIzB,QAKhB,CACHoH,SAAUhG,EAAQ,eAAgBiG,uBAAwB,QAC1DH,QAASA,EACT/F,iBAAkBA,MArBlBiG,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,QAAS/F,EAA3B,EAA2BA,iBAyBrBmG,EAAsB,SAACC,EAAaC,GACtC,GAAIN,EAAS,CACT,IAAMO,EAAQC,OAAOF,GACf/F,EAAMyF,EAAQS,MAAK,SAAAlG,GAAG,OAAIA,EAAIzB,KAAOyH,KAC3CpI,GAAc,UAAGkI,E,qWAAJ,EACTvH,GAAIyH,GACDhG,OAgCTmG,EAA2B,SAAEC,GAA8C,IAAvBd,EAAuB,uDAAR,GACjEe,EAAoB,GACpBC,EAAmB,GAClBF,GACDC,EAAoB,wBACpBC,EAAmB5J,EAAG,6CAEtB2J,EAAoB,qBACpBC,EAAmB5J,EAAG,qCAAHA,IAAAA,OAA+C4I,IAEtEC,EAAgB,CACZH,MAAOiB,EACPhB,QAASiB,IAEbC,YAAW,WACPhB,EAAgB,CACZH,MAAO,uBACPC,QAAS,OAEd,MAoDDmB,EAAY,SAACC,EAAOhC,GACtBgC,EAAMC,iBACNvB,GAAc,GACdI,EAAgB,CACZH,MAAO,uBACPC,QAAS,KAEbsB,KAAKC,KAAK,UAAU,WAChBD,KAAKE,OAAOC,UAAUrJ,cAAc+H,iBACpCmB,KAAKE,OAAOD,KAAK,UAAW,MAAM,WAC9BD,KAAKE,OAAOE,QAAQC,OAAOC,KAAK,CAC5BC,KAAM,UACN3I,GAAKkG,IAER0C,MAAK,SAAAC,GACFjC,GAAc,GA3DF,SAACiC,GACzB,IAEI,IACMC,EADe1H,EAAQ,qBAAsB2H,oBAAqBtC,GAAY,GACjDuC,YAAYxH,KAAK,SAAAyH,GAAK,OAAIA,EAAMxC,YACnElB,EAAU,qBAAsB2D,aAAcJ,GAE9C,IAAMK,EAAeN,EAASO,OAAOC,MAAM,GAAGC,QAAQ/K,MAChDgL,EAAqBV,EAASO,OAAOC,MAAM,GAAGC,QAAQ3K,YACtD6K,EAAmBX,EAASO,OAAOC,MAAM,GAAGC,QAAQG,WAAWC,OAAO5K,IACtE6K,EAAmBJ,EAAmBK,MAAM,MAC5CC,GAAiBC,EAAAA,EAAAA,IAA4BH,GAGnDpE,EAAS,eAAeD,SAAS,CAAE/G,MAAO4K,IAG1C5D,EAAS,qBAAqBwE,aAAaF,EAAgB,EAAGpD,GAG9DpH,EAAc,CACV0G,WAAYoD,EACZnD,eAAgBwD,EAChB1D,kBAAkB,IAItB8B,GAA0B,GAC5B,MAAOoC,GAELpC,GAA0B,GAC1BqC,QAAQD,MAAMA,IA6BNE,CAAoBrB,MACrB,SAAAmB,GACCpD,GAAc,GAEdgB,GAA0B,EAAOoC,aAMjD,OACIzK,EAAAA,EAAAA,eAAAA,OAAAA,EAAAA,EAAAA,GAAAA,GAAUD,EAAV,CAAuBM,UAAYA,KAC/BL,EAAAA,EAAAA,eAAC8F,EAAD,CACI1E,KAAK,oBACLpC,MAAOJ,EAAG,2BACVyB,UAAU,2BAETuB,IAAoB5B,EAAAA,EAAAA,eAAC0F,EAAD,MAChB1F,EAAAA,EAAAA,eAAC2F,EAAD,CACG1F,MAAOrB,EAAG,sBACVsB,MAAO6G,EAAkBtG,GACzBmK,QAAShJ,EACTzB,SAAU,SAACC,GAAD,OAAc2H,EAAoB,oBAAqB3H,OAGxEwB,IAAoB5B,EAAAA,EAAAA,eAAC0F,EAAD,MAChB1F,EAAAA,EAAAA,eAAC2F,EAAD,CACG1F,MAAOrB,EAAG,sBACVsB,MAAO8G,EAAkBvG,GACzBmK,QAAShJ,EACTzB,SAAU,SAACC,GAAD,OAAc2H,EAAoB,oBAAqB3H,SAI7EJ,EAAAA,EAAAA,eAAC8F,EAAD,CACI1E,KAAK,6BACLpC,MAAOJ,EAAG,mBACVyB,UAAU,0BAEVL,EAAAA,EAAAA,eAAC0F,EAAD,KACKmC,IAAY7H,EAAAA,EAAAA,eAAC1B,EAAD,CACT2B,MAAOrB,EAAG,+BACVsB,MAAQ2H,EAASgD,gBACjB1K,SAAW,SAACC,GAAD,OAAc4F,EAAS,eAAeD,SAAS,CAAC+E,KAAM,CAAED,gBAAiBzK,WAIhGJ,EAAAA,EAAAA,eAAC8F,EAAD,CACI1E,KAAK,gCACLpC,MAAOJ,EAAG,iCACVyB,UAAU,wCAEVL,EAAAA,EAAAA,eAAC0F,EAAD,KACKmC,IAAY7H,EAAAA,EAAAA,eAAC4F,EAAD,CACT3F,MAAOrB,EAAG,wBACVmM,QAAUlD,EAASmD,mBACnB7K,SAAW,SAACC,GAAD,OAAc4F,EAAS,eAAeD,SAAS,CAAC+E,KAAM,CAAEE,mBAAoB5K,WAInGJ,EAAAA,EAAAA,eAAAA,UAAAA,CAASK,UAAU,kBACfL,EAAAA,EAAAA,eAAAA,KAAAA,KAAKpB,EAAG,mBACRoB,EAAAA,EAAAA,eAAAA,OAAAA,CAAMK,UAAS,wBAAmBmH,EAAY,QAAWA,EAAaD,UACtEvH,EAAAA,EAAAA,eAAAA,QAAAA,CAAOK,UAAU,qBAAqB4K,QAAQ,qBAA9C,gCACAjL,EAAAA,EAAAA,eAAAA,OAAAA,CAAMkL,SAAU,SAACvC,GAAD,OAAWD,EAAUC,EAAOhC,MACxC3G,EAAAA,EAAAA,eAAAA,QAAAA,CACIS,GAAG,oBACHR,MAAOrB,EAAG,aACVyB,UAAU,oBACVH,MAAQ0G,EACRzG,SAjLI,SAACwI,GACrB,IAAIpJ,EAAMoJ,EAAMwC,OAAOjL,MACnBkL,EAAgB,KAChBC,EAAe9L,EAAI+L,MAAM,kBACzBD,IACAD,EAAgBC,EAAa,GAAGE,QAAQ,MAAO,KAEnDzL,EAAc,CACV6G,QAASyE,EACTxE,YAAarH,EACbsH,cAAe,iCAAF,OAAmCuE,SAyKxCpL,EAAAA,EAAAA,eAAAA,SAAAA,CAAQX,KAAK,SAASgB,UAAU,mBAAmBmL,SAAUpE,GAAaA,GAAapH,EAAAA,EAAAA,eAAC6F,EAAD,MAAcjH,EAAG,YAE1G4H,IAAcxG,EAAAA,EAAAA,eAAC1B,EAAD,CAAa2B,MAAOrB,EAAG,eAAgBsB,MAAOsG,EAAYrG,SAAU,SAACsL,GAAD,OAAO3L,EAAc,CAAC0G,WAAYiF,EAAEN,OAAOjL,WAC3HuG,GAAkBF,IAClBvG,EAAAA,EAAAA,eAAAA,EAAAA,SAAAA,MACIA,EAAAA,EAAAA,eAAAA,QAAAA,CAAOK,UAAU,sBAAsBzB,EAAG,qBAC1CoB,EAAAA,EAAAA,eAAAA,MAAAA,CAAKM,IAAKmG,MAGlBzG,EAAAA,EAAAA,eAAAA,QAAAA,CAAOK,UAAU,qBAAqB4K,QAAQ,cAAcrM,EAAG,gBAC/DoB,EAAAA,EAAAA,eAAAA,QAAAA,CAAOS,GAAG,aAAapB,KAAK,OAAOa,MAAO4G,EAAW3G,SAAU,SAACsL,GAAD,OAAO3L,EAAc,CAACgH,UAAW2E,EAAEN,OAAOjL,aAE7GF,EAAAA,EAAAA,eAAAA,UAAAA,CAAS0L,IAAKvE,EAAU9G,UAAU,cAC9BL,EAAAA,EAAAA,eAAAA,KAAAA,KAAKpB,EAAG,cACN+H,GAAU3G,EAAAA,EAAAA,eAAAA,EAAAA,SAAAA,MACRA,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,2BACTkG,IAAoBvG,EAAAA,EAAAA,eAAAA,SAAAA,CAAQ2L,MAAM,MACVC,OAAO,MACPtL,IAAKuG,EACLxG,UAAY0G,EAAkBtG,GAAK,GAAKuG,EAAkBvG,GAAK,EAAK,yBAA2B,oBAC/FzB,MAAM,uBACN6M,YAAY,IACZC,MAAM,iFACNC,iBAAe,KACrChF,EAAkBtG,GAAK,GAAKuG,EAAkBvG,GAAK,KAAOT,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,eACvE0G,EAAkBtG,GAAK,IAAKT,EAAAA,EAAAA,eAACyF,EAAD,CAAYvD,IAAK6E,IAC7CC,EAAkBvG,GAAK,IAAKT,EAAAA,EAAAA,eAACyF,EAAD,CAAYvD,IAAK8E,OAGvDhH,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,mCACXL,EAAAA,EAAAA,eAACqD,EAAD,SAEFrD,EAAAA,EAAAA,eAAAA,OAAAA,CAAMK,UAAU,uBAAuBzB,EAAG,yCE/O/DoC,KDnDwB,SAAC,GAA8B,IAA5B7B,EAA4B,EAA5BA,WAAYkB,EAAgB,EAAhBA,UAEhCwG,EAIA1H,EAJA0H,cACAN,EAGApH,EAHAoH,iBACAQ,EAEA5H,EAFA4H,kBACAC,EACA7H,EADA6H,kBAGJ,OACIhH,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAYA,IACbL,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,2BACTkG,IAAoBvG,EAAAA,EAAAA,eAAAA,SAAAA,CAAQ2L,MAAM,MACRC,OAAO,MACPtL,IAAKuG,EACLxG,UAAY0G,EAAkBtG,GAAK,GAAKuG,EAAkBvG,GAAK,EAAK,yBAA2B,oBAC/FzB,MAAM,uBACN6M,YAAY,IACZC,MAAM,iFACNC,iBAAe,KACvChF,EAAkBtG,GAAK,GAAKuG,EAAkBvG,GAAK,KAAOT,EAAAA,EAAAA,eAAAA,MAAAA,CAAKK,UAAU,eACvE0G,EAAkBtG,GAAK,IAAKT,EAAAA,EAAAA,eAACyF,EAAD,CAAYvD,IAAK6E,IAC7CC,EAAkBvG,GAAK,IAAKT,EAAAA,EAAAA,eAACyF,EAAD,CAAYvD,IAAK8E,OAGvDhH,EAAAA,EAAAA,eAAAA,MAAAA,CAAKsH,MAAA,wCACDtH,EAAAA,EAAAA,eAACqD,EAAY2I,QAAb,Y,+CE5BD5N,GAAGS,KAAVD,IAIRE,EAH8BV,GAAGW,OAAzBD,mBAGW,sCAAuC,CACzDE,MAAO,0BACPC,KAAM,SACNC,SAAU,SACVmB,UAAW,2BACXlB,WAAY,GACZU,KCRwB,kBACrBG,EAAAA,EAAAA,eAAAA,MAAAA,ODQHgB,KAAM,kBAAM,S,sDEXb,IAAQiL,EAAU7N,GAAG8N,gCAAbD,MACAE,EAAgB/N,GAAGW,OAAnBoN,YAQFC,EAA8B,SAACC,GAEpC,OADqBJ,EAAMI,EAAQC,QAAQC,KACvBnE,MAAK,SAAAsB,GAAK,MAAI,0CAA4CA,EAAM8C,cASxExK,EAAsB,SAACF,GAKnC,OAJsBA,EAAS2K,QAAO,SAAAJ,GACrC,OAAOA,EAAQ5L,GAAK2L,EAA4BC,QAAWK,KAGvCzK,KAAI,SAAAoK,GACxB,IAAMM,EAAUP,EAA4BC,GAASO,MACrD,MAAO,CACNnM,GAAI4L,EAAQ5L,GACZzB,MAAOqN,EAAQrN,MAAMuN,IACrBnN,YAAauN,EAAQvN,YACrBG,IAAKoN,EAAQpN,IACbC,WAAYmN,EAAQnN,WACpBC,QAASkN,EAAQlN,QACjBC,SAAUiN,EAAQjN,cA0BR6K,EAA8B,SAACH,GAE3C,OADkCA,EAAiBqC,QAAO,SAAArN,GAAW,OAAIA,EAAYuE,UACpD1B,KAAI,SAAA7C,GACpC,IAAIyN,EAnB4B,SAACC,GAClC,IAAMC,EAAY,4BACdF,EAAc,GAIlB,MAHK,iBAAoBC,IAAiBA,aAAAA,EAAAA,EAAeE,OAAOD,KAAc,IAC7EF,EAAcC,EAAcxB,MAAMyB,IAE5BF,EAaYI,CAAmB7N,GACjC8N,EAAY,iBACZC,EAAY,CAAEb,QAASlN,GAK3B,OAJIyN,IACHK,EAAY,qCACZC,EAAY,CAAE5N,IAAKsN,EAAazN,YAAaA,IAEvC+M,EAAYe,EAAWC,Q,qBCtEhCC,EAAOC,QAAU7K,OAAW,GAAW,S,2BCAxB,SAAS8K,EAAgBC,EAAKC,EAAKtN,GAYhD,OAXIsN,KAAOD,EACTtI,OAAOwI,eAAeF,EAAKC,EAAK,CAC9BtN,MAAOA,EACPwN,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIC,GAAOtN,EAGNqN,E,6CCZM,SAASM,IActB,OAbAA,EAAW5I,OAAO6I,OAAS7I,OAAO6I,OAAOC,OAAS,SAAU5C,GAC1D,IAAK,IAAIvH,EAAI,EAAGA,EAAIoK,UAAUrK,OAAQC,IAAK,CACzC,IAAIqK,EAASD,UAAUpK,GAEvB,IAAK,IAAI4J,KAAOS,EACVhJ,OAAOC,UAAUgJ,eAAezJ,KAAKwJ,EAAQT,KAC/CrC,EAAOqC,GAAOS,EAAOT,IAK3B,OAAOrC,GAEF0C,EAASM,MAAMC,KAAMJ,W,mBCb1BK,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7B,IAAjB8B,EACH,OAAOA,EAAanB,QAGrB,IAAID,EAASiB,EAAyBE,GAAY,CAGjDlB,QAAS,IAOV,OAHAoB,EAAoBF,GAAUnB,EAAQA,EAAOC,QAASiB,GAG/ClB,EAAOC,QCpBfiB,EAAoBI,EAAI,CAACrB,EAASsB,KACjC,IAAI,IAAInB,KAAOmB,EACXL,EAAoBxJ,EAAE6J,EAAYnB,KAASc,EAAoBxJ,EAAEuI,EAASG,IAC5EvI,OAAOwI,eAAeJ,EAASG,EAAK,CAAEE,YAAY,EAAMkB,IAAKD,EAAWnB,MCJ3Ec,EAAoBxJ,EAAI,CAACyI,EAAKsB,IAAU5J,OAAOC,UAAUgJ,eAAezJ,KAAK8I,EAAKsB,GCClFP,EAAoBQ,EAAKzB,IACH,oBAAXnJ,QAA0BA,OAAO6K,aAC1C9J,OAAOwI,eAAeJ,EAASnJ,OAAO6K,YAAa,CAAE7O,MAAO,WAE7D+E,OAAOwI,eAAeJ,EAAS,aAAc,CAAEnN,OAAO,KCFvD8O,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,KACTA,EAAS,M","sources":["webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/group/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/index.js","webpack://good-guitarist/external window [\"wp\",\"blocks\"]","webpack://good-guitarist/external window [\"wp\",\"i18n\"]","webpack://good-guitarist/external window [\"wp\",\"blockEditor\"]","webpack://good-guitarist/external window [\"wp\",\"components\"]","webpack://good-guitarist/./assets/src/scripts/blocks/section/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/section/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/section/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockSave.jsx","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://good-guitarist/./assets/src/scripts/components/SidebarCta.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/utils.js","webpack://good-guitarist/external window [\"wp\",\"element\"]","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://good-guitarist/webpack/bootstrap","webpack://good-guitarist/webpack/runtime/define property getters","webpack://good-guitarist/webpack/runtime/hasOwnProperty shorthand","webpack://good-guitarist/webpack/runtime/make namespace object","webpack://good-guitarist/./assets/src/scripts/gutenberg.js"],"sourcesContent":["const { TextControl, Button } = wp.components;\nconst { useBlockProps, MediaUpload, MediaUploadCheck } = wp.blockEditor;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({attributes, setAttributes}) => {\n    const {url, description, buttonText, imageId, imageUrl} = attributes;\n    const blockProps = useBlockProps();\n\n    const onSelectMedia = (newImage) => {\n        setAttributes({\n            imageId: newImage.id,\n            imageUrl: newImage.url\n        });\n    }\n\n    const removeMedia = () => {\n        setAttributes({\n            imageId: 0,\n            imageUrl: ''\n        });\n    }\n\n    return (\n        <div { ...blockProps }>\n            <TextControl\n                label={__('Description')}\n                value={description}\n                onChange={(newValue) => setAttributes({description: newValue})}\n            />\n            <TextControl\n                label={__('URL')}\n                value={url}\n                onChange={(newValue) => setAttributes({url: newValue})}\n            />\n            <TextControl\n                label={__('Button text (if nothing is entered, button text will be \"Click here\")')}\n                value={buttonText}\n                onChange={(newValue) => setAttributes({buttonText: newValue})}\n            />\n            <div className=\"media-upload-component\">\n                <label className=\"image-label\">{__('Call to action thumbnail (if no image is chosen, a default image will be used)')}</label>\n                { imageUrl && <img className=\"course-image\" src={imageUrl} /> }\n                <MediaUploadCheck>\n                    <MediaUpload\n                        onSelect={onSelectMedia}\n                        allowedTypes={ ['image'] }\n                        render={({open}) => (\n                            <Button\n                            className={0 === imageId ? 'select-image-button' : 'select-image-button button-hidden'}\n                            onClick={open}\n                            >\n                                {imageId == 0 && __('Choose an image')}\n                            </Button>\n                        )}\n                        />\n                </MediaUploadCheck>\n                {imageId !== 0 &&\n                    <MediaUploadCheck>\n                        <Button onClick={removeMedia} isLink isDestructive>{__('Remove image')}</Button>\n                    </MediaUploadCheck>\n                }\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\n\nregisterBlockType( 'gutenberg-good-guitarist/cta-template', {\n    title: 'Call to Action Template',\n    icon: 'admin-customizer',\n    category: 'text',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\timageId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n    edit: BlockEdit,\n    save: () => null\n});","const { addFilter } = wp.hooks;\n\n/**\n * Modify the Gutenberg group block.\n * \n * @param {*} settings \n * @returns \n */\nconst modifyGroupBlock = (settings) => {\n\tif (settings.name !== 'core/group') {\n        return settings\n    }\n\n    const newSettings = {\n        ...settings,\n    }\n\n    return settings;\n}\n\n\naddFilter(\n    'blocks.registerBlockType',\n    'good-guitarist/modify-group-block',\n    modifyGroupBlock\n)\n","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, className, setAttributes }) => {\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta');\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        title: cta.title,\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        buttonText: cta.buttonText\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div className={className}>\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        label={__(\"Use with an existing call to action\")}\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n        </div> \n    );\n}","const { __ } = wp.i18n;\nimport { BlockEdit } from \"./BlockEdit\";\nimport { BlockSave } from \"./BlockSave\";\nconst { registerBlockType } = wp.blocks;\n\nregisterBlockType( 'gutenberg-good-guitarist/large-cta', {\n\ttitle: __('Large Call to Action'),\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'large-cta',\n\tattributes: {\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes, className }) => {\n    const { title, url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div className={className}>\n            <img className=\"lcc-image\" src={imageUrl} alt=\"\" />\n            <div>\n                <h3 className=\"lcc-heading\">{title}</h3>\n                <div className=\"lcc-body\">{description}</div>\n            </div>\n            <a className=\"lcc-button\" href={url}>{buttonText}</a>\n        </div>\n    )\n}","const { __ } = wp.i18n;\n\nexport const BlockEdit = () => {\n    return (\n        <div>\n            <h2 className=\"dynamic-block-h2\">{__('Latest Lessons Carousel')}</h2>\n            <small>{__('A carousel of the latest lessons will appear here on the frontend.')}</small>\n        </div>\n    )\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/latest-lessons', {\n\ttitle: 'Latest Lessons',\n\ticon: 'list',\n\tcategory: 'layout',\n\tclassName: 'latest-lessons',\n\tattributes: {\n\t\tlessons: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: () => null\n})","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType(\"gutenberg-good-guitarist/section\", {\n  title: __(\"Section\"),\n  icon: \"align-full-width\",\n  category: \"layout\",\n  attributes: {\n      gutterWidth: {\n          type: 'number',\n          default: 0,\n      },\n  },\n  edit: BlockEdit,\n  save: BlockSave,\n});","import { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody } from \"@wordpress/components\";\nimport { __experimentalNumberControl as NumberControl } from '@wordpress/components';\n\n/**\n * Edit react component for Section block.\n * \n * @param {Object} props React props passed to this component.\n * @returns {JSX}\n */\nexport const BlockEdit = ({ className, attributes, setAttributes }) => {\n    const { gutterWidth } = attributes;\n\n    const gutterStyles = {\n            paddingLeft: `${gutterWidth}%`,\n            paddingRight: `${gutterWidth}%`\n    };\n\n    return (\n        <div className={className} style={gutterStyles}>\n            <InspectorControls>\n                <PanelBody\n                    title={__('Gutter width')}\n                    initialOpen={true}\n                >\n                    <p>{__('Enter a value for the left and right margins of this block. The higher the value, the more space will appear to the left and right of the Section content.')}</p>\n                    <p style={{ fontStyle: \"italic\" }}>{__('The grey colour on either is side is only to illustrate the size of the margins. Grey will not be used on the front end.')}</p>\n                    <NumberControl\n                        data-testid=\"gutter-input\"\n                        onChange={(newValue) => setAttributes({ gutterWidth: newValue })}\n                        max={100}\n                        min={0}\n                        value={gutterWidth}\n                    />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks />\n            </div>\n        );\n}","import { InnerBlocks } from \"@wordpress/block-editor\";\n\n/**\n * Save react component for Section block.\n * \n * @param {Object} props React props passed to this component.\n * @returns {JSX}\n */\n export const BlockSave = ({ className, attributes }) => {\n    const { gutterWidth } = attributes;\n\n    const gutterStyles = {\n        marginLeft: `${gutterWidth}%`,\n        marginRight: `${gutterWidth}%`,\n    };\n\n    return (\n        <div className={className} style={gutterStyles}>\n            <InnerBlocks.Content />\n        </div>\n    );\n}","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, setAttributes }) => {\n    const blockProps = useBlockProps();\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta');\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        imageUrl: cta.imageUrl\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div {...blockProps} className=\"small-cta\">\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        label=\"Use with an existing call to action\"\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n         </div>\n    )\n\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/small-cta', {\n\ttitle: 'Small Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'small-cta',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes }) => {\n    const { url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n            </div>\n            <div className=\"details-container\">\n                <p>{description}</p>\n                <a className=\"cta-button\" href={url}>{buttonText}</a>\n            </div>\n        </div>\n    )\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const { __ } = wp.i18n;\n\n/**\n *\n * @param {*}\n * @returns {JSX}\n */\nexport const SidebarCta = ({cta}) => {\n    const { description, imageUrl, url, buttonText } = cta;\n    return (\n        <div className=\"sidebar-cta-card\">\n            <img src={imageUrl || gutenbergVars.image_dir + '/good-guitarist-preview-img.png'} alt=\"\" />\n            <div className=\"cta-card-body\">\n                <p className=\"body-text\">{description}</p>\n                <a className=\"cta-url-button\" href={url}>{buttonText || __(\"Click here\")}</a>\n            </div>\n        </div>\n    )\n}","import { getCtaDataFromPosts, createBlocksFromDescription } from '../../utils';\nimport { SidebarCta } from '../../components/SidebarCta';\nconst { TextControl, PanelRow, SelectControl, ToggleControl, Spinner } = wp.components;\nconst { useBlockProps, InnerBlocks } = wp.blockEditor;\nconst { PluginDocumentSettingPanel } = wp.editPost;\nconst { select, useSelect, dispatch, useDispatch } = wp.data;\nconst { useRef, useState, useEffect } = wp.element;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({ clientId, attributes, className, setAttributes }) => {\n    const {\n        videoInfoFetched,\n        videoID,\n        videoUrlRaw,\n        videoUrlEmbed,\n        videoTitle,\n        videoThumbnail,\n        songTitle,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo\n    } = attributes;\n\n    const blockProps = useBlockProps();\n    const postBody = useRef();\n    const [isFetching, setIsFetching] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({\n        class: 'fetch-message-hidden',\n        message: ''\n    });\n\n    useEffect(() => {\n        if (!gutenbergVars.youtube_api_key) {\n            setErrorMessage({\n                class: 'fetch-message-fail',\n                message: __('Youtube API key not detected. Please ensure you have entered a valid API key in the \"GG Settings\" section.')\n            });\n        }\n    }, []);\n\n    const { postMeta, ctaData, ctaSelectOptions } = useSelect( ( select ) => {\n        const ctaPosts = select( 'core' ).getEntityRecords( 'postType', 'cta' );\n        let ctaData;\n        let ctaSelectOptions = [{\n            label: 'None',\n            value: -1\n        }];\n        if (ctaPosts) {\n            ctaData = getCtaDataFromPosts(ctaPosts);\n            // Create dropdown options.\n            ctaData.forEach((cta) => {\n                ctaSelectOptions.push({\n                    label: cta.title,\n                    value: cta.id,\n                });\n            });\n        }\n\n        return {\n            postMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n            ctaData: ctaData,\n            ctaSelectOptions: ctaSelectOptions,\n        };\n    } );\n\n    const handleSidebarToggle = (sidebarSlot, ctaId) => {\n        if (ctaData) {\n            const numId = Number(ctaId);\n            const cta = ctaData.find(cta => cta.id === numId);\n            setAttributes({ [sidebarSlot]: {\n                id: numId,\n                ...cta\n            }});\n        }\n        \n    }\n\n    /**\n     * Parse the youtube video ID from the URL.\n     * Set the video URL and ID attributes.\n     *\n     * @param {*} event\n     */\n    const handleURLChange = (event) => {\n        let url = event.target.value;\n        let parsedVideoID = null;\n        let videoIDMatch = url.match(/(\\?v=)(\\w|-)+/g);\n        if (videoIDMatch) {\n            parsedVideoID = videoIDMatch[0].replace('?v=', '');\n        }\n        setAttributes({\n            videoID: parsedVideoID,\n            videoUrlRaw: url,\n            videoUrlEmbed: `https://www.youtube.com/embed/${parsedVideoID}`\n        })\n    }\n\n    /**\n     * Update fetch completion message state and make message visible to user.\n     *\n     * @param {Boolean} completedSuccessfully\n     * @param {String} errorMessage\n     */\n    const showFetchCompleteMessage = ( completedSuccessfully, errorMessage = '' ) => {\n        let fetchMessageClass = '';\n        let fetchMessageText = '';\n        if ( completedSuccessfully ) {\n            fetchMessageClass = 'fetch-message-success';\n            fetchMessageText = __('Video information fetched successfully.');\n        } else {\n            fetchMessageClass = 'fetch-message-fail';\n            fetchMessageText = __('Couldn\\'t fetch video information.') + ` ${errorMessage}`;\n        }\n        setErrorMessage({\n            class: fetchMessageClass,\n            message: fetchMessageText\n        });\n        setTimeout(() => {\n            setErrorMessage({\n                class: 'fetch-message-hidden',\n                message: ''\n            })\n        }, 3000);\n    }\n\n    /**\n     * Handle a successful youtube video fetch.\n     *\n     * @param {Object} response\n     */\n    const handleFetchResponse = (response) => {\n        try {\n            // Remove old innerBlocks in post body.\n            const currentBlock = select( 'core/block-editor' ).getBlocksByClientId( clientId )[ 0 ];\n            const childBlockIds = currentBlock.innerBlocks.map( block => block.clientId );\n            dispatch( 'core/block-editor' ).removeBlocks( childBlockIds );\n\n            const fetchedTitle = response.result.items[0].snippet.title;\n            const fetchedDescription = response.result.items[0].snippet.description;\n            const fetchedThumbnail = response.result.items[0].snippet.thumbnails.medium.url;\n            const descriptionArray = fetchedDescription.split('\\n');\n            const postBodyBlocks = createBlocksFromDescription(descriptionArray);\n\n            // Update the post title.\n            dispatch('core/editor').editPost({ title: fetchedTitle });\n\n            // Update innerBlocks in post body.\n            dispatch('core/block-editor').insertBlocks(postBodyBlocks, 0, clientId);\n\n            // Set attributes from fetched video info.\n            setAttributes({\n                videoTitle: fetchedTitle,\n                videoThumbnail: fetchedThumbnail,\n                videoInfoFetched: true\n            });\n\n            // Give some feedback to the user that the fetch has completed.\n            showFetchCompleteMessage( true );\n        } catch (error) {\n            // Let the user know the operation failed.\n            showFetchCompleteMessage( false );\n            console.error(error);\n        }\n    }\n\n    /**\n     * Interface with the google client API to perform a fetch request\n     * to get information from the youtube video ID.\n     *\n     * @link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md\n     *\n     * @param {MouseEvent} event\n     * @param {String} videoID\n     */\n    const initFetch = (event, videoID) => {\n        event.preventDefault();\n        setIsFetching(true);\n        setErrorMessage({\n            class: 'fetch-message-hidden',\n            message: ''\n        });\n        gapi.load('client', () => {\n            gapi.client.setApiKey(gutenbergVars.youtube_api_key);\n            gapi.client.load('youtube', 'v3', () => {\n                gapi.client.youtube.videos.list({\n                    part: 'snippet',\n                    id : videoID\n                })\n                .then(response => {\n                    setIsFetching(false);\n                    handleFetchResponse(response);\n                }, error => {\n                    setIsFetching(false);\n                    // Let the user know the fetch failed.\n                    showFetchCompleteMessage( false, error );\n                });\n            })\n        })\n    }\n\n    return (\n        <div { ...blockProps } className={ className }>\n            <PluginDocumentSettingPanel\n                name=\"sidebar-cta-slots\"\n                title={__(\"Video sidebar CTA slots\")}\n                className=\"sidebar-cta-slots-panel\"\n            >\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        label={__('Sidebar CTA slot 1')}\n                        value={sidebarCtaSlotOne.id}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => handleSidebarToggle(\"sidebarCtaSlotOne\", newValue)}\n                    />\n                </PanelRow>}\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        label={__('Sidebar CTA slot 2')}\n                        value={sidebarCtaSlotTwo.id}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => handleSidebarToggle(\"sidebarCtaSlotTwo\", newValue)}\n                    />\n                </PanelRow>}\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"song-difficulty-attributes\"\n                title={__('Song difficulty')}\n                className=\"song-difficulty-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <TextControl\n                        label={__('Enter a number from 1 to 50')}\n                        value={ postMeta.song_difficulty }\n                        onChange={ (newValue) => dispatch('core/editor').editPost({meta: { song_difficulty: newValue }})}\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"contains-only-one-barre-chord\"\n                title={__('Contains only one barre chord')}\n                className=\"contains-only-one-barre-chord-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <ToggleControl\n                        label={__('One barre chord song')}\n                        checked={ postMeta.contains_one_barre }\n                        onChange={ (newValue) => dispatch('core/editor').editPost({meta: { contains_one_barre: newValue }}) }\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <section className=\"video-details\">\n                <h2>{__('Video Details')}</h2>\n                <span className={`fetch-message ${errorMessage.class}`}>{errorMessage.message}</span>\n                <label className=\"youtube-post-label\" htmlFor=\"youtube-video-url\">Search by Youtube video URL</label>\n                <form onSubmit={(event) => initFetch(event, videoID)}>\n                    <input\n                        id=\"youtube-video-url\"\n                        label={__('Video URL')}\n                        className=\"youtube-video-url\"\n                        value={ videoUrlRaw }\n                        onChange={handleURLChange}\n                    />\n                    <button type=\"submit\" className=\"yt-submit-button\" disabled={isFetching}>{isFetching ? <Spinner /> : __('Submit') }</button>\n                </form>\n                { videoTitle && <TextControl label={__('Video Title')} value={videoTitle} onChange={(e) => setAttributes({videoTitle: e.target.value})} />}\n                { ( videoThumbnail && videoInfoFetched ) &&\n                    <>\n                        <label className=\"youtube-post-label\">{__('Video Thumbnail')}</label>\n                        <img src={videoThumbnail} />\n                    </>\n                }\n                <label className=\"youtube-post-label\" htmlFor=\"song-title\">{__('Song Title')}</label>\n                <input id=\"song-title\" type=\"text\" value={songTitle} onChange={(e) => setAttributes({songTitle: e.target.value})} />\n            </section>\n            <section ref={postBody} className=\"post-body\">\n                <h2>{__('Post Body')}</h2>\n                { videoID ? <>\n                    <div className=\"youtube-post-video-area\">\n                        { videoInfoFetched && <iframe width=\"560\"\n                                                  height=\"715\"\n                                                  src={videoUrlEmbed}\n                                                  className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                                  title=\"YouTube video player\"\n                                                  frameborder=\"0\"\n                                                  allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                  allowfullscreen></iframe> }\n                        { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                            { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                            { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                        </div> }\n                    </div>\n                    <div className=\"post-content-video-description\">\n                        <InnerBlocks />\n                    </div>\n                </> : <span className=\"empty-post-body-msg\">{__('Submit URL to populate post body.')}</span> }\n            </section>\n        </div>\n    );\n}","const { InnerBlocks } = wp.blockEditor;\nimport { SidebarCta } from '../../components/SidebarCta';\n\nexport const BlockSave = ({ attributes, className }) => {\n    const {\n        videoUrlEmbed,\n        videoInfoFetched,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo\n    } = attributes;\n\n    return (\n        <div className={ className }>\n            <div className=\"youtube-post-video-area\">\n                { videoInfoFetched && <iframe width=\"560\"\n                                            height=\"715\"\n                                            src={videoUrlEmbed}\n                                            className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                            title=\"YouTube video player\"\n                                            frameborder=\"0\"\n                                            allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                            allowfullscreen></iframe> }\n                { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                    { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                    { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                </div> }\n            </div>\n            <div class={`youtube-post-type-video-description`}>\n                <InnerBlocks.Content />\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt', {\n\tapiVersion: 2,\n\ttitle: 'Youtube Post Template',\n\ticon: 'playlist-video',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type',\n\tattributes: {\n\t\tvideoInfoFetched: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\tvideoTitle: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tvideoThumbnail: {\n\t\t\ttype: 'string',\n\t\t\tdefault: gutenbergVars.image_dir + '/good-guitarist-preview-img.png'\n\t\t},\n\t\tvideoDescription: {\n\t\t\ttype: 'array',\n\t\t},\n\t\tvideoID: {\n\t\t\ttype: 'string',\n\t\t},\n        videoUrlRaw: {\n            type: 'string',\n            default: ''\n        },\n        videoUrlEmbed: {\n            type: 'string',\n            default: ''\n        },\n\t\tsongTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tsidebarCtaSlotOne: {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t},\n\t\tsidebarCtaSlotTwo: {\n\t\t\ttype: 'object',\n\t\t\tdefault: {}\n\t\t},\n\t\tpostBodyElements: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","const { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt-search', {\n\ttitle: 'Youtube Post Search Box',\n\ticon: 'search',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type-search',\n\tattributes: {},\n\tedit: BlockEdit,\n\tsave: () => null\n})","// const { ServerSideRender } = wp.components;\n\nexport const BlockEdit = () => (\n    <div></div>\n)","const { parse } = wp.blockSerializationDefaultParser;\nconst { createBlock } = wp.blocks;\n\n/**\n * Parse 'gutenberg-good-guitarist/cta-template' block from a post.\n *\n * @param {array} ctaPost\n * @returns {array}\n */\nconst getCtaTemplateBlockFromPost = (ctaPost) => {\n\tconst parsedBlocks = parse(ctaPost.content.raw);\n\treturn parsedBlocks.find(block => 'gutenberg-good-guitarist/cta-template' === block.blockName);\n}\n\n/**\n *  Format CTA data from a CTA post.\n *\n * @param {array} ctaPosts\n * @returns {array}\n */\nexport const getCtaDataFromPosts = (ctaPosts) => {\n\tconst validCtaPosts = ctaPosts.filter(ctaPost => {\n\t\treturn ctaPost.id ? getCtaTemplateBlockFromPost(ctaPost) : undefined;\n\t})\n\n\treturn validCtaPosts.map(ctaPost => {\n\t\tconst ctaAtts = getCtaTemplateBlockFromPost(ctaPost).attrs;\n\t\treturn {\n\t\t\tid: ctaPost.id,\n\t\t\ttitle: ctaPost.title.raw,\n\t\t\tdescription: ctaAtts.description,\n\t\t\turl: ctaAtts.url,\n\t\t\tbuttonText: ctaAtts.buttonText,\n\t\t\timageId: ctaAtts.imageId,\n\t\t\timageUrl: ctaAtts.imageUrl\n\t\t}\n\t})\n}\n\n/**\n * Check if string has http:// or https:// in it.\n *\n * @param {string} stringToCheck\n */\nexport const stringContainsLink = (stringToCheck) => {\n\tconst linkRegex = /(http:\\/\\/|https:\\/\\/).*/g;\n\tlet matchedLink = '';\n\tif ( 'string' === typeof stringToCheck && stringToCheck?.search(linkRegex) >= 0 ) {\n\t\tmatchedLink = stringToCheck.match(linkRegex);\n\t}\n\treturn matchedLink;\n}\n\n/**\n * Create a gutenberg block for each paragraph of the fetched\n * youtube description.\n *\n * @param {array} descriptionArray\n * @returns\n */\nexport const createBlocksFromDescription = (descriptionArray) => {\n\tconst descriptionWithoutEmpties = descriptionArray.filter(description => description.length);\n\treturn descriptionWithoutEmpties.map(description => {\n\t\tlet matchedLink = stringContainsLink(description);\n\t\tlet blockType = 'core/paragraph';\n\t\tlet blockAtts = { content: description };\n\t\tif (matchedLink) {\n\t\t\tblockType = 'gutenberg-good-guitarist/small-cta';\n\t\t\tblockAtts = { url: matchedLink, description: description }\n\t\t}\n\t\treturn createBlock(blockType, blockAtts);\n\t});\n}","module.exports = window[\"wp\"][\"element\"];","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Import Gutenberg custom blocks.\n */\nrequire( './blocks/small-cta' );\nrequire( './blocks/large-cta' );\nrequire( './blocks/cta-template' );\nrequire( './blocks/group' );\nrequire( './blocks/latest-lessons' );\nrequire( './blocks/youtube-post-template' );\nrequire( './blocks/ypt-search' );\nrequire( './blocks/section' );\n"],"names":["wp","components","TextControl","Button","blockEditor","useBlockProps","MediaUpload","MediaUploadCheck","__","i18n","registerBlockType","blocks","title","icon","category","attributes","description","type","default","url","buttonText","imageId","imageUrl","gutenbergVars","image_dir","edit","setAttributes","blockProps","createElement","label","value","onChange","newValue","className","src","onSelect","newImage","id","allowedTypes","render","open","onClick","isLink","isDestructive","save","addFilter","hooks","settings","name","editor","BlockControls","Toolbar","ToolbarDropdownMenu","TextareaControl","useSelect","data","ctaSelectOptions","select","ctaPosts","getEntityRecords","getCtaDataFromPosts","map","cta","controls","alt","media","href","lessons","window","gutterWidth","gutterStyles","paddingLeft","paddingRight","style","InspectorControls","PanelBody","initialOpen","fontStyle","NumberControl","max","min","InnerBlocks","marginLeft","marginRight","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","TypeError","SidebarCta","PanelRow","SelectControl","ToggleControl","Spinner","PluginDocumentSettingPanel","editPost","dispatch","useDispatch","element","useRef","useState","useEffect","apiVersion","videoInfoFetched","videoTitle","videoThumbnail","videoDescription","videoID","videoUrlRaw","videoUrlEmbed","songTitle","sidebarCtaSlotOne","sidebarCtaSlotTwo","postBodyElements","clientId","postBody","isFetching","setIsFetching","class","message","errorMessage","setErrorMessage","youtube_api_key","ctaData","forEach","postMeta","getEditedPostAttribute","handleSidebarToggle","sidebarSlot","ctaId","numId","Number","find","showFetchCompleteMessage","completedSuccessfully","fetchMessageClass","fetchMessageText","setTimeout","initFetch","event","preventDefault","gapi","load","client","setApiKey","youtube","videos","list","part","then","response","childBlockIds","getBlocksByClientId","innerBlocks","block","removeBlocks","fetchedTitle","result","items","snippet","fetchedDescription","fetchedThumbnail","thumbnails","medium","descriptionArray","split","postBodyBlocks","createBlocksFromDescription","insertBlocks","error","console","handleFetchResponse","options","song_difficulty","meta","checked","contains_one_barre","htmlFor","onSubmit","target","parsedVideoID","videoIDMatch","match","replace","disabled","e","ref","width","height","frameborder","allow","allowfullscreen","Content","parse","blockSerializationDefaultParser","createBlock","getCtaTemplateBlockFromPost","ctaPost","content","raw","blockName","filter","undefined","ctaAtts","attrs","matchedLink","stringToCheck","linkRegex","search","stringContainsLink","blockType","blockAtts","module","exports","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_extends","assign","bind","arguments","source","hasOwnProperty","apply","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","get","prop","r","toStringTag","require"],"sourceRoot":""}