{"version":3,"file":"/js/gutenberg.js","mappings":"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","sources":["webpack://good-guitarist/./assets/src/scripts/blocks/ctaTemplate.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://good-guitarist/./assets/src/scripts/blocks/group.js","webpack://good-guitarist/./assets/src/scripts/blocks/largeCta.js","webpack://good-guitarist/./assets/src/scripts/blocks/latestLessons.js","webpack://good-guitarist/./assets/src/scripts/blocks/smallCta.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://good-guitarist/./assets/src/scripts/blocks/youtubePostTemplate.js","webpack://good-guitarist/./assets/src/scripts/blocks/yptSearch.js","webpack://good-guitarist/./assets/src/scripts/utils.js","webpack://good-guitarist/external window [\"wp\",\"element\"]","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://good-guitarist/webpack/bootstrap","webpack://good-guitarist/webpack/runtime/compat get default export","webpack://good-guitarist/webpack/runtime/define property getters","webpack://good-guitarist/webpack/runtime/hasOwnProperty shorthand","webpack://good-guitarist/webpack/runtime/make namespace object","webpack://good-guitarist/./assets/src/scripts/gutenberg.js"],"sourcesContent":["const { registerBlockType } = wp.blocks;\nconst { TextControl, FormFileUpload, Button } = wp.components;\nconst { RichText, useBlockProps, MediaUpload, MediaUploadCheck } = wp.blockEditor;\nconst { useSelect, useDispatch } = wp.data;\nconst { useEntityProp } = wp.coreData;\nconst { __ } = wp.i18n;\n\nregisterBlockType( 'gutenberg-good-guitarist/cta-template', {\n    title: 'Call to Action Template',\n    icon: 'admin-customizer',\n    category: 'text',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\timageId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n    edit({attributes, setAttributes}) {\n\t\tconst {url, description, imageId, imageUrl} = attributes;\n        const blockProps = useBlockProps();\n\n\t\tconst onSelectMedia = (newImage) => {\n\t\t\tsetAttributes({\n\t\t\t\timageId: newImage.id,\n\t\t\t\timageUrl: newImage.url\n\t\t\t});\n\t\t}\n\n\t\tconst removeMedia = () => {\n\t\t\tsetAttributes({\n\t\t\t\timageId: 0,\n\t\t\t\timageUrl: ''\n\t\t\t});\n\t\t}\n\n        return (\n            <div { ...blockProps }>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={__('Description')}\n\t\t\t\t\tvalue={description}\n\t\t\t\t\tonChange={(newValue) => setAttributes({description: newValue})}\n\t\t\t\t/>\n                <TextControl\n                    label={__('URL')}\n                    value={url}\n                    onChange={(newValue) => setAttributes({url: newValue})}\n                />\n\t\t\t\t<div className=\"media-upload-component\">\n\t\t\t\t\t<label className=\"image-label\">{__('Course Thumbnail')}</label>\n\t\t\t\t\t{ imageUrl && <img className=\"course-image\" src={imageUrl} /> }\n\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\t\tonSelect={onSelectMedia}\n\t\t\t\t\t\t\tallowedTypes={ ['image'] }\n\t\t\t\t\t\t\trender={({open}) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={0 === imageId ? 'select-image-button' : 'select-image-button button-hidden'}\n\t\t\t\t\t\t\t\tonClick={open}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{imageId == 0 && __('Choose an image')}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t{imageId !== 0 &&\n\t\t\t\t\t\t<MediaUploadCheck>\n\t\t\t\t\t\t\t<Button onClick={removeMedia} isLink isDestructive>{__('Remove image')}</Button>\n\t\t\t\t\t\t</MediaUploadCheck>\n\t\t\t\t\t}\n\t\t\t\t</div>\n            </div>\n        );\n    },\n    save() {\n        return null;\n    },\n} );\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const { addFilter } = wp.hooks;\n\n/**\n * When this function gets run by the addfilter\n * hook below, the filter passes it the block settings\n * or config file.\n */\nconst modifyGroupBlock = (settings) => {\n    // console.log(settings.name)\n\n\tif (settings.name !== 'core/group') {\n        return settings\n    }\n\n    const newSettings = {\n        ...settings, // This copies the old settings.  Now we can edit them!\n    }\n\n    // we need to pass along the settings object\n    // even if we haven't modified them!\n    return settings;\n}\n\n\naddFilter(\n    'blocks.registerBlockType', // hook name, very important!\n    'good-guitarist/modify-group-block', // your name, very arbitrary!\n    modifyGroupBlock // function to run\n)\n","const { registerBlockType } = wp.blocks;\nconst { Fragment, useState } = wp.element;\nconst {\n\tPlainText,\n\tRichText,\n\tMediaUpload,\n\tBlockControls,\n\tInspectorControls,\n\tColorPalette,\n\tgetColorClass\n} = wp.editor;\nconst { IconButton, RangeControl, PanelBody, SelectControl } = wp.components;\nconst { useSelect } = wp.data;\nconst { parse } = wp.blockSerializationDefaultParser;\nconst { __ } = wp.i18n;\n\nregisterBlockType( 'gutenberg-good-guitarist/large-cta', {\n\ttitle: 'Large Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'large-cta',\n\tattributes: {\n\t\tselectedCourseId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\tselectedCourseTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tselectedCourseDesc: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tselectedCourseLink: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tselectedCourseImageID: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\tselectedCourseImageUrl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tedit({ attributes, className, setAttributes }) {\n\t\tconst { selectedCourseId  } = attributes;\n\n\t\tconst courseData = useSelect((select) => {\n\t\t\treturn select('core').getEntityRecords('postType', 'course');\n\t\t});\n\n\t\tconst isLoading = useSelect((select) => {\n\t\t\treturn select('core/data').isResolving('core', 'getEntityRecords', [\n\t\t\t\t'postType', 'course'\n\t\t\t]);\n\t\t});\n\n\t\tconst courseOptions = [\n\t\t\t{ label: 'Select a call to action', value: null, default: true }\n\t\t];\n\t\tconst courseDetails = {};\n\t\tif ( courseData ) {\n\t\t\tcourseData.forEach((course) => {\n\t\t\t\tif (course.id) {\n\t\t\t\t\tconst parsedBlocks = parse(course.content.raw);\n\t\t\t\t\t/**\n\t\t\t\t\t * There may be multiple blocks in the course post.\n\t\t\t\t\t *\n\t\t\t\t\t * Find the course template block(which should be the first)\n\t\t\t\t\t * and get its attributes.\n\t\t\t\t\t */\n\t\t\t\t\tconst courseTemplateBlock = parsedBlocks.find(block => 'gutenberg-good-guitarist/course-template' === block.blockName);\n\t\t\t\t\tconst courseAtts = courseTemplateBlock.attrs;\n\t\t\t\t\tif (courseAtts) {\n\t\t\t\t\t\t// Create options for SelectControl.\n\t\t\t\t\t\tcourseOptions.push({label: course.title.raw, value: course.id});\n\t\t\t\t\t\t// Keep separate courseDetail objects used to populate attributes.\n\t\t\t\t\t\tcourseDetails[course.id] = {\n\t\t\t\t\t\t\ttitle: course.title.raw,\n\t\t\t\t\t\t\tdescription: courseAtts.courseDescription,\n\t\t\t\t\t\t\turl: courseAtts.courseUrl,\n\t\t\t\t\t\t\timageId: courseAtts.imageId,\n\t\t\t\t\t\t\timageUrl: courseAtts.imageUrl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst handleCourseSelect = (selectedCourse) => {\n\t\t\tconsole.log(courseDetails[selectedCourse].imageUrl)\n\t\t\tif (selectedCourse in courseDetails) {\n\t\t\t\tsetAttributes({\n\t\t\t\t\tselectedCourseId: parseInt(selectedCourse),\n\t\t\t\t\tselectedCourseTitle: courseDetails[selectedCourse].title,\n\t\t\t\t\tselectedCourseDesc: courseDetails[selectedCourse].description,\n\t\t\t\t\tselectedCourseImageID: courseDetails[selectedCourse].image,\n\t\t\t\t\tselectedCourseLink: courseDetails[selectedCourse].url,\n\t\t\t\t\tselectedCourseImageUrl: courseDetails[selectedCourse].imageUrl\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetAttributes({\n\t\t\t\t\tselectedCourseId: selectedCourse,\n\t\t\t\t\tselectedCourseTitle: '',\n\t\t\t\t\tselectedCourseDesc: '',\n\t\t\t\t\tselectedCourseImageID: '',\n\t\t\t\t\tselectedCourseLink: '',\n\t\t\t\t\tselectedCourseImageUrl: ''\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<h2 className=\"dynamic-block-h2\">{__('Large Course Card')}</h2>\n\t\t\t\t{ isLoading && <span>{__('Loading...')}</span>}\n\t\t\t\t{ courseOptions &&\n\t\t\t\t<SelectControl\n\t\t\t\t\tlabel=\"Select course\"\n\t\t\t\t\tvalue={ selectedCourseId }\n\t\t\t\t\toptions={ courseOptions }\n\t\t\t\t\tonChange={ handleCourseSelect }\n\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t},\n\tsave() {\n\t\treturn null;\n\t}\n});\n","const { registerBlockType } = wp.blocks;\nconst { RichText, InspectorControls } = wp.editor;\nconst { useBlockProps } = wp.blockEditor;\nconst {\n\tButton,\n\tPanelBody,\n\tPanelRow,\n\tDashicon\n} = wp.components;\nconst { useEffect, useState } = wp.element;\nconst { select, useSelect } = wp.data;\nconst { __ } = wp.i18n;\nconst { parse } = wp.blockSerializationDefaultParser;\n\nregisterBlockType( 'gutenberg-good-guitarist/latest-lessons', {\n\ttitle: 'Latest Lessons',\n\ticon: 'list',\n\tcategory: 'layout',\n\tclassName: 'latest-lessons',\n\tattributes: {\n\t\tlessons: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tedit: ({ attributes, className}) => {\n\t\tconst blockProps = useBlockProps();\n\n\t\treturn (\n\t\t\t<div {...blockProps}>\n\t\t\t\t<h2 className=\"dynamic-block-h2\">{__('Latest Lessons Carousel')}</h2>\n\t\t\t</div>\n\t\t)\n\t},\n\tsave: () => null\n})\n","import { getCtaDataFromPosts } from \"../utils\";\nconst { registerBlockType } = wp.blocks;\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nregisterBlockType( 'gutenberg-good-guitarist/small-cta', {\n\ttitle: 'Small Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'small-cta',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit({ attributes, setAttributes }) {\n\t\tconst blockProps = useBlockProps();\n\t\tconst { url, buttonText, description, imageId, imageUrl } = attributes;\n\n\t\tconst ctaSelectOptions = useSelect(select => {\n\t\t\tconst ctaPosts = select('core').getEntityRecords('postType', 'cta');\n\t\t\tif (ctaPosts) {\n\t\t\t\tconst ctaData = getCtaDataFromPosts(ctaPosts);\n\n\t\t\t\t// Create dropdown options.\n\t\t\t\treturn ctaData.map((cta) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: cta.title,\n\t\t\t\t\t\tonClick: () => setAttributes({\n\t\t\t\t\t\t\tdescription: cta.description,\n\t\t\t\t\t\t\turl: cta.url,\n\t\t\t\t\t\t\timageId: cta.imageId,\n\t\t\t\t\t\t\timageUrl: cta.imageUrl\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * Event handler for When images is selected.\n\t\t *\n\t\t * @param   {object}  media  The media object, to set url, and id.\n\t\t */\n\t\tconst onSelectImage = (media) => {\n\t\t\tsetAttributes({\n\t\t\t\timageUrl: media.url,\n\t\t\t\timageId: media.id,\n\t\t\t});\n\t\t};\n\n\t\treturn (\n\t\t\t<div {...blockProps} className=\"small-cta\">\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t{ctaSelectOptions && <ToolbarDropdownMenu\n\t\t\t\t\t\t\ticon=\"update\"\n\t\t\t\t\t\t\tlabel=\"Use with an existing course\"\n\t\t\t\t\t\t\tcontrols={ctaSelectOptions}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</BlockControls>\n\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t<img src={imageUrl} alt=\"\" />\n\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\tonSelect={onSelectImage}\n\t\t\t\t\t\tallowedTypes=\"image\"\n\t\t\t\t\t\tvalue={imageId}\n\t\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName={\"image-button change-image-button\"}\n\t\t\t\t\t\t\tonClick={open}\n\t\t\t\t\t\t\t>{__(\"Change Image\")}</button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"details-container\">\n\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\tonChange={value => setAttributes({ description: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel=\"Link\"\n\t\t\t\t\t\tvalue={url}\n\t\t\t\t\t\tonChange={value => setAttributes({ url: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tclassName=\"button-text-input\"\n\t\t\t\t\t\tlabel=\"Button text\"\n\t\t\t\t\t\tvalue={buttonText}\n\t\t\t\t\t\tonChange={value => setAttributes({ buttonText: value })}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n \t\t\t</div>\n\t\t)\n\n\t},\n\tsave({ attributes }) {\n\t\tconst { url, buttonText, description, imageUrl } = attributes;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"image-container\">\n\t\t\t\t\t<img src={imageUrl} alt=\"\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"details-container\">\n\t\t\t\t\t<p>{description}</p>\n\t\t\t\t\t<button className=\"cta-button\" href={url}>{buttonText}</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n});\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { getCtaDataFromPosts } from '../utils';\nconst { registerBlockType, createBlock } = wp.blocks;\nconst { TextControl, PanelRow, SelectControl, ToggleControl } = wp.components;\nconst { RichText, useBlockProps, InnerBlocks } = wp.blockEditor;\nconst { PluginDocumentSettingPanel } = wp.editPost;\nconst { useSelect, dispatch, useDispatch } = wp.data;\nconst { useRef, useState, useEffect } = wp.element;\nconst { __ } = wp.i18n;\nconst { parse } = wp.blockSerializationDefaultParser;\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt', {\n\tapiVersion: 2,\n\ttitle: 'Youtube Post Template',\n\ticon: 'playlist-video',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type',\n\tattributes: {\n\t\tvideoInfoFetched: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\tvideoTitle: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tvideoThumbnail: {\n\t\t\ttype: 'string',\n\t\t\tdefault: gutenbergVars.image_dir + '/good-guitarist-preview-img.png'\n\t\t},\n\t\tvideoDescription: {\n\t\t\ttype: 'array',\n\t\t},\n\t\tvideoURL: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tvideoID: {\n\t\t\ttype: 'string',\n\t\t},\n\t\tsongTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tsidebarCourseSlotOne: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: -1\n\t\t},\n\t\tsidebarCourseSlotTwo: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: -1\n\t\t},\n\t\tpostBodyElements: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t}\n\t},\n\n\tedit({ clientId, attributes, className, setAttributes }) {\n\t\tconst {\n\t\t\tvideoInfoFetched,\n\t\t\tvideoID,\n\t\t\tvideoURL,\n\t\t\tvideoTitle,\n\t\t\tvideoThumbnail,\n\t\t\tsongTitle,\n\t\t\tsidebarCourseSlotOne,\n\t\t\tsidebarCourseSlotTwo\n\t\t} = attributes;\n\n\t\tconst blockProps = useBlockProps();\n\t\tconst postBody = useRef();\n\t\tconst [errorMessage, setErrorMessage] = useState({\n\t\t\tclass: 'fetch-message-hidden',\n\t\t\tmessage: ''\n\t\t});\n\n\t\tuseEffect(() => {\n\t\t\tif (!gutenbergVars.youtube_api_key) {\n\t\t\t\tsetErrorMessage({\n\t\t\t\t\tclass: 'fetch-message-fail',\n\t\t\t\t\tmessage: 'Youtube API key not detected. Please ensure you have entered a valid API key in the \"GG Settings\" section.'\n\t\t\t\t});\n\t\t\t}\n\t\t}, []);\n\n\t\tconst createCourseDropdownOptions = () => {\n\t\t\tconst courseDetails = {};\n\t\t\tconst courseOptions = [{\n\t\t\t\tlabel: 'None',\n\t\t\t\tvalue: -1\n\t\t\t}];\n\t\t}\n\n\t\tconst { postMeta } = useSelect( ( select ) => {\n\t\t\tconst ctaPosts = select( 'core' ).getEntityRecords( 'postType', 'cta' );\n\t\t\tif (ctaPosts) {\n\t\t\t\tconst ctaData = getCtaDataFromPosts(ctaPosts);\n\n\t\t\t\t// Create dropdown options.\n\t\t\t\treturn ctaData.map((cta) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: cta.title,\n\t\t\t\t\t\tonClick: () => setAttributes({\n\t\t\t\t\t\t\tdescription: cta.description,\n\t\t\t\t\t\t\turl: cta.url,\n\t\t\t\t\t\t\timageId: cta.imageId,\n\t\t\t\t\t\t\timageUrl: cta.imageUrl\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// if (courses) {\n\t\t\t// \tcourses.forEach((course) => {\n\t\t\t// \t\tconst parsedBlocks = parse(course.content.raw);\n\t\t\t// \t\t/**\n\t\t\t// \t\t * There may be multiple blocks in the course post.\n\t\t\t// \t\t *\n\t\t\t// \t\t * Find the course template block(which should be the first)\n\t\t\t// \t\t * and get its attributes.\n\t\t\t// \t\t */\n\t\t\t// \t\tconst courseTemplateBlock = parsedBlocks.find(block => 'gutenberg-good-guitarist/course-template' === block.blockName);\n\t\t\t// \t\tconst courseAtts = courseTemplateBlock.attrs;\n\n\t\t\t// \t\tcourseOptions.push({\n\t\t\t// \t\t\tlabel: course.title.raw,\n\t\t\t// \t\t\tvalue: parseInt(course.id),\n\t\t\t// \t\t});\n\t\t\t// \t\t// Keep separate courseDetail objects used to populate attributes.\n\t\t\t// \t\tcourseDetails[course.id] = {\n\t\t\t// \t\t\ttitle: course.title.raw,\n\t\t\t// \t\t\tdescription: courseAtts.courseDescription,\n\t\t\t// \t\t\turl: courseAtts.courseUrl,\n\t\t\t// \t\t\timageId: courseAtts.imageId,\n\t\t\t// \t\t\timageUrl: courseAtts.imageUrl\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// }\n\n\t\t\treturn {\n\t\t\t\tpostMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n\t\t\t\t// courseDetails: courseDetails,\n\t\t\t\t// courseOptions: courseOptions,\n\t\t\t};\n\t\t} );\n\t\tif (postMeta) {\n\t\t\tconst { editPost } = useDispatch( 'core/editor', [ postMeta.difficulty ] );\n\t\t}\n\n\t\t/**\n\t\t * Check if string has http:// or https:// in it.\n\t\t *\n\t\t * @param {string} stringToCheck\n\t\t */\n\t\tconst stringContainsLink = (stringToCheck) => {\n\t\t\tconst linkRegex = /(http:\\/\\/|https:\\/\\/).*/g;\n\t\t\tlet matchedLink = '';\n\t\t\tif ( 'string' === typeof stringToCheck && stringToCheck?.search(linkRegex) >= 0 ) {\n\t\t\t\tmatchedLink = stringToCheck.match(linkRegex);\n\t\t\t}\n\t\t\treturn matchedLink;\n\t\t}\n\n\t\t/**\n\t\t * Parse the youtube video ID from the URL.\n\t\t * Set the video URL and ID attributes.\n\t\t *\n\t\t * @param {*} event\n\t\t */\n\t\tconst handleURLChange = (event) => {\n\t\t\tlet url = event.target.value;\n\t\t\tlet parsedVideoID = null;\n\t\t\tlet videoIDMatch = url.match(/(\\?v=)(\\w|-)+/g);\n\t\t\tif (videoIDMatch) {\n\t\t\t\tparsedVideoID = videoIDMatch[0].replace('?v=', '');\n\t\t\t}\n\t\t\tsetAttributes({\n\t\t\t\tvideoID: parsedVideoID,\n\t\t\t\tvideoURL: url\n\t\t\t})\n\t\t}\n\n\t\t/**\n\t\t * Update fetch completion message state and make message visible to user.\n\t\t *\n\t\t * @param {Boolean} completedSuccessfully\n\t\t * @param {String} errorMessage\n\t\t */\n\t\tconst showFetchCompleteMessage = ( completedSuccessfully, errorMessage = '' ) => {\n\t\t\tlet fetchMessageClass = '';\n\t\t\tlet fetchMessageText = '';\n\t\t\tif ( completedSuccessfully ) {\n\t\t\t\tfetchMessageClass = 'fetch-message-success';\n\t\t\t\tfetchMessageText = __('Video information fetched successfully.');\n\t\t\t} else {\n\t\t\t\tfetchMessageClass = 'fetch-message-fail';\n\t\t\t\tfetchMessageText = __('Couldn\\'t fetch video information.') + ` ${errorMessage}`;\n\t\t\t}\n\t\t\tsetErrorMessage({\n\t\t\t\tclass: fetchMessageClass,\n\t\t\t\tmessage: fetchMessageText\n\t\t\t});\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetErrorMessage({\n\t\t\t\t\tclass: 'fetch-message-hidden',\n\t\t\t\t\tmessage: ''\n\t\t\t\t})\n\t\t\t}, 3000);\n\t\t}\n\n\t\t/**\n\t\t * Create a gutenberg block for each paragraph of the fetched\n\t\t * youtube description.\n\t\t *\n\t\t * @param {array} descriptionArray\n\t\t * @returns\n\t\t */\n\t\tconst createBlocksFromDescription = (descriptionArray) => {\n\t\t\tconst descriptionWithoutEmpties = descriptionArray.filter(description => description.length);\n\t\t\treturn descriptionWithoutEmpties.map(description => {\n\t\t\t\tlet matchedLink = stringContainsLink(description);\n\t\t\t\tlet blockType = 'core/paragraph';\n\t\t\t\tlet blockAtts = { content: description };\n\t\t\t\tif (matchedLink) {\n\t\t\t\t\tblockType = 'gutenberg-good-guitarist/small-cta';\n\t\t\t\t\tblockAtts = { url: matchedLink, description: description }\n\t\t\t\t}\n\t\t\t\treturn createBlock(blockType, blockAtts);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Handle a successful youtube video fetch.\n\t\t *\n\t\t * @param {Object} response\n\t\t */\n\t\tconst handleFetchResponse = (response) => {\n\t\t\ttry {\n\t\t\t\tdispatch('core/editor').replaceBlock(clientId, []);\n\n\t\t\t\tconst fetchedTitle = response.result.items[0].snippet.title;\n\t\t\t\tconst fetchedDescription = response.result.items[0].snippet.description;\n\t\t\t\tconst fetchedThumbnail = response.result.items[0].snippet.thumbnails.medium.url;\n\t\t\t\tconst descriptionArray = fetchedDescription.split('\\n');\n\t\t\t\tconst postBodyBlocks = createBlocksFromDescription(descriptionArray);\n\n\t\t\t\t// Update the post title.\n\t\t\t\tdispatch('core/editor').editPost({ title: fetchedTitle });\n\n\t\t\t\t// Update post body.\n\t\t\t\tdispatch('core/editor').insertBlocks(postBodyBlocks, 0, clientId);\n\n\t\t\t\t// Set attributes from fetched video info.\n\t\t\t\tsetAttributes({\n\t\t\t\t\tvideoTitle: fetchedTitle,\n\t\t\t\t\tvideoThumbnail: fetchedThumbnail,\n\t\t\t\t\tvideoInfoFetched: true\n\t\t\t\t});\n\n\t\t\t\t// Give some feedback to the user that the fetch has completed.\n\t\t\t\tshowFetchCompleteMessage( true );\n\t\t\t} catch (error) {\n\t\t\t\t// Let the user know the operation failed.\n\t\t\t\tshowFetchCompleteMessage( false );\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Interface with the google client API to perform a fetch request\n\t\t * to get information from the youtube video ID.\n\t\t *\n\t\t * @link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md\n\t\t *\n\t\t * @param {MouseEvent} event\n\t\t * @param {String} videoID\n\t\t */\n\t\tconst initFetch = (event, videoID) => {\n\t\t\tevent.preventDefault();\n\t\t\tsetErrorMessage({\n\t\t\t\tclass: 'fetch-message-hidden',\n\t\t\t\tmessage: ''\n\t\t\t});\n\t\t\tgapi.load('client', () => {\n\t\t\t\tconsole.log('the vid id', videoID)\n\t\t\t\tgapi.client.setApiKey(gutenbergVars.youtube_api_key);\n\t\t\t\tgapi.client.load('youtube', 'v3', () => {\n\t\t\t\t\tgapi.client.youtube.videos.list({\n\t\t\t\t\t\tpart: 'snippet',\n\t\t\t\t\t\tid : videoID\n\t\t\t\t\t})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\thandleFetchResponse(response);\n\t\t\t\t\t}, error => {\n\t\t\t\t\t\t// Let the user know the fetch failed.\n\t\t\t\t\t\tshowFetchCompleteMessage( false, error );\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {*} newValue\n\t\t * @param {*} id\n\t\t */\n\t\tconst handleCourseChange = (newValue, id) => {\n\t\t\tif ('first-course-slot' === id) {\n\t\t\t\tconsole.log('it is set', newValue)\n\t\t\t\tif ('None' !== newValue ) {\n\t\t\t\t\tsetAttributes({ sidebarCourseSlotOne: newValue })\n\t\t\t\t} else {\n\t\t\t\t\tsetAttributes({ sidebarCourseSlotOne: 0})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ('second-course-slot' === id) {\n\t\t\t\tif ('None' !== newValue ) {\n\t\t\t\t\tsetAttributes({ sidebarCourseSlotTwo: newValue })\n\t\t\t\t} else {\n\t\t\t\t\tsetAttributes({ sidebarCourseSlotTwo: 0})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t *\n\t\t * @param {*} param0\n\t\t * @returns\n\t\t */\n\t\t// const SidebarCourseArea = ({courseID}) => {\n\t\t// \tconsole.log('course?', courseID, courseDetails)\n\t\t// \tconst course = courseDetails[props.courseID];\n\t\t// \treturn (\n\t\t// \t\t<div className=\"sidebar-course-card\">\n\t\t// \t\t\t<img src={course.imageUrl} alt=\"\" />\n\t\t// \t\t\t<div className=\"course-card-body\">\n\t\t// \t\t\t\t<p className=\"body-text\">{course.description}</p>\n\t\t// \t\t\t\t<a className=\"course-url-button\" href={course.courseUrl}>{'Get it now!'}</a>\n\t\t// \t\t\t</div>\n\t\t// \t\t</div>\n\t\t// \t)\n\t\t// }\n\n\t\treturn (\n\t\t\t<div { ...blockProps } className={ className }>\n\t\t\t\t<PluginDocumentSettingPanel\n\t\t\t\t\tname=\"sidebar-course-slots\"\n\t\t\t\t\ttitle={__(\"Video sidebar course slots\")}\n\t\t\t\t\tclassName=\"sidebar-course-slots-panel\"\n\t\t\t\t>\n\t\t\t\t\t{/* { courseDetails && <PanelRow>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tid=\"first-course-slot\"\n\t\t\t\t\t\t\tlabel={__('Sidebar course 1')}\n\t\t\t\t\t\t\tvalue={sidebarCourseSlotOne}\n\t\t\t\t\t\t\toptions={courseOptions}\n\t\t\t\t\t\t\tonChange={ (newValue) => handleCourseChange(newValue, 'first-course-slot') }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow> }\n\t\t\t\t\t{ courseDetails && <PanelRow>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tid=\"second-course-slot\"\n\t\t\t\t\t\t\tlabel={__('Sidebar course 2')}\n\t\t\t\t\t\t\tvalue={sidebarCourseSlotTwo}\n\t\t\t\t\t\t\toptions={courseOptions}\n\t\t\t\t\t\t\tonChange={ (newValue) => handleCourseChange(newValue, 'second-course-slot') }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow> } */}\n\t\t\t\t</PluginDocumentSettingPanel>\n\t\t\t\t<PluginDocumentSettingPanel\n\t\t\t\t\tname=\"song-difficulty-attributes\"\n\t\t\t\t\ttitle={__('Song difficulty')}\n\t\t\t\t\tclassName=\"song-difficulty-panel\"\n\t\t\t\t>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t{postMeta && <TextControl\n\t\t\t\t\t\t\tlabel={__('Enter a number from 1 to 50')}\n\t\t\t\t\t\t\tvalue={ postMeta.song_difficulty }\n\t\t\t\t\t\t\tonChange={ (newValue) => editPost({meta: { song_difficulty: newValue }}) }\n\t\t\t\t\t\t/>}\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PluginDocumentSettingPanel>\n\t\t\t\t<PluginDocumentSettingPanel\n\t\t\t\t\tname=\"contains-only-one-barre-chord\"\n\t\t\t\t\ttitle={__('Contains only one barre chord')}\n\t\t\t\t\tclassName=\"contains-only-one-barre-chord-panel\"\n\t\t\t\t>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t{postMeta && <ToggleControl\n\t\t\t\t\t\t\tlabel={__('One barre chord song')}\n\t\t\t\t\t\t\tchecked={ postMeta.contains_one_barre }\n\t\t\t\t\t\t\tonChange={ (newValue) => editPost({meta: { contains_one_barre: newValue }}) }\n\t\t\t\t\t\t/>}\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PluginDocumentSettingPanel>\n\t\t\t\t<section className=\"video-details\">\n\t\t\t\t\t<h2>{__('Video Details')}</h2>\n\t\t\t\t\t<span className={`fetch-message ${errorMessage.class}`}>{errorMessage.message}</span>\n\t\t\t\t\t<label className=\"youtube-post-label\" htmlFor=\"youtube-video-url\">Search by Youtube video URL</label>\n\t\t\t\t\t<form onSubmit={(event) => initFetch(event, videoID)}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"youtube-video-url\"\n\t\t\t\t\t\t\tlabel={__('Video URL')}\n\t\t\t\t\t\t\tclassName=\"youtube-video-url\"\n\t\t\t\t\t\t\tvalue={ videoURL }\n\t\t\t\t\t\t\tonChange={handleURLChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input type=\"submit\" className=\"yt-submit-button\" value=\"Submit\" />\n\t\t\t\t\t</form>\n\t\t\t\t\t{ videoTitle && <TextControl label={__('Video Title')} value={videoTitle} onChange={(e) => setAttributes({videoTitle: e.target.value})} />}\n\t\t\t\t\t{ ( videoThumbnail && videoInfoFetched ) &&\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<label className=\"youtube-post-label\">{__('Video Thumbnail')}</label>\n\t\t\t\t\t\t\t<img src={videoThumbnail} />\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t<label className=\"youtube-post-label\" htmlFor=\"song-title\">{__('Song Title')}</label>\n\t\t\t\t\t<input id=\"song-title\" type=\"text\" value={songTitle} onChange={(e) => setAttributes({songTitle: e.target.value})} />\n\t\t\t\t</section>\n\t\t\t\t<section ref={postBody} className=\"post-body\">\n\t\t\t\t\t<h2>{__('Post Body')}</h2>\n\t\t\t\t\t{ videoID ? <>\n\t\t\t\t\t\t<div className=\"youtube-post-video-area\">\n\t\t\t\t\t\t\t{ ( videoURL ) && <iframe width=\"560\" height=\"715\" src={videoURL} className={sidebarCourseSlotOne > 0 ? 'iframe-two-third-width' : 'iframe-full-width'} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> }\n\t\t\t\t\t\t\t{ ( sidebarCourseSlotOne > 0 || sidebarCourseSlotTwo > 0 ) && <div className=\"course-sidebar\">\n\t\t\t\t\t\t\t\t{/* { ( sidebarCourseSlotOne > 0 && has(courseDetails, courseID) ) && <SidebarCourseArea courseID={sidebarCourseSlotOne} />} */}\n\t\t\t\t\t\t\t\t{/* { ( sidebarCourseSlotTwo > 0 && has(courseDetails, courseID) ) && <SidebarCourseArea courseID={sidebarCourseSlotTwo} />} */}\n\t\t\t\t\t\t\t</div> }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"post-content-video-description\">\n\t\t\t\t\t\t\t<InnerBlocks />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</> : <span className=\"empty-post-body-msg\">{__('Submit URL to populate post body.')}</span> }\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t},\n\tsave({ attributes, className }) {\n\t\tconst {\n\t\t\tvideoURL,\n\t\t\tvideoDescription\n\t\t} = attributes;\n\n\t\treturn (\n\t\t\t<div className={ className }>\n\t\t\t\t{ videoURL ? <iframe width=\"560\" height=\"515\" src={videoURL} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : ''}\n\t\t\t\t<div class={`youtube-post-type-video-description`}>\n\t\t\t\t\t<InnerBlocks.Content />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n});\n","const { registerBlockType } = wp.blocks;\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt-search', {\n\ttitle: 'Youtube Post Search Box',\n\ticon: 'search',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type-search',\n\tattributes: {},\n\tedit: () => (\n\t\t<div>This is the search box for looking at.</div>\n\t),\n\tsave: () => null\n})\n","const { parse } = wp.blockSerializationDefaultParser;\n\n/**\n * Parse 'gutenberg-good-guitarist/cta-template' block from a post.\n *\n * @param {array} ctaPost\n * @returns\n */\nconst getCtaTemplateBlockFromPost = (ctaPost) => {\n\tconst parsedBlocks = parse(ctaPost.content.raw);\n\treturn parsedBlocks.find(block => 'gutenberg-good-guitarist/cta-template' === block.blockName);\n}\n\n/**\n *  Format CTA data from a CTA post.\n *\n * @param {array} ctaPosts\n * @returns\n */\nexport const getCtaDataFromPosts = (ctaPosts) => {\n\tconst validCtaPosts = ctaPosts.filter(ctaPost => {\n\t\treturn ctaPost.id ? getCtaTemplateBlockFromPost(ctaPost) : undefined;\n\t})\n\n\treturn validCtaPosts.map(ctaPost => {\n\t\tconst ctaAtts = getCtaTemplateBlockFromPost(ctaPost).attrs;\n\t\treturn {\n\t\t\ttitle: ctaPost.title.raw,\n\t\t\tdescription: ctaAtts.description,\n\t\t\turl: ctaAtts.url,\n\t\t\timageId: ctaAtts.imageId,\n\t\t\timageUrl: ctaAtts.imageUrl\n\t\t}\n\t})\n}\n","module.exports = window[\"wp\"][\"element\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Import your Gutenberg custom blocks here\n */\nrequire( './blocks/smallCta.js' );\nrequire( './blocks/largeCta.js' );\nrequire( './blocks/cover.js' );\nrequire( './blocks/ctaTemplate.js' );\nrequire( './blocks/group.js' );\nrequire( './blocks/latestLessons.js' );\nrequire( './blocks/youtubePostTemplate.js' );\nrequire( './blocks/yptSearch.js' );\n"],"names":["registerBlockType","wp","blocks","components","TextControl","Button","FormFileUpload","blockEditor","useBlockProps","RichText","MediaUpload","MediaUploadCheck","data","__","useSelect","useDispatch","coreData","useEntityProp","i18n","title","icon","category","attributes","description","type","default","url","imageId","imageUrl","edit","setAttributes","blockProps","createElement","label","value","onChange","newValue","className","src","onSelect","newImage","id","allowedTypes","render","open","onClick","isLink","isDestructive","save","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","addFilter","hooks","settings","name","element","Fragment","useState","editor","PlainText","BlockControls","InspectorControls","ColorPalette","getColorClass","SelectControl","IconButton","RangeControl","PanelBody","parse","blockSerializationDefaultParser","selectedCourseId","selectedCourseTitle","selectedCourseDesc","selectedCourseLink","selectedCourseImageID","selectedCourseImageUrl","courseData","select","getEntityRecords","isLoading","isResolving","courseOptions","courseDetails","forEach","course","courseAtts","content","raw","find","block","blockName","attrs","push","courseDescription","courseUrl","options","selectedCourse","console","log","parseInt","image","PanelRow","Dashicon","useEffect","lessons","Toolbar","ToolbarDropdownMenu","TextareaControl","buttonText","gutenbergVars","image_dir","ctaSelectOptions","ctaPosts","getCtaDataFromPosts","map","cta","controls","alt","media","href","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","o","minLen","n","prototype","toString","slice","constructor","from","test","TypeError","createBlock","ToggleControl","InnerBlocks","PluginDocumentSettingPanel","editPost","dispatch","useRef","apiVersion","videoInfoFetched","videoTitle","videoThumbnail","videoDescription","videoURL","videoID","songTitle","sidebarCourseSlotOne","sidebarCourseSlotTwo","postBodyElements","clientId","postBody","class","message","errorMessage","setErrorMessage","youtube_api_key","postMeta","getEditedPostAttribute","difficulty","showFetchCompleteMessage","completedSuccessfully","fetchMessageClass","fetchMessageText","setTimeout","handleFetchResponse","response","replaceBlock","fetchedTitle","result","items","snippet","fetchedDescription","fetchedThumbnail","thumbnails","medium","postBodyBlocks","descriptionArray","filter","matchedLink","stringToCheck","linkRegex","search","match","stringContainsLink","blockType","blockAtts","createBlocksFromDescription","split","insertBlocks","error","song_difficulty","meta","checked","contains_one_barre","htmlFor","onSubmit","event","preventDefault","gapi","load","client","setApiKey","youtube","videos","list","part","then","initFetch","target","parsedVideoID","videoIDMatch","replace","e","ref","width","height","frameborder","allow","allowfullscreen","Content","getCtaTemplateBlockFromPost","ctaPost","undefined","ctaAtts","module","exports","window","_extends","assign","bind","arguments","source","hasOwnProperty","apply","this","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","get","prop","r","toStringTag","require"],"sourceRoot":""}