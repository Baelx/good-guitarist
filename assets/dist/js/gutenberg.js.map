{"version":3,"file":"/js/gutenberg.js","mappings":"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","sources":["webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/cta-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/group/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/large-cta/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/latest-lessons/index.js","webpack://good-guitarist/external window [\"wp\",\"blocks\"]","webpack://good-guitarist/external window [\"wp\",\"components\"]","webpack://good-guitarist/./assets/src/scripts/blocks/section/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/section/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/section/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/small-cta/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/song-chords/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/song-chords/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/song-chords/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/song-difficulty/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/song-difficulty/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/song-difficulty/BlockSave.jsx","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://good-guitarist/external window \"regeneratorRuntime\"","webpack://good-guitarist/./assets/src/scripts/components/SidebarCta.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/BlockSave.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/deprecated/v1.js","webpack://good-guitarist/./assets/src/scripts/blocks/youtube-post-template/index.js","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/BlockEdit.jsx","webpack://good-guitarist/./assets/src/scripts/blocks/ypt-search/index.js","webpack://good-guitarist/./assets/src/scripts/modules/gutenbergUtils.js","webpack://good-guitarist/./assets/src/scripts/utils.js","webpack://good-guitarist/external window [\"wp\",\"blockEditor\"]","webpack://good-guitarist/external window [\"wp\",\"element\"]","webpack://good-guitarist/external window [\"wp\",\"i18n\"]","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://good-guitarist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://good-guitarist/webpack/bootstrap","webpack://good-guitarist/webpack/runtime/compat get default export","webpack://good-guitarist/webpack/runtime/define property getters","webpack://good-guitarist/webpack/runtime/hasOwnProperty shorthand","webpack://good-guitarist/webpack/runtime/make namespace object","webpack://good-guitarist/./assets/src/scripts/gutenberg.js"],"sourcesContent":["const { TextControl, Button } = wp.components;\nconst { useBlockProps, MediaUpload, MediaUploadCheck } = wp.blockEditor;\nconst { __ } = wp.i18n;\n\nexport const BlockEdit = ({attributes, setAttributes}) => {\n    const {url, description, buttonText, imageId, imageUrl} = attributes;\n    const blockProps = useBlockProps();\n\n    const onSelectMedia = (newImage) => {\n        setAttributes({\n            imageId: newImage.id,\n            imageUrl: newImage.url\n        });\n    }\n\n    const removeMedia = () => {\n        setAttributes({\n            imageId: 0,\n            imageUrl: ''\n        });\n    }\n\n    return (\n        <div { ...blockProps }>\n            <TextControl\n                label={__('Description')}\n                value={description}\n                onChange={(newValue) => setAttributes({description: newValue})}\n            />\n            <TextControl\n                label={__('URL')}\n                value={url}\n                onChange={(newValue) => setAttributes({url: newValue})}\n            />\n            <TextControl\n                label={__('Button text (if nothing is entered, button text will be \"Click here\")')}\n                value={buttonText}\n                onChange={(newValue) => setAttributes({buttonText: newValue})}\n            />\n            <div className=\"media-upload-component\">\n                <label className=\"image-label\">{__('Call to action thumbnail (if no image is chosen, a default image will be used)')}</label>\n                { imageUrl && <img className=\"course-image\" src={imageUrl} /> }\n                <MediaUploadCheck>\n                    <MediaUpload\n                        onSelect={onSelectMedia}\n                        allowedTypes={ ['image'] }\n                        render={({open}) => (\n                            <Button\n                            className={0 === imageId ? 'select-image-button' : 'select-image-button button-hidden'}\n                            onClick={open}\n                            >\n                                {imageId == 0 && __('Choose an image')}\n                            </Button>\n                        )}\n                        />\n                </MediaUploadCheck>\n                {imageId !== 0 &&\n                    <MediaUploadCheck>\n                        <Button onClick={removeMedia} isLink isDestructive>{__('Remove image')}</Button>\n                    </MediaUploadCheck>\n                }\n            </div>\n        </div>\n    );\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\n\nregisterBlockType( 'gutenberg-good-guitarist/cta-template', {\n    title: 'Call to Action Template',\n    icon: 'admin-customizer',\n    category: 'text',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\timageId: {\n\t\t\ttype: 'integer',\n\t\t\tdefault: 0\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n    edit: BlockEdit,\n    save: () => null\n});","const { addFilter } = wp.hooks;\n\n/**\n * Modify the Gutenberg group block.\n * \n * @param {*} settings \n * @returns \n */\nconst modifyGroupBlock = (settings) => {\n\tif (settings.name !== 'core/group') {\n        return settings\n    }\n\n    const newSettings = {\n        ...settings,\n    }\n\n    return settings;\n}\n\n\naddFilter(\n    'blocks.registerBlockType',\n    'good-guitarist/modify-group-block',\n    modifyGroupBlock\n)\n","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, className, setAttributes }) => {\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta', { per_page: -1 });\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        title: cta.title,\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        buttonText: cta.buttonText\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div className={className}>\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        className=\"toolbar-toggle-cta\"\n                        label={__(\"Use with an existing call to action\")}\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n        </div> \n    );\n}","const { __ } = wp.i18n;\nimport { BlockEdit } from \"./BlockEdit\";\nimport { BlockSave } from \"./BlockSave\";\nconst { registerBlockType } = wp.blocks;\n\nregisterBlockType( 'gutenberg-good-guitarist/large-cta', {\n\ttitle: __('Large Call to Action'),\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'large-cta',\n\tattributes: {\n\t\ttitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes, className }) => {\n    const { title, url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div className={className}>\n            <img className=\"lcc-image\" src={imageUrl} alt=\"\" />\n            <div>\n                <h3 className=\"lcc-heading\">{title}</h3>\n                <div className=\"lcc-body\">{description}</div>\n            </div>\n            <a className=\"lcc-button\" href={url}>{buttonText}</a>\n        </div>\n    )\n}","const { __ } = wp.i18n;\n\nexport const BlockEdit = () => {\n    return (\n        <div>\n            <h2 className=\"dynamic-block-h2\">{__('Latest Lessons Carousel')}</h2>\n            <small>{__('A carousel of the latest lessons will appear here on the frontend.')}</small>\n        </div>\n    )\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/latest-lessons', {\n\ttitle: 'Latest Lessons',\n\ticon: 'list',\n\tcategory: 'layout',\n\tclassName: 'latest-lessons',\n\tattributes: {\n\t\tlessons: {\n\t\t\ttype: 'string',\n\t\t}\n\t},\n\tedit: BlockEdit,\n\tsave: () => null\n})","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","import { registerBlockType } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType(\"gutenberg-good-guitarist/section\", {\n  title: __(\"Section\"),\n  icon: \"align-full-width\",\n  category: \"layout\",\n  attributes: {\n      gutterWidth: {\n          type: 'number',\n          default: 0,\n      },\n  },\n  edit: BlockEdit,\n  save: BlockSave,\n});","import { __ } from \"@wordpress/i18n\";\nimport { InnerBlocks } from \"@wordpress/block-editor\";\nimport { InspectorControls } from \"@wordpress/block-editor\";\nimport { PanelBody } from \"@wordpress/components\";\nimport { __experimentalNumberControl as NumberControl } from '@wordpress/components';\n\n/**\n * Edit react component for Section block.\n * \n * @param {Object} props React props passed to this component.\n * @returns {JSX}\n */\nexport const BlockEdit = ({ className, attributes, setAttributes }) => {\n    const { gutterWidth } = attributes;\n\n    const gutterStyles = {\n        paddingLeft: `${gutterWidth}%`,\n        paddingRight: `${gutterWidth}%`\n    };\n\n    return (\n        <div className={className} style={gutterStyles}>\n            <InspectorControls>\n                <PanelBody\n                    title={__('Gutter width')}\n                    initialOpen={true}\n                >\n                    <p>{__('Enter a value for the left and right margins of this block. The higher the value, the more space will appear to the left and right of the Section content.')}</p>\n                    <p style={{ fontStyle: \"italic\" }}>{__('The grey colour on either is side is only to illustrate the size of the margins. Grey will not be used on the front end.')}</p>\n                    <NumberControl\n                        data-testid=\"gutter-input\"\n                        onChange={(newValue) => setAttributes({ gutterWidth: newValue })}\n                        max={100}\n                        min={0}\n                        value={gutterWidth}\n                    />\n                    </PanelBody>\n                </InspectorControls>\n                <InnerBlocks />\n            </div>\n        );\n}","import { InnerBlocks } from \"@wordpress/block-editor\";\n\n/**\n * Save react component for Section block.\n * \n * @param {Object} props React props passed to this component.\n * @returns {JSX}\n */\n export const BlockSave = ({ className, attributes }) => {\n    const { gutterWidth } = attributes;\n\n    const gutterStyles = {\n        marginLeft: `${gutterWidth}%`,\n        marginRight: `${gutterWidth}%`,\n    };\n\n    return (\n        <div className={className} style={gutterStyles}>\n            <InnerBlocks.Content />\n        </div>\n    );\n}","import { getCtaDataFromPosts } from \"../../utils\";\nconst { __ } = wp.i18n;\nconst { MediaUpload } = wp.editor;\nconst { useBlockProps, BlockControls } = wp.blockEditor;\nconst { Toolbar, ToolbarDropdownMenu, TextControl, TextareaControl } = wp.components;\nconst { useSelect } = wp.data;\n\nexport const BlockEdit = ({ attributes, setAttributes }) => {\n    const blockProps = useBlockProps();\n    const { url, buttonText, description, imageId, imageUrl } = attributes;\n\n    const ctaSelectOptions = useSelect(select => {\n        const ctaPosts = select('core').getEntityRecords('postType', 'cta', { per_page: -1 });\n        if (ctaPosts) {\n            const ctaData = getCtaDataFromPosts(ctaPosts);\n\n            // Create dropdown options.\n            return ctaData.map((cta) => {\n                return {\n                    title: cta.title,\n                    onClick: () => setAttributes({\n                        description: cta.description,\n                        url: cta.url,\n                        imageId: cta.imageId,\n                        imageUrl: cta.imageUrl,\n                        buttonText: cta.buttonText\n                    })\n                }\n            });\n        }\n    });\n\n    /**\n     * Event handler for When images is selected.\n     *\n     * @param   {object}  media  The media object, to set url, and id.\n     */\n    const onSelectImage = (media) => {\n        setAttributes({\n            imageUrl: media.url,\n            imageId: media.id,\n        });\n    };\n\n    return (\n        <div {...blockProps} className=\"small-cta\">\n            <BlockControls>\n                <Toolbar>\n                    {ctaSelectOptions && <ToolbarDropdownMenu\n                        icon=\"update\"\n                        className=\"toolbar-toggle-cta\"\n                        label=\"Use with an existing call to action\"\n                        controls={ctaSelectOptions}\n                    />}\n                </Toolbar>\n            </BlockControls>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n                <MediaUpload\n                    onSelect={onSelectImage}\n                    allowedTypes=\"image\"\n                    value={imageId}\n                    render={({ open }) => (\n                        <button\n                        type=\"text\"\n                        className={\"image-button change-image-button\"}\n                        onClick={open}\n                        >{__(\"Change Image\")}</button>\n                    )}\n                />\n            </div>\n            <div className=\"details-container\">\n                <TextareaControl\n                    label=\"Description\"\n                    value={description}\n                    onChange={value => setAttributes({ description: value })}\n                    />\n                <TextControl\n                    label=\"Link\"\n                    value={url}\n                    onChange={value => setAttributes({ url: value })}\n                />\n                <TextControl\n                    className=\"button-text-input\"\n                    label=\"Button text\"\n                    value={buttonText}\n                    onChange={value => setAttributes({ buttonText: value })}\n                />\n            </div>\n         </div>\n    )\n\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\n\nregisterBlockType( 'gutenberg-good-guitarist/small-cta', {\n\ttitle: 'Small Call to Action',\n\ticon: 'megaphone',\n\tcategory: 'layout',\n\tclassName: 'small-cta',\n\tattributes: {\n\t\tdescription: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\turl: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tbuttonText: {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'Click here'\n\t\t},\n\t\timageId: {\n\t\t\ttype: \"number\",\n\t\t},\n\t\timageUrl: {\n\t\t\ttype: \"string\",\n\t\t\tdefault: `${gutenbergVars.image_dir}/good-guitarist-preview-img.png`\n\t\t},\n\t},\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","export const BlockSave = ({ attributes }) => {\n    const { url, buttonText, description, imageUrl } = attributes;\n\n    return (\n        <div>\n            <div className=\"image-container\">\n                <img src={imageUrl} alt=\"\" />\n            </div>\n            <div className=\"details-container\">\n                <p>{description}</p>\n                <a className=\"cta-button\" href={url}>{buttonText}</a>\n            </div>\n        </div>\n    )\n}","const { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\nimport { BlockSave } from \"./BlockSave\";\n\nregisterBlockType( 'gutenberg-good-guitarist/song-chords', {\n    title: __('Song Chords'),\n    icon: 'playlist-audio',\n    category: 'text',\n\t// Only show this block in the youtube post template block.\n\tparent: [ \"gutenberg-good-guitarist/ypt\" ],\n\tattributes: {\n\t\tchords: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t}\n\t},\n    edit: BlockEdit,\n    save: BlockSave\n});","import { __ } from '@wordpress/i18n';\n\nexport const BlockEdit = ({ className, attributes, setAttributes }) => {\n    const { chords } = attributes;\n\n    return (\n        <div className={className}>\n            { chords.length > 0 && chords.map((chord, i, array) => (\n                <>\n                    <span key={chord}>{chord}</span>\n                    {true ? \", \" : \"\"}\n                </>\n            ))}\n        </div>\n    )\n}","import { __ } from '@wordpress/i18n';\n\nexport const BlockSave = ({ className, attributes }) => {\n    const { chords } = attributes;\n\n    return (\n        <div className={className}>\n            { chords.length > 0 && chords.map((chord, i, array) => (\n                <>\n                    <span key={chord}>{chord}</span>\n                    {true ? \", \" : \"\"}\n                </>\n            ))}\n        </div>\n    )\n}","const { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nimport { BlockEdit } from \"./BlockEdit\";\nimport { BlockSave } from \"./BlockSave\";\n\nregisterBlockType( 'gutenberg-good-guitarist/song-difficulty', {\n    title: __('Song Difficulty'),\n    icon: 'playlist-audio',\n    category: 'text',\n\t// Only show this block in the youtube post template block.\n\tparent: [ \"gutenberg-good-guitarist/ypt\" ],\n\tattributes: {\n\t\tchords: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n    edit: BlockEdit,\n    save: BlockSave\n});","import { __ } from '@wordpress/i18n';\n\nexport const BlockEdit = ({ className, attributes }) => {\n    const { difficulty } = attributes;\n\n    return (\n        <div className={className}>\n            {difficulty && <span>{__('Song difficulty: ')}</span>}\n            {difficulty && <span>{difficulty}</span>}\n        </div>\n    )\n}","import { __ } from '@wordpress/i18n';\n\nexport const BlockSave = ({ className, attributes }) => {\n    const { difficulty } = attributes;\n\n    return (\n        <div className={className}>\n            {difficulty && <span>{__('Song difficulty: ')}</span>}\n            {difficulty && <span>{difficulty}</span>}\n        </div>\n    )\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"regeneratorRuntime\"];","const { __ } = wp.i18n;\n\n/**\n * Small call to action block that appears in Youtube post sidebars.\n * \n * @param {object} cta The CTA info to display.\n * @returns {JSX}\n */\nexport const SidebarCta = ({cta}) => {\n    const { description, imageUrl, url, buttonText } = cta;\n    return (\n        <div className=\"sidebar-cta-card\">\n            <img src={imageUrl || gutenbergVars.image_dir + '/good-guitarist-preview-img.png'} alt=\"\" />\n            <div className=\"cta-card-body\">\n                <p className=\"body-text\">{description}</p>\n                <a className=\"cta-url-button\" href={url}>{buttonText || __(\"Click here\")}</a>\n            </div>\n        </div>\n    )\n}","import {\n    getCtaDataFromPosts,\n    createBlocksFromDescription\n} from '../../utils';\nimport { SidebarCta } from '../../components/SidebarCta';\nconst { TextControl, PanelRow, SelectControl, ToggleControl, Spinner } = wp.components;\nconst { useBlockProps, InnerBlocks } = wp.blockEditor;\nconst { PluginDocumentSettingPanel } = wp.editPost;\nconst { select, useSelect, dispatch, subscribe } = wp.data;\nconst { useRef, useState, useEffect } = wp.element;\nconst { __ } = wp.i18n;\nconst { isSavingPost } = select( 'core/editor' );\n\n/**\n * Edit component for Youtube Post Template.\n * \n * Presents a UI that the user can use to pull Youtube Video Post data with.\n * Also presents a number of taxonomies and meta fields in the sidebar(chords, difficulty, etc.).\n * \n * @param {object} props Gutenberg default props. \n * @returns {JSX}\n */\nexport const BlockEdit = ({ clientId, attributes, className, setAttributes }) => {\n    const {\n        videoInfoFetched,\n        videoID,\n        videoUrlRaw,\n        videoUrlEmbed,\n        videoTitle,\n        videoThumbnail,\n        songTitle,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo\n    } = attributes;\n\n    const blockProps = useBlockProps();\n    const postBody = useRef();\n    const [isFetching, setIsFetching] = useState(false);\n    const [isSavingProcess, setSavingProcess] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({\n        class: 'fetch-message-hidden',\n        message: ''\n    });\n\n    // Subscribe to the post save event and update a piece of state if it's currently saving.\n    subscribe(() => {\n        if (isSavingPost()) {\n            setSavingProcess(true);\n        } else {\n            setSavingProcess(false);\n        }\n    });\n\n    // On component render, if there is no youtube API key in the site settings, show the user an error.\n    useEffect(() => {\n        if (!gutenbergVars.youtube_api_key) {\n            setErrorMessage({\n                class: 'fetch-message-fail',\n                message: __('Youtube API key not detected. Please ensure you have entered a valid API key in the \"GG Settings\" section.')\n            });\n        }\n    }, []);\n\n    // Get various data from the Wordpress store.\n    const { postMeta, ctaData, ctaSelectOptions } = useSelect( ( select ) => {\n        const ctaPosts = select( 'core' ).getEntityRecords( 'postType', 'cta', { per_page: -1 } );\n        let ctaData;\n        let ctaSelectOptions = [{\n            label: 'None',\n            value: -1\n        }];\n\n        // Extract data from all CTA posts to use in the sidebar slot dropdown menus.\n        if (ctaPosts) {\n            ctaData = getCtaDataFromPosts(ctaPosts);\n            // Create dropdown options.\n            ctaData.forEach((cta) => {\n                ctaSelectOptions.push({\n                    label: cta.title,\n                    value: cta.id,\n                });\n            });\n        }\n\n        return {\n            // Return the post's meta values. This comes in handy for displaying those values in the block.\n            postMeta: select( 'core/editor' ).getEditedPostAttribute( 'meta' ),\n            // Return the data from CTA posts.\n            ctaData: ctaData,\n            // Return the options used in the sidebar slot dropdowns.\n            ctaSelectOptions: ctaSelectOptions,\n        };\n    } );\n\n    /**\n     * \n     * \n     * @param {array} selectedChords The selected chords of the post.\n     * @return {void}\n     */\n    const updateSongChordsBlock = (selectedChords) => {\n        const currentBlock = select( 'core/block-editor' ).getBlocksByClientId( clientId )[ 0 ];\n        \n        if (currentBlock && currentBlock.innerBlocks) {\n            const songChordsBlocks = currentBlock.innerBlocks.filter(block => 'gutenberg-good-guitarist/song-chords' === block.name);\n            const songChordsBlocksIds = songChordsBlocks.map(block => block.id);\n            dispatch('core/block-editor').updateBlockAttributes(songChordsBlocksIds, {\n                chords: selectedChords\n            })\n        }\n    }\n\n    const updateSongDifficultyBlock = () => {\n        const postContent = select('core/editor').getEditedPostContent();\n        const songDifficultyBlock = getBlockTypeFromPostContent(postContent, 'gutenberg-good-guitarist/song-difficulty');\n    }\n    \n\n    // Watch for the song chords to change. If they do, update the post's chord list block(s).\n    useSelect((select) => {\n        let songChords = [];\n        const chordIds = select('core/editor').getEditedPostAttribute('chords');\n        const allChords = select('core').getEntityRecords('taxonomy', 'chords');\n        if (Array.isArray(chordIds) && Array.isArray(allChords)) {\n            const selectedChords = allChords.filter(chord => chordIds.includes(chord.id));\n            songChords = selectedChords.map(chord => chord.name);\n            console.log('the chords', selectedChords)\n            updateSongChordsBlock(selectedChords);\n\n        }\n        // return songChords;\n    });\n\n    // Watch for the song difficulty to change. If it does, update the post's chord list block(s).\n    const songDifficulty = useSelect((select) => {\n        let songDifficulty = '';\n        if (postMeta) {\n            const songDifficultyMeta = postMeta?.song_difficulty;\n            if ( songDifficultyMeta <= 10 ) {\n                songDifficulty = __('Very Beginner');\n            } else if (songDifficulty > 10 && songDifficulty <= 20) {\n                songDifficulty = __('Beginner');\n            } else if (songDifficulty > 20 && songDifficulty <= 30) {\n                songDifficulty = __('Beginner-To-Intermediate');\n            } else if (songDifficulty > 30 && songDifficulty <= 40) {\n                songDifficulty = __('Intermediate');\n            } else if (songDifficulty > 40 && songDifficulty <= 50) {\n                songDifficulty = __('Advanced');\n            }\n        }\n\n        console.log('the diff', postMeta?.song_difficulty)\n    });\n\n    /**\n     * Save meta fields and terms into attributes to be able to nicely display\n     * them on the frontend of the block.\n     * \n     * @return {void}\n     */\n    const updateAttributesWithMetaAndTerms = async () => {\n        let songDifficultyMeta;\n        let songChords = [];\n        const chordIds = select('core/editor').getEditedPostAttribute('chords');\n        const allChords = select('core').getEntityRecords('taxonomy', 'chords');\n        if (Array.isArray(chordIds) && Array.isArray(allChords)) {\n            const selectedChords = allChords.filter(chord => chordIds.includes(chord.id));\n            songChords = selectedChords.map(chord => chord.name);\n        }\n\n        let songDifficulty = '';\n        if (postMeta) {\n            songDifficultyMeta = postMeta?.song_difficulty;\n            if ( songDifficultyMeta <= 10 ) {\n                songDifficulty = __('Very Beginner');\n            } else if (songDifficulty > 10 && songDifficulty <= 20) {\n                songDifficulty = __('Beginner');\n            } else if (songDifficulty > 20 && songDifficulty <= 30) {\n                songDifficulty = __('Beginner-To-Intermediate');\n            } else if (songDifficulty > 30 && songDifficulty <= 40) {\n                songDifficulty = __('Intermediate');\n            } else if (songDifficulty > 40 && songDifficulty <= 50) {\n                songDifficulty = __('Advanced');\n            }\n        }\n\n        console.log('song', songChords, songDifficulty)\n        await setAttributes({\n            songChordsAttribute: songChords,\n            songDifficultyAttribute: songDifficulty,\n            songTitle: 'susssss'\n        })\n\n    };\n\n    // Check if the post is saving and then save the meta and taxonomy into attributes.\n    useEffect(() => {\n        if (isSavingProcess) {\n            updateAttributesWithMetaAndTerms();\n        }\n    }, [isSavingProcess]);\n\n    /**\n     * Handle when the user toggles the sidebar CTAs to the right of the embedded\n     * Youtube video.\n     * \n     * @param {string} sidebarSlot Which sidebar slot to toggle.\n     * @param {number} ctaId Which CTA to display in the sidebar.\n     * @return {void}\n     */\n    const handleSidebarToggle = (sidebarSlot, ctaId) => {\n        if (ctaData) {\n            const numId = Number(ctaId);\n            const cta = ctaData.find(cta => cta.id === numId);\n            setAttributes({ [sidebarSlot]: {\n                id: numId,\n                ...cta\n            }});\n        }\n    }\n\n    /**\n     * Parse the youtube video ID from the URL.\n     * Set the video URL and ID attributes.\n     *\n     * @param {*} event\n     */\n    const handleURLChange = (event) => {\n        let url = event.target.value;\n        let parsedVideoID = null;\n        let videoIDMatch = url.match(/(\\?v=)(\\w|-)+/g);\n        if (videoIDMatch) {\n            parsedVideoID = videoIDMatch[0].replace('?v=', '');\n        }\n        setAttributes({\n            videoID: parsedVideoID,\n            videoUrlRaw: url,\n            videoUrlEmbed: `https://www.youtube.com/embed/${parsedVideoID}`\n        })\n    }\n\n    /**\n     * Update youtube video fetch completion message state and make message visible to user.\n     *\n     * @param {Boolean} completedSuccessfully\n     * @param {String} errorMessage\n     */\n    const showFetchCompleteMessage = ( completedSuccessfully, errorMessage = '' ) => {\n        let fetchMessageClass = '';\n        let fetchMessageText = '';\n        if ( completedSuccessfully ) {\n            fetchMessageClass = 'fetch-message-success';\n            fetchMessageText = __('Video information fetched successfully.');\n        } else {\n            fetchMessageClass = 'fetch-message-fail';\n            fetchMessageText = __('Couldn\\'t fetch video information.') + ` ${errorMessage}`;\n        }\n        setErrorMessage({\n            class: fetchMessageClass,\n            message: fetchMessageText\n        });\n        setTimeout(() => {\n            setErrorMessage({\n                class: 'fetch-message-hidden',\n                message: ''\n            })\n        }, 3000);\n    }\n\n    /**\n     * Handle a successful youtube video fetch.\n     * \n     * Attempts to populate the innerblocks with blocks containing the Youtube description.\n     * It adds a song chords and song difficulty block at the top.\n     * Adds a paragraph block for each line of the Youtube Video description.\n     * If a link is detected, it attempts to add it into a Small CTA block.\n     *\n     * @param {Object} response Youtube fetch response for a single YT video.\n     * @return {void}\n     */\n    const handleFetchResponse = (response) => {\n        try {\n            // Remove old innerBlocks in post body.\n            const currentBlock = select( 'core/block-editor' ).getBlocksByClientId( clientId )[ 0 ];\n            const childBlockIds = currentBlock.innerBlocks.map( block => block.clientId );\n            dispatch( 'core/block-editor' ).removeBlocks( childBlockIds );\n\n            const fetchedTitle = response.result.items[0].snippet.title;\n            const fetchedDescription = response.result.items[0].snippet.description;\n            const fetchedThumbnail = response.result.items[0].snippet.thumbnails.medium.url;\n            const descriptionArray = fetchedDescription.split('\\n');\n            const postBodyBlocks = createBlocksFromDescription(descriptionArray);\n\n            // Update the post title.\n            dispatch('core/editor').editPost({ title: fetchedTitle });\n\n            // Update innerBlocks in post body.\n            dispatch('core/block-editor').insertBlocks(postBodyBlocks, 0, clientId);\n\n            // Set attributes from fetched video info.\n            setAttributes({\n                videoTitle: fetchedTitle,\n                videoThumbnail: fetchedThumbnail,\n                videoInfoFetched: true\n            });\n\n            // Give some feedback to the user that the fetch has completed.\n            showFetchCompleteMessage( true );\n        } catch (error) {\n            // Let the user know the operation failed.\n            showFetchCompleteMessage( false );\n            console.error(error);\n        }\n    }\n\n    /**\n     * Interface with the google client API to perform a fetch request\n     * to get information from the youtube video ID.\n     *\n     * @link https://github.com/google/google-api-javascript-client/blob/master/docs/reference.md\n     *\n     * @param {FormEvent} event A form submit event.\n     * @param {String} videoID The video ID parsed out from the URL the user entered.\n     * @return {void}\n     */\n    const initFetch = (event, videoID) => {\n        event.preventDefault();\n        setIsFetching(true);\n        setErrorMessage({\n            class: 'fetch-message-hidden',\n            message: ''\n        });\n        gapi.load('client', () => {\n            gapi.client.setApiKey(gutenbergVars.youtube_api_key);\n            gapi.client.load('youtube', 'v3', () => {\n                gapi.client.youtube.videos.list({\n                    part: 'snippet',\n                    id : videoID\n                })\n                .then(response => {\n                    // Fetch successful.\n                    setIsFetching(false);\n                    handleFetchResponse(response);\n                }, error => {\n                    setIsFetching(false);\n                    // Let the user know the fetch failed.\n                    showFetchCompleteMessage( false, error );\n                });\n            })\n        })\n    }\n\n    return (\n        <div { ...blockProps } className={ className }>\n            <PluginDocumentSettingPanel\n                name=\"sidebar-cta-slots\"\n                title={__(\"Video sidebar CTA slots\")}\n                className=\"sidebar-cta-slots-panel\"\n            >\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        className=\"sidebar-cta-select-control\"\n                        label={__('Sidebar CTA slot 1')}\n                        value={sidebarCtaSlotOne.id}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => handleSidebarToggle(\"sidebarCtaSlotOne\", newValue)}\n                    />\n                </PanelRow>}\n                {ctaSelectOptions && <PanelRow>\n                     <SelectControl\n                        className=\"sidebar-cta-select-control\"\n                        label={__('Sidebar CTA slot 2')}\n                        value={sidebarCtaSlotTwo.id}\n                        options={ctaSelectOptions}\n                        onChange={(newValue) => handleSidebarToggle(\"sidebarCtaSlotTwo\", newValue)}\n                    />\n                </PanelRow>}\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"song-difficulty-attributes\"\n                title={__('Song difficulty')}\n                className=\"song-difficulty-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <TextControl\n                        label={__('Enter a number from 1 to 50')}\n                        value={ postMeta.song_difficulty }\n                        onChange={ (newValue) => dispatch('core/editor').editPost({meta: { song_difficulty: newValue }})}\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"contains-only-one-barre-chord\"\n                title={__('Contains only one barre chord')}\n                className=\"contains-only-one-barre-chord-panel\"\n            >\n                <PanelRow>\n                    {postMeta && <ToggleControl\n                        label={__('One barre chord song')}\n                        checked={ postMeta.contains_one_barre }\n                        onChange={ (newValue) => dispatch('core/editor').editPost({meta: { contains_one_barre: newValue }}) }\n                    />}\n                </PanelRow>\n            </PluginDocumentSettingPanel>\n            <section className=\"video-details\">\n                <h2>{__('Video Details')}</h2>\n                <span className={`fetch-message ${errorMessage.class}`}>{errorMessage.message}</span>\n                <label className=\"youtube-post-label\" htmlFor=\"youtube-video-url\">Search by Youtube video URL</label>\n                <form onSubmit={(event) => initFetch(event, videoID)}>\n                    <input\n                        id=\"youtube-video-url\"\n                        label={__('Video URL')}\n                        className=\"youtube-video-url\"\n                        value={ videoUrlRaw }\n                        onChange={handleURLChange}\n                    />\n                    <button type=\"submit\" className=\"yt-submit-button\" disabled={isFetching}>{isFetching ? <Spinner /> : __('Submit') }</button>\n                </form>\n                { videoTitle && <TextControl label={__('Video Title')} value={videoTitle} onChange={(value) => setAttributes({videoTitle: value})} />}\n                { ( videoThumbnail && videoInfoFetched ) &&\n                    <>\n                        <label className=\"youtube-post-label\">{__('Video Thumbnail')}</label>\n                        <img src={videoThumbnail} />\n                    </>\n                }\n                <label className=\"youtube-post-label\" htmlFor=\"song-title\">{__('Song Title')}</label>\n                <input id=\"song-title\" type=\"text\" value={songTitle} onChange={(e) => setAttributes({songTitle: e.target.value})} />\n            </section>\n            <section ref={postBody} className=\"post-body\">\n                <h2>{__('Post Body')}</h2>\n                { videoID ? <>\n                    <div className=\"youtube-post-video-area\">\n                        { videoInfoFetched && <iframe width=\"560\"\n                                                  height=\"615\"\n                                                  src={videoUrlEmbed}\n                                                  className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                                  title=\"YouTube video player\"\n                                                  frameborder=\"0\"\n                                                  allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                  allowfullscreen></iframe> }\n                        { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                            { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                            { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                        </div> }\n                    </div>\n                    <div className=\"post-content-video-description\">\n                        <InnerBlocks />\n                    </div>\n                </> : <span className=\"empty-post-body-msg\">{__('Submit URL to populate post body.')}</span> }\n            </section>\n        </div>\n    );\n}","const { InnerBlocks } = wp.blockEditor;\nimport { SidebarCta } from '../../components/SidebarCta';\n\n/**\n * Save component for Youtube Post Template.\n * \n * @param {object} props Gutenberg default props.\n * @returns {JSX}\n */\nexport const BlockSave = ({ attributes }) => {\n    const {\n        songTitle,\n        videoUrlEmbed,\n        videoInfoFetched,\n        sidebarCtaSlotOne,\n        sidebarCtaSlotTwo,\n        songChordsAttribute,\n        songDifficultyAttribute,\n    } = attributes;\n\n    return (\n        <div className=\"wp-block-gutenberg-good-guitarist-ypt\">\n            <div className=\"youtube-post-video-area\">\n                { videoInfoFetched && <iframe width=\"560\"\n                                            height=\"615\"\n                                            src={videoUrlEmbed}\n                                            className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                            title=\"YouTube video player\"\n                                            frameborder=\"0\"\n                                            allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                            allowfullscreen></iframe> }\n                { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                    { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                    { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                </div> }\n            </div>\n            <div className=\"whatup\">{ songDifficultyAttribute }</div>\n            {songChordsAttribute && <div className=\"song-chords\">\n                <span className=\"song-chords-title\">{`${songTitle} Chords:`}</span>\n                <ul className=\"song-chords-list\">{songChordsAttribute.map(chord => <li className=\"chord\">{chord}</li>)}</ul>\n            </div>}\n            {songDifficultyAttribute && <div className=\"song-difficulty\">\n                <span className=\"song-difficulty-title\">{`${songTitle} Difficulty: ${songDifficultyAttribute}`}</span>\n            </div>}\n            <div class={`youtube-post-type-video-description`}>\n                <InnerBlocks.Content />\n            </div>\n        </div>\n    );\n}","import { InnerBlocks } from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\n\nexport const v1 = {\n    attributes: {   \n        videoInfoFetched: {\n            type: 'boolean',\n            default: false\n        },\n        videoTitle: {\n            type: 'string'\n        },\n        videoThumbnail: {\n            type: 'string',\n            default: gutenbergVars.image_dir + '/good-guitarist-preview-img.png'\n        },\n        videoDescription: {\n            type: 'array',\n        },\n        videoID: {\n            type: 'string',\n        },\n        videoUrlRaw: {\n            type: 'string',\n            default: ''\n        },\n        videoUrlEmbed: {\n            type: 'string',\n            default: ''\n        },\n        songTitle: {\n            type: 'string',\n            default: ''\n        },\n        sidebarCtaSlotOne: {\n            type: 'object',\n            default: {},\n        },\n        sidebarCtaSlotTwo: {\n            type: 'object',\n            default: {}\n        },\n        postBodyElements: {\n            type: 'array',\n            default: []\n        }\n    },\n    save: ({ attributes, className }) => {\n        const {\n            videoUrlEmbed,\n            videoInfoFetched,\n            sidebarCtaSlotOne,\n            sidebarCtaSlotTwo\n        } = attributes;\n\n        const SidebarCta = ({cta}) => {\n            const { description, imageUrl, url, buttonText } = cta;\n            return (\n                <div className=\"sidebar-cta-card\">\n                    <img src={imageUrl || gutenbergVars.image_dir + '/good-guitarist-preview-img.png'} alt=\"\" />\n                    <div className=\"cta-card-body\">\n                        <p className=\"body-text\">{description}</p>\n                        <a className=\"cta-url-button\" href={url}>{buttonText || __(\"Click here\")}</a>\n                    </div>\n                </div>\n            )\n        }\n    \n        return (\n            <div className=\"wp-block-gutenberg-good-guitarist-ypt\">\n                <div className=\"youtube-post-video-area\">\n                    { videoInfoFetched && <iframe width=\"560\"\n                                                height=\"615\"\n                                                src={videoUrlEmbed}\n                                                className={(sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0) ? 'iframe-two-third-width' : 'iframe-full-width'}\n                                                title=\"YouTube video player\"\n                                                frameborder=\"0\"\n                                                allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                                allowfullscreen></iframe> }\n                    { ( sidebarCtaSlotOne.id > 0 || sidebarCtaSlotTwo.id > 0 ) && <div className=\"cta-sidebar\">\n                        { sidebarCtaSlotOne.id > 0 && <SidebarCta cta={sidebarCtaSlotOne} />}\n                        { sidebarCtaSlotTwo.id > 0 && <SidebarCta cta={sidebarCtaSlotTwo} />}\n                    </div> }\n                </div>\n                <div class={`youtube-post-type-video-description`}>\n                    <InnerBlocks.Content />\n                </div>\n            </div>\n        );\n    }\n}","const { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\nimport { BlockSave } from './BlockSave';\nimport { v1 } from './deprecated/v1';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt', {\n\tapiVersion: 2,\n\ttitle: 'Youtube Post Template',\n\ticon: 'playlist-video',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type',\n\tattributes: {\n\t\tvideoInfoFetched: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t},\n\t\tvideoTitle: {\n\t\t\ttype: 'string'\n\t\t},\n\t\tvideoThumbnail: {\n\t\t\ttype: 'string',\n\t\t\tdefault: gutenbergVars.image_dir + '/good-guitarist-preview-img.png'\n\t\t},\n\t\tvideoDescription: {\n\t\t\ttype: 'array',\n\t\t},\n\t\tvideoID: {\n\t\t\ttype: 'string',\n\t\t},\n        videoUrlRaw: {\n            type: 'string',\n            default: ''\n        },\n        videoUrlEmbed: {\n            type: 'string',\n            default: ''\n        },\n\t\tsongTitle: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t},\n\t\tsidebarCtaSlotOne: {\n\t\t\ttype: 'object',\n\t\t\tdefault: {},\n\t\t},\n\t\tsidebarCtaSlotTwo: {\n\t\t\ttype: 'object',\n\t\t\tdefault: {}\n\t\t},\n\t\tpostBodyElements: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t},\n\t\tsongChordsAttribute: {\n\t\t\ttype: 'array',\n\t\t\tdefault: []\n\t\t},\n\t\tsongDifficultyAttribute: {\n\t\t\ttype: 'string',\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tdeprecated: [\n\t\tv1,\n\t],\n\tedit: BlockEdit,\n\tsave: BlockSave\n});","const { __ } = wp.i18n;\nconst { serverSideRender: ServerSideRender } = wp;\n\n/**\n * Placeholder block edit that shows what the component will look like on the frontend.\n * \n * Block's Save component is rendered in PHP in views/blocks/ypt-search.php\n * \n * @returns {JSX}\n */\nexport const BlockEdit = () => (\n    <ServerSideRender block=\"gutenberg-good-guitarist/ypt-search\" />\n)","const { __ } = wp.i18n;\nconst { registerBlockType } = wp.blocks;\nimport { BlockEdit } from './BlockEdit';\n\nregisterBlockType( 'gutenberg-good-guitarist/ypt-search', {\n\ttitle: __('Youtube Post Search Box'),\n\ticon: 'search',\n\tcategory: 'layout',\n\tclassName: 'youtube-post-type-search',\n\tattributes: {},\n\tedit: BlockEdit,\n\tsave: () => null\n})","/**\n * Sets a max height for the sidebar CTA dropdowns since there may be\n * very many CTAs to choose from.\n * \n * @todo    Finish this function/see if there's a better way to implement it.\n * @return  {void}\n */\nexport const sidebarCTASelectsMaxHeight = () => {\n    // Hack: Need to set a timer to wait for Gutenber to populate dropdowns.\n    // Not sure if there's a hook/event I can hook into instead.\n    setTimeout(() => {\n        // Give Youtube Post sidebar CTA dropdown max height and make it scroll-able.\n        const sidebarCTASelects = document.querySelectorAll('.sidebar-cta-select-control');\n        \n        sidebarCTASelects.forEach(select => {\n            select.addEventListener('mousedown', (e) => {\n                if (e.target.options.length > 8) {\n                    e.size = 8;\n                }\n            });\n        })\n    }, 3000);\n}\n\n\n/**\n * Bootstrap function for all Gutenberg utility functions.\n * \n * @return {void}\n */\nconst gutenbergUtils = () => {\n    sidebarCTASelectsMaxHeight();\n}\n\n// gutenbergUtils();\n","const { parse } = wp.blockSerializationDefaultParser;\nconst { createBlock } = wp.blocks;\n\n/**\n * Get certain blocks by ID from post content.\n *\n * @param {array} post Post content.\n * @param {string} blockId The block ID to get all instances of.\n * @returns {array}\n */\nexport const getBlockTypeFromPostContent = (post, blockId) => {\n\tconst parsedBlocks = parse(post.content.raw);\n\treturn parsedBlocks.filter(block =>  blockId === block.blockName);\n}\n\n/**\n *  Format CTA data from a CTA post type.\n *\n * @param {array} ctaPosts CTA posts.\n * @returns {array}\n */\nexport const getCtaDataFromPosts = (ctaPosts) => {\n\tconst validCtaPosts = ctaPosts.filter(ctaPost => {\n\t\treturn ctaPost.id ? getBlockTypeFromPostContent(ctaPost, 'gutenberg-good-guitarist/cta-template')[0] : undefined;\n\t})\n\n\treturn validCtaPosts.map(ctaPost => {\n\t\tconst ctaAtts = getBlockTypeFromPostContent(ctaPost, 'gutenberg-good-guitarist/cta-template')[0].attrs;\n\t\treturn {\n\t\t\tid: ctaPost.id,\n\t\t\ttitle: ctaPost.title.raw,\n\t\t\tdescription: ctaAtts.description,\n\t\t\turl: ctaAtts.url,\n\t\t\tbuttonText: ctaAtts.buttonText,\n\t\t\timageId: ctaAtts.imageId,\n\t\t\timageUrl: ctaAtts.imageUrl\n\t\t}\n\t})\n}\n\n/**\n * Check if string has http:// or https:// in it.\n *\n * @param {string} stringToCheck\n * @return {string}\n */\nexport const getLinkFromString = (stringToCheck) => {\n\tconst linkRegex = /(http:\\/\\/|https:\\/\\/).*/g;\n\tlet matchedLink = '';\n\tif ( 'string' === typeof stringToCheck && stringToCheck?.search(linkRegex) >= 0 ) {\n\t\tmatchedLink = stringToCheck.match(linkRegex);\n\t}\n\t// Return the first matched link.\n\treturn matchedLink[0];\n}\n\n/**\n * Create a gutenberg block for each paragraph of the fetched\n * youtube description.\n *\n * @param {array} descriptionArray\n * @returns {object}\n */\nexport const createBlocksFromDescription = (descriptionArray) => {\n\tconst descriptionWithoutEmpties = descriptionArray.filter(description => description.length);\n\treturn descriptionWithoutEmpties.map(description => {\n\t\tlet matchedLink = getLinkFromString(description);\n\t\tlet blockType = 'core/paragraph';\n\t\tlet blockAtts = { content: description };\n\t\tif (matchedLink) {\n\t\t\tblockType = 'gutenberg-good-guitarist/small-cta';\n\t\t\tblockAtts = { url: matchedLink, description: description }\n\t\t}\n\t\treturn createBlock(blockType, blockAtts);\n\t});\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Import Gutenberg custom blocks.\nrequire( './blocks/small-cta' );\nrequire( './blocks/large-cta' );\nrequire( './blocks/cta-template' );\nrequire( './blocks/group' );\nrequire( './blocks/latest-lessons' );\nrequire( './blocks/youtube-post-template' );\nrequire( './blocks/ypt-search' );\nrequire( './blocks/section' );\nrequire( './blocks/song-chords' );\nrequire( './blocks/song-difficulty' );\n\n// Import utils to customize Gutenberg interface.\nrequire( './modules/gutenbergUtils' );"],"names":["wp","components","TextControl","Button","blockEditor","useBlockProps","MediaUpload","MediaUploadCheck","__","i18n","registerBlockType","blocks","title","icon","category","attributes","description","type","default","url","buttonText","imageId","imageUrl","gutenbergVars","image_dir","edit","setAttributes","blockProps","createElement","label","value","onChange","newValue","className","src","onSelect","newImage","id","allowedTypes","render","open","onClick","isLink","isDestructive","save","addFilter","hooks","settings","name","editor","BlockControls","Toolbar","ToolbarDropdownMenu","TextareaControl","useSelect","data","ctaSelectOptions","select","ctaPosts","getEntityRecords","per_page","getCtaDataFromPosts","map","cta","controls","alt","media","href","lessons","window","gutterWidth","gutterStyles","paddingLeft","paddingRight","style","InspectorControls","PanelBody","initialOpen","fontStyle","NumberControl","max","min","InnerBlocks","marginLeft","marginRight","parent","chords","length","chord","i","array","key","difficulty","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_arrayLikeToArray","arr","len","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","push","err","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","TypeError","SidebarCta","PanelRow","SelectControl","ToggleControl","Spinner","PluginDocumentSettingPanel","editPost","dispatch","subscribe","element","useRef","useState","useEffect","isSavingPost","v1","videoInfoFetched","videoTitle","videoThumbnail","videoDescription","videoID","videoUrlRaw","videoUrlEmbed","songTitle","sidebarCtaSlotOne","sidebarCtaSlotTwo","postBodyElements","width","height","frameborder","allow","allowfullscreen","class","apiVersion","songChordsAttribute","songDifficultyAttribute","deprecated","clientId","postBody","isFetching","setIsFetching","isSavingProcess","setSavingProcess","message","errorMessage","setErrorMessage","youtube_api_key","ctaData","forEach","postMeta","getEditedPostAttribute","chordIds","allChords","selectedChords","filter","includes","console","log","currentBlock","getBlocksByClientId","innerBlocks","songChordsBlocksIds","block","updateBlockAttributes","updateSongChordsBlock","songDifficulty","song_difficulty","updateAttributesWithMetaAndTerms","fn","songChords","_context","self","this","args","arguments","apply","undefined","handleSidebarToggle","sidebarSlot","ctaId","numId","Number","find","showFetchCompleteMessage","completedSuccessfully","fetchMessageClass","fetchMessageText","setTimeout","initFetch","event","preventDefault","gapi","load","client","setApiKey","youtube","videos","list","part","response","childBlockIds","removeBlocks","fetchedTitle","result","items","snippet","fetchedDescription","fetchedThumbnail","thumbnails","medium","descriptionArray","split","postBodyBlocks","createBlocksFromDescription","insertBlocks","handleFetchResponse","options","meta","checked","contains_one_barre","htmlFor","onSubmit","target","parsedVideoID","videoIDMatch","match","replace","disabled","e","ref","Content","ServerSideRender","serverSideRender","sidebarCTASelectsMaxHeight","document","querySelectorAll","addEventListener","size","parse","blockSerializationDefaultParser","createBlock","getBlockTypeFromPostContent","post","blockId","content","raw","blockName","ctaPost","ctaAtts","attrs","matchedLink","stringToCheck","linkRegex","search","getLinkFromString","blockType","blockAtts","module","exports","_defineProperty","obj","defineProperty","enumerable","configurable","writable","_extends","assign","bind","source","hasOwnProperty","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","get","prop","r","toStringTag","require"],"sourceRoot":""}